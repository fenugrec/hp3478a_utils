;***********
; NOTE ! this working copy should be considered deprecated
; in favour of the one generated by d48; see dc118.ctl and
; dc118.d48.
;***********

				;
				;	Disassembled by:
				;		DASMx object code disassembler
				;		(c) Copyright 1996-2003   Conquest Consultants
				;		Version 1.40 (Oct 18 2003)
				;
				;	File:		rom_dc118.bin
				;
				;	Size:		8192 bytes
				;	Checksum:	11DB
				;	CRC-32:		10097CED
				;
				;	Date:		Thu Mar 08 15:01:56 2018
				;
				;	CPU:		Intel 8048 (MCS-48 family)
				;
				;
				;
					org	0x0000
				;
0000				reset:
0000 : 00		" "		nop
0001 : 8A FF		"  "		orl	p2,#0xFF
0003				int_ext:
0003 : 00		" "		nop
0004				L0004:
0004 : C4 43		" C"		jmp	L0643
				;
0006 : FF		" "		mov	a,r7
0007				int_tmr:
0007 : 89 FF		"  "		orl	p1,#0xFF
0009				L0009:
0009 : D5		" "		sel	rb1
000A : B8 20		"  "		mov	r0,#0x20
000C : A0		" "		mov	@r0,a
000D : 18		" "		inc	r0
000E : 10		" "		inc	@r0
000F : F0		" "		mov	a,@r0
0010				L0010:
0010 : C6 10		"  "		jz	L0010
0012				L0012:
0012 : 18		" "		inc	r0
0013 : 10		" "		inc	@r0
0014 : 18		" "		inc	r0
0015 : 10		" "		inc	@r0
0016 : 99 00		"  "		anl	p1,#0x00
0018 : 42		"B"		mov	a,t
0019 : A8		" "		mov	r0,a
001A				L001A:
001A : 42		"B"		mov	a,t
001B : D8		" "		xrl	a,r0
001C : C6 1A		"  "		jz	L001A
001E : 42		"B"		mov	a,t
001F : 03 86		"  "		add	a,#0x86
0021 : 62		"b"		mov	t,a
0022 : B8 20		"  "		mov	r0,#0x20
0024 : F0		" "		mov	a,@r0
0025 : 93		" "		retr
				;
0026				L0026:
0026 : B8 22		" ""		mov	r0,#0x22
0028 : F0		" "		mov	a,@r0
0029 : 37		"7"		cpl	a
002A				L002A:
002A : 96 31		" 1"		jnz	L0031
002C : 24 06		"$ "		jmp	L0106
				;
002E				L002E:
002E : F5		" "		sel	mb1
002F : 04 04		"  "		jmp	L0004
				;
0031				L0031:
0031 : B8 3E		" >"		mov	r0,#0x3E
0033				L0033:
0033 : F0		" "		mov	a,@r0
0034 : 52 2E		"R."		jb2	L002E
0036 : 32 AE		"2 "		jb1	L00AE
0038 : 12 9B		"  "		jb0	L009B
003A : B8 40		" @"		mov	r0,#0x40
003C : F0		" "		mov	a,@r0
003D : 53 31		"S1"		anl	a,#0x31
003F : 96 50		" P"		jnz	L0050
0041 : 86 6D		" m"		jni	L006D
0043 : 18		" "		inc	r0
0044 : F0		" "		mov	a,@r0
0045 : 37		"7"		cpl	a
0046 : B2 6D		" m"		jb5	L006D
0048 : D4 F1		"  "		call	L06F1
004A : B8 40		" @"		mov	r0,#0x40
004C : F0		" "		mov	a,@r0
004D : 43 20		"C "		orl	a,#0x20
004F : A0		" "		mov	@r0,a
0050				L0050:
0050 : 18		" "		inc	r0
0051 : F0		" "		mov	a,@r0
0052 : 53 BF		"S "		anl	a,#0xBF
0054				L0054:
0054 : A0		" "		mov	@r0,a
0055 : 54 1F		"T "		call	L021F
0057 : B6 FB		"  "		jf0	L00FB
0059 : B8 40		" @"		mov	r0,#0x40
005B : F0		" "		mov	a,@r0
005C : 92 97		"  "		jb4	L0097
005E : 34 16		"4 "		call	L0116
0060 : B6 8A		"  "		jf0	L008A
0062				L0062:
0062 : 23 03		"# "		mov	a,#0x03
0064				L0064:
0064 : B8 3E		" >"		mov	r0,#0x3E
0066				L0066:
0066 : A0		" "		mov	@r0,a
0067				L0067:
0067 : B8 22		" ""		mov	r0,#0x22
0069 : B0 00		"  "		mov	@r0,#0x00
006B : 04 31		" 1"		jmp	L0031
				;
006D				L006D:
006D : B8 22		" ""		mov	r0,#0x22
006F : F0		" "		mov	a,@r0
0070 : 53 FE		"S "		anl	a,#0xFE
0072				L0072:
0072 : C6 FB		"  "		jz	L00FB
0074 : B8 40		" @"		mov	r0,#0x40
0076 : F0		" "		mov	a,@r0
0077 : 53 3F		"S?"		anl	a,#0x3F
0079 : A0		" "		mov	@r0,a
007A : B4 62		" b"		call	L0562
007C : 76 FB		"v "		jf1	L00FB
007E : 54 00		"T "		call	check_calentry
0080 : C6 F7		"  "		jz	L00F7
0082 : B8 54		" T"		mov	r0,#0x54
0084 : F0		" "		mov	a,@r0
0085 : 43 02		"C "		orl	a,#0x02
0087 : A0		" "		mov	@r0,a
0088 : 04 F7		"  "		jmp	L00F7
				;
008A				L008A:
008A : B8 3F		" ?"		mov	r0,#0x3F
008C				L008C:
008C : F0		" "		mov	a,@r0
008D : 32 93		"2 "		jb1	L0093
008F : 23 01		"# "		mov	a,#0x01
0091 : 04 64		" d"		jmp	L0064
				;
0093				L0093:
0093 : 23 02		"# "		mov	a,#0x02
0095 : 04 64		" d"		jmp	L0064
				;
0097				L0097:
0097 : 23 04		"# "		mov	a,#0x04
0099 : 04 64		" d"		jmp	L0064
				;
009B				L009B:
009B : B8 3F		" ?"		mov	r0,#0x3F
009D : 10		" "		inc	@r0
009E : 54 1F		"T "		call	L021F
00A0 : B8 3F		" ?"		mov	r0,#0x3F
00A2 : F0		" "		mov	a,@r0
00A3 : 03 FF		"  "		add	a,#0xFF
00A5 : A0		" "		mov	@r0,a
00A6				L00A6:
00A6 : B6 FB		"  "		jf0	L00FB
00A8 : 34 16		"4 "		call	L0116
00AA				L00AA:
00AA : B6 67		" g"		jf0	L0067
00AC : 04 93		"  "		jmp	L0093
				;
00AE				L00AE:
00AE : 12 BA		"  "		jb0	GPIB_trig
00B0 : 54 1F		"T "		call	L021F
00B2 : B6 FB		"  "		jf0	L00FB
00B4 : 34 16		"4 "		call	L0116
00B6 : B6 67		" g"		jf0	L0067
00B8 : 04 62		" b"		jmp	L0062
				;
GPIB_trig:
00BA				L00BA:
00BA : 8A 0F		"  "		orl	p2,#0x0F
00BC : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS
00BE : B8 05		"  "		mov	r0,#0x05
00C0 : 23 04		"# "		mov	a,#0x04
00C2 : 90		" "		movx	@r0,a		;AUXMODE=4 trig
00C3 : 0F		" "		movd	a,p7
00C4 : 8A 0F		"  "		orl	p2,#0x0F	;GPIB_release
00C6 : B8 27		" '"		mov	r0,#0x27
00C8 : F0		" "		mov	a,@r0
00C9 : 43 80		"C "		orl	a,#0x80
00CB : A0		" "		mov	@r0,a
00CC : B8 3F		" ?"		mov	r0,#0x3F
00CE : F0		" "		mov	a,@r0
00CF : B8 2C		" ,"		mov	r0,#0x2C
00D1 : B9 38		" 8"		mov	r1,#0x38
00D3 : A1		" "		mov	@r1,a
00D4 : BA 05		"  "		mov	r2,#0x05
00D6				L00D6:
00D6 : 19		" "		inc	r1
00D7 : F0		" "		mov	a,@r0
00D8 : A1		" "		mov	@r1,a
00D9 : 18		" "		inc	r0
00DA : EA D6		"  "		djnz	r2,L00D6
00DC : B8 55		" U"		mov	r0,#0x55
00DE				L00DE:
00DE : F0		" "		mov	a,@r0
00DF : 43 10		"C "		orl	a,#0x10
00E1 : 53 F7		"S "		anl	a,#0xF7
00E3 : A0		" "		mov	@r0,a
00E4 : BF 01		"  "		mov	r7,#0x01
00E6				L00E6:
00E6 : 94 00		"  "		call	L0400
00E8 : B8 40		" @"		mov	r0,#0x40
00EA : F0		" "		mov	a,@r0
00EB : 53 DF		"S "		anl	a,#0xDF
00ED : A0		" "		mov	@r0,a
00EE : 18		" "		inc	r0
00EF : F0		" "		mov	a,@r0
00F0 : 43 10		"C "		orl	a,#0x10
00F2 : A0		" "		mov	@r0,a
00F3				L00F3:
00F3 : 27		"'"		clr	a
00F4 : B8 3E		" >"		mov	r0,#0x3E
00F6 : A0		" "		mov	@r0,a
00F7				L00F7:
00F7 : B8 22		" ""		mov	r0,#0x22
00F9 : B0 00		"  "		mov	@r0,#0x00
00FB				L00FB:
00FB : 93		" "		retr



00FC				L00FC:
00FC : FF		" "		mov	a,r7
00FD : A3		" "		movp	a,@a
00FE : 7E		"~"		addc	a,r6
00FF : AE		" "		mov	r6,a
0100 : FF		" "		mov	a,r7
0101 : A3		" "		movp	a,@a
0102 : 7E		"~"		addc	a,r6
0103 : AE		" "		mov	r6,a
0104 : 44 FC		"D "		jmp	L02FC

;generate a startbit on P27 ?
0106				L0106:
0106 : 9A 7F		"  "		anl	p2,#0x7F	;clr P27 : isol_out
0108 : B9 12		"  "		mov	r1,#0x12
010A				L010A:
010A : E8 0A		"  "		djnz	r0,L010A
010C : E9 0A		"  "		djnz	r1,L010A
010E : 8A 80		"  "		orl	p2,#0x80
0110 : 23 DB		"# "		mov	a,#0xDB
0112 : 94 AF		"  "		call	L04AF
0114 : 04 F7		"  "		jmp	L00F7
				;
0116				L0116:
0116 : 85		" "		clr	f0
0117				L0117:
0117 : B8 40		" @"		mov	r0,#0x40
0119 : F0		" "		mov	a,@r0
011A : 32 1D		"2 "		jb1	L011D
011C : 83		" "		ret
				;
011D				L011D:
011D : B8 30		" 0"		mov	r0,#0x30
011F : F0		" "		mov	a,@r0
0120 : B9 41		" A"		mov	r1,#0x41
0122 : 72 59		"rY"		jb3	L0159
0124 : B8 2D		" -"		mov	r0,#0x2D
0126 : F0		" "		mov	a,@r0
0127 : 03 FD		"  "		add	a,#0xFD
0129 : F6 58		" X"		jc	L0158
012B : 17		" "		inc	a
012C : 96 34		" 4"		jnz	L0134
012E : 18		" "		inc	r0
012F : F0		" "		mov	a,@r0
0130 : 03 90		"  "		add	a,#0x90
0132 : F6 58		" X"		jc	L0158
0134				L0134:
0134 : F1		" "		mov	a,@r1
0135				L0135:
0135 : D2 58		" X"		jb6	L0158
0137				L0137:
0137 : B8 3F		" ?"		mov	r0,#0x3F
0139 : F0		" "		mov	a,@r0
013A : 47		"G"		swap	a
013B : 77		"w"		rr	a
013C : 03 E0		"  "		add	a,#0xE0
013E : AC		" "		mov	r4,a
013F : 53 E0		"S "		anl	a,#0xE0
0141 : C6 58		" X"		jz	L0158
0143				L0143:
0143 : FC		" "		mov	a,r4
0144 : 47		"G"		swap	a
0145 : E7		" "		rl	a
0146				L0146:
0146 : B8 3F		" ?"		mov	r0,#0x3F
0148 : A0		" "		mov	@r0,a
0149 : 34 69		"4i"		call	L0169
014B : 53 0F		"S "		anl	a,#0x0F
014D				L014D:
014D : B8 5E		" ^"		mov	r0,#0x5E
014F : A0		" "		mov	@r0,a
0150 : 95		" "		cpl	f0
0151 : 83		" "		ret
				;
0152				L0152:
0152 : FC		" "		mov	a,r4
0153 : 47		"G"		swap	a
0154 : 34 6D		"4m"		call	L016D
0156 : 96 43		" C"		jnz	L0143
0158				L0158:
0158 : 83		" "		ret
				;
0159				L0159:
0159 : F1		" "		mov	a,@r1
015A : 43 40		"C@"		orl	a,#0x40
015C : A1		" "		mov	@r1,a
015D				L015D:
015D : B8 3F		" ?"		mov	r0,#0x3F
015F : F0		" "		mov	a,@r0
0160 : 47		"G"		swap	a
0161 : 77		"w"		rr	a
0162 : 03 20		"  "		add	a,#0x20
0164 : F6 58		" X"		jc	L0158
0166 : AC		" "		mov	r4,a
0167				L0167:
0167 : 24 52		"$R"		jmp	L0152
				;
0169				L0169:
0169 : B9 3F		" ?"		mov	r1,#0x3F
016B				L016B:
016B : F1		" "		mov	a,@r1
016C : 67		"g"		rrc	a
016D				L016D:
016D : 67		"g"		rrc	a
016E : 53 3F		"S?"		anl	a,#0x3F
0170 : 03 6C		" l"		add	a,#0x6C
0172 : A3		" "		movp	a,@a
0173 : 83		" "		ret
				;
0174 : 00		" "		nop
				;
0175 : 01		" "		db	0x01
				;
0176 : 02		" "		outl	bus,a
0177 : 03 04		"  "		add	a,#0x04
0179 : 05		" "		en	i
017A				L017A:
017A : 00		" "		nop
017B : 00		" "		nop
017C : 00		" "		nop
				;
017D : 82		" "		db	0x82
				;
017E : 83		" "		ret
017F : 84 85		"  "		jmp	L0485
				;
0181 : 00		" "		nop
0182 : 00		" "		nop
0183 : 00		" "		nop
0184 : 00		" "		nop
0185 : 04 05		"  "		jmp	L0005
				;
0187 : 06		" "		db	0x06
				;
0188 : 07		" "		dec	a
0189 : 08		" "		ins	a,bus
018A : 99 AA		"  "		anl	p1,#0xAA
018C : 00		" "		nop
018D : 04 05		"  "		jmp	L0005
				;
018F : 06		" "		db	0x06
				;
0190 : 07		" "		dec	a
0191 : 08		" "		ins	a,bus
0192 : 99 AA		"  "		anl	p1,#0xAA
0194 : 00		" "		nop
0195 : 02		" "		outl	bus,a
0196 : 03 00		"  "		add	a,#0x00
0198 : 00		" "		nop
0199				L0199:
0199 : 00		" "		nop
019A : 00		" "		nop
019B : 00		" "		nop
019C : 00		" "		nop
				;
019D : 82		" "		db	0x82
				;
019E : 83		" "		ret
				;
019F : 00		" "		nop
01A0 : 00		" "		nop
01A1				L01A1:
01A1 : 00		" "		nop
01A2 : 00		" "		nop
01A3 : 00		" "		nop
01A4 : 00		" "		nop
01A5 : AB		" "		mov	r3,a
01A6 : 00		" "		nop
01A7				L01A7:
01A7 : 00		" "		nop
01A8 : 00		" "		nop
01A9 : 00		" "		nop
01AA : 00		" "		nop
01AB : 00		" "		nop
01AC : FF		" "		mov	a,r7
...
(dup 0xFF)

check_calentry:	;verify checksum of cks entry
0200 : F5		" "		sel	mb1
					;idcal = stored @ RAM0[3F]
0201 : D4 00		"  "		call	getaddr(idcal)
0203 : E5		" "		sel	mb0
0204				L0204:
0204 : C6 1E		"  "		jz	L021E
0206 : A8		" "		mov	r0,a
0207 : BA 0B		"  "		mov	r2,#0x0B
0209 : B9 00		"  "		mov	r1,#0x00
020B : BB 0F		"  "		mov	r3,#0x0F
020D				L020D:
020D : 80		" "		movx	a,@r0
020E : 18		" "		inc	r0
020F : 5B		"["		anl	a,r3
0210 : 69		"i"		add	a,r1	;checksum
0211 : A9		" "		mov	r1,a
0212				L0212:
0212 : EA 0D		"  "		djnz	r2,L020D
0214				L0214:
0214 : 80		" "		movx	a,@r0
0215 : 18		" "		inc	r0
0216				L0216:
0216 : 5B		"["		anl	a,r3
0217 : 47		"G"		swap	a
0218				L0218:
0218 : AA		" "		mov	r2,a
0219 : 80		" "		movx	a,@r0
021A : 5B		"["		anl	a,r3
021B : 4A		"J"		orl	a,r2
021C : D9		" "		xrl	a,r1
021D				L021D:
021D : 37		"7"		cpl	a
021E				L021E:
021E : 93		" "		retr



;
021F				L021F:
021F : 85		" "		clr	f0
0220 : B8 3E		" >"		mov	r0,#0x3E
0222 : F0		" "		mov	a,@r0
0223 : 92 68		" h"		jb4	L0268
0225				L0225:
0225 : 72 58		"rX"		jb3	L0258
0227 : 34 69		"4i"		call	L0169
0229 : 37		"7"		cpl	a
022A : F2 5E		" ^"		jb7	L025E
022C : B8 41		" A"		mov	r0,#0x41
022E : F0		" "		mov	a,@r0
022F : 53 FB		"S "		anl	a,#0xFB
0231 : 20		" "		xch	a,@r0
0232 : D3 04		"  "		xrl	a,#0x04
0234 : 53 06		"S "		anl	a,#0x06
0236 : C6 5E		" ^"		jz	L025E
0238 : B8 40		" @"		mov	r0,#0x40
023A : F0		" "		mov	a,@r0
023B : 53 3F		"S?"		anl	a,#0x3F
023D : A0		" "		mov	@r0,a
023E				L023E:
023E : B4 62		" b"		call	L0562
0240 : 76 56		"vV"		jf1	L0256
0242 : 34 69		"4i"		call	L0169
0244 : B8 22		" ""		mov	r0,#0x22
0246 : B0 7C		" |"		mov	@r0,#0x7C
0248 : 92 50		" P"		jb4	L0250
024A : B0 61		" a"		mov	@r0,#0x61
024C				L024C:
024C : B2 50		" P"		jb5	L0250
024E : B0 43		" C"		mov	@r0,#0x43
0250				L0250:
0250 : B8 3E		" >"		mov	r0,#0x3E
0252 : F0		" "		mov	a,@r0
0253 : 03 08		"  "		add	a,#0x08
0255 : A0		" "		mov	@r0,a
0256				L0256:
0256 : 95		" "		cpl	f0
0257 : 83		" "		ret
				;
0258				L0258:
0258 : B8 22		" ""		mov	r0,#0x22
025A : F0		" "		mov	a,@r0
025B : 37		"7"		cpl	a
025C				L025C:
025C : F2 56		" V"		jb7	L0256
025E				L025E:
025E : B8 3E		" >"		mov	r0,#0x3E
0260 : F0		" "		mov	a,@r0
0261 : 53 C7		"S "		anl	a,#0xC7
0263 : 43 10		"C "		orl	a,#0x10
0265 : A0		" "		mov	@r0,a
0266 : 44 6A		"Dj"		jmp	L026A
				;
0268				L0268:
0268 : 72 92		"r "		jb3	L0292
026A				L026A:
026A : B8 40		" @"		mov	r0,#0x40
026C : F0		" "		mov	a,@r0
026D : 43 80		"C "		orl	a,#0x80
026F : 53 BF		"S "		anl	a,#0xBF
0271 : A0		" "		mov	@r0,a
0272 : B4 62		" b"		call	L0562
0274				L0274:
0274 : 76 56		"vV"		jf1	L0256
0276				L0276:
0276 : 54 00		"T "		call	check_calentry
0278 : B8 41		" A"		mov	r0,#0x41
027A : C6 8C		"  "		jz	L028C
027C : F0		" "		mov	a,@r0
027D				L027D:
027D : 43 01		"C "		orl	a,#0x01
027F : A0		" "		mov	@r0,a
0280 : B8 54		" T"		mov	r0,#0x54
0282 : F0		" "		mov	a,@r0
0283				L0283:
0283 : 43 02		"C "		orl	a,#0x02
0285 : A0		" "		mov	@r0,a
0286 : BF DE		"  "		mov	r7,#0xDE
0288 : 94 CE		"  "		call	L04CE
028A : 44 50		"DP"		jmp	L0250
				;
028C				L028C:
028C : F0		" "		mov	a,@r0
028D				L028D:
028D : 53 FE		"S "		anl	a,#0xFE
028F : A0		" "		mov	@r0,a
0290 : 44 50		"DP"		jmp	L0250
				;
0292				L0292:
0292 : B4 5C		" \"		call	L055C
0294 : 76 56		"vV"		jf1	L0256
0296 : D4 00		"  "		call	L0600
0298 : 76 C3		"v "		jf1	L02C3
029A : B8 30		" 0"		mov	r0,#0x30
029C : F0		" "		mov	a,@r0
029D : 12 BF		"  "		jb0	L02BF
029F : 72 C4		"r "		jb3	L02C4
02A1 : B8 40		" @"		mov	r0,#0x40
02A3 : F0		" "		mov	a,@r0
02A4 : 92 C4		"  "		jb4	L02C4
02A6 : 94 13		"  "		call	L0413
02A8 : B8 2D		" -"		mov	r0,#0x2D
02AA : F0		" "		mov	a,@r0
02AB : 03 D0		"  "		add	a,#0xD0
02AD : E6 C4		"  "		jnc	L02C4
02AF : 96 B7		"  "		jnz	L02B7
02B1 : 18		" "		inc	r0
02B2 : F0		" "		mov	a,@r0
02B3 : 03 CF		"  "		add	a,#0xCF
02B5 : E6 C4		"  "		jnc	L02C4
02B7				L02B7:
02B7 : B8 30		" 0"		mov	r0,#0x30
02B9 : F0		" "		mov	a,@r0
02BA : 43 08		"C "		orl	a,#0x08
02BC : A0		" "		mov	@r0,a
02BD : 44 C4		"D "		jmp	L02C4
				;
02BF				L02BF:
02BF : 23 E1		"# "		mov	a,#0xE1
02C1 : 94 AF		"  "		call	L04AF
02C3				L02C3:
02C3 : 95		" "		cpl	f0
02C4				L02C4:
02C4 : B8 3E		" >"		mov	r0,#0x3E
02C6 : F0		" "		mov	a,@r0
02C7 : 53 C7		"S "		anl	a,#0xC7
02C9 : A0		" "		mov	@r0,a
02CA : 83		" "		ret
				;
02CB : FF		" "		mov	a,r7
02CC				L02CC:
02CC : FF		" "		mov	a,r7

dup 0xFF
02FA : FF		" "		mov	a,r7
02FB : FF		" "		mov	a,r7
02FC				L02FC:
02FC : FF		" "		mov	a,r7
02FD : A3		" "		movp	a,@a
02FE : 7E		"~"		addc	a,r6
02FF : AE		" "		mov	r6,a
0300 : FF		" "		mov	a,r7
0301				L0301:
0301 : A3		" "		movp	a,@a
0302 : 7E		"~"		addc	a,r6
0303 : AE		" "		mov	r6,a
0304 : 84 FC		"  "		jmp	L04FC


;0x306 - 0x387 : probably not code, but table data for use via movp3 opcode
0306 : 20		" "		xch	a,@r0
0307 : 03 01		"  "		add	a,#0x01
0309 : 0C		" "		movd	a,p4
030A : 20		" "		xch	a,@r0
				;
030B : 01		" "		db	0x01
				;
030C : 02		" "		outl	bus,a
030D : 0F		" "		movd	a,p7
030E : 12 14		"  "		jb0	L0314
0310 : 05		" "		en	i
0311 : 04 00		"  "		jmp	reset
				;
0313 : 03 01		"  "		add	a,#0x01
0315 : 0C		" "		movd	a,p4
0316 : 20		" "		xch	a,@r0
				;
0317 : 06		" "		db	0x06
				;
0318 : 09		" "		in	a,p1
0319 : 0E		" "		movd	a,p6
031A : 09		" "		in	a,p1
031B				L031B:
031B : 13 08		"  "		addc	a,#0x08
031D : 05		" "		en	i
031E : 04 00		"  "		jmp	reset
				;
0320				L0320:
0320 : 20		" "		xch	a,@r0
0321 : 05		" "		en	i
0322 : 0E		" "		movd	a,p6
				;
0323 : 01		" "		db	0x01
				;
0324 : 02		" "		outl	bus,a
0325 : 0C		" "		movd	a,p4
0326 : 05		" "		en	i
0327 : 20		" "		xch	a,@r0
0328 : 03 01		"  "		add	a,#0x01
032A : 0C		" "		movd	a,p4
032B				L032B:
032B : 20		" "		xch	a,@r0
032C : 00		" "		nop
032D : 03 01		"  "		add	a,#0x01
032F				L032F:
032F : 0C		" "		movd	a,p4
0330 : 09		" "		in	a,p1
0331 : 02		" "		outl	bus,a
0332 : 12 01		"  "		jb0	L0301
0334 : 14 09		"  "		call	L0009
0336 : 0E		" "		movd	a,p6
0337 : 07		" "		dec	a
0338 : 20		" "		xch	a,@r0
0339 : 00		" "		nop
033A : 16 01		"  "		jtf	L0301
033C : 0C		" "		movd	a,p4
033D : 15		" "		dis	i
033E : 05		" "		en	i
033F : 20		" "		xch	a,@r0
0340 : 05		" "		en	i
0341 : 12 12		"  "		jb0	L0312
0343 : 0F		" "		movd	a,p7
0344 : 12 20		"  "		jb0	L0320
0346 : 00		" "		nop
				;
0347 : 01		" "		db	0x01
				;
0348 : 03 20		"  "		add	a,#0x20
034A : 09		" "		in	a,p1
034B : 20		" "		xch	a,@r0
034C : 16 01		"  "		jtf	L0301
034E : 0C		" "		movd	a,p4
034F : 20		" "		xch	a,@r0
0350 : 05		" "		en	i
0351 : 12 12		"  "		jb0	L0312
0353 : 00		" "		nop
0354 : 03 01		"  "		add	a,#0x01
0356 : 0C		" "		movd	a,p4
0357 : 20		" "		xch	a,@r0
0358 : 12 01		"  "		jb0	L0301
035A : 0D		" "		movd	a,p5
035B : 20		" "		xch	a,@r0
				;
035C : 06 01		"  "		db	0x06, 0x01
				;
035E : 09		" "		in	a,p1
035F : 0C		" "		movd	a,p4
0360 : 00		" "		nop
0361 : 81		" "		movx	a,@r1
0362 : 04 20		"  "		jmp	L0020
				;
0364 : 0C		" "		movd	a,p4
0365 : 09		" "		in	a,p1
0366 : 0E		" "		movd	a,p6
				;
0367 : 0B		" "		db	0x0B
				;
0368 : 20		" "		xch	a,@r0
				;
0369 : 06 01		"  "		db	0x06, 0x01
				;
036B : 09		" "		in	a,p1
036C : 0C		" "		movd	a,p4
036D : 00		" "		nop
036E : 81		" "		movx	a,@r1
036F : 04 20		"  "		jmp	L0020
				;
0371 : 13 0C		"  "		addc	a,#0x0C
0373 : 0F		" "		movd	a,p7
0374 : 10		" "		inc	@r0
0375 : 05		" "		en	i
0376 : 20		" "		xch	a,@r0
0377 : 05		" "		en	i
0378 : 12 12		"  "		jb0	L0312
037A : 00		" "		nop
037B : 09		" "		in	a,p1
037C : 0E		" "		movd	a,p6
037D : 16 01		"  "		jtf	L0301
037F : 0C		" "		movd	a,p4
0380 : 09		" "		in	a,p1
0381 : 04 20		"  "		jmp	L0020
				;
0383 : 1A		" "		inc	r2
0384 : 05		" "		en	i
0385 : 12 0F		"  "		jb0	L030F
0387 : 00		" "		nop


dup 0xFF

0400				L0400:
0400 : 23 8D		"# "		mov	a,#0x8D
0402 : 3A		":"		outl	p2,a
0403 : B8 03		"  "		mov	r0,#0x03
0405 : B9 29		" )"		mov	r1,#0x29
0407 : F1		" "		mov	a,@r1
0408 : 5F		"_"		anl	a,r7
0409 : C6 0D		"  "		jz	L040D
040B : 23 40		"#@"		mov	a,#0x40
040D				L040D:
040D : 4F		"O"		orl	a,r7
040E : AF		" "		mov	r7,a
040F : 80		" "		movx	a,@r0
0410 : 4F		"O"		orl	a,r7
0411 : 90		" "		movx	@r0,a
0412 : 93		" "		retr


0413				L0413:
0413 : B8 2D		" -"		mov	r0,#0x2D
0415 : F0		" "		mov	a,@r0
0416 : C8		" "		dec	r0
0417 : B0 99		"  "		mov	@r0,#0x99
0419 : F2 1F		"  "		jb7	L041F
041B : D2 1F		"  "		jb6	L041F
041D : B0 00		"  "		mov	@r0,#0x00
041F				L041F:
041F : B8 41		" A"		mov	r0,#0x41
0421 : F0		" "		mov	a,@r0
0422 : 12 59		" Y"		jb0	L0459
0424 : F5		" "		sel	mb1
0425 : D4 00		"  "		call	getaddr(idcal)
0427 : E5		" "		sel	mb0
0428 : A8		" "		mov	r0,a
0429 : B9 32		" 2"		mov	r1,#0x32
042B : BA 03		"  "		mov	r2,#0x03
042D : B1 99		"  "		mov	@r1,#0x99
042F : 80		" "		movx	a,@r0
0430 : 72 36		"r6"		jb3	L0436
0432 : 52 36		"R6"		jb2	L0436
0434 : B1 00		"  "		mov	@r1,#0x00
0436				L0436:
0436 : F1		" "		mov	a,@r1
0437 : 19		" "		inc	r1
0438 : 53 F0		"S "		anl	a,#0xF0
043A : A1		" "		mov	@r1,a
043B				L043B:
043B : 80		" "		movx	a,@r0
043C : 53 0F		"S "		anl	a,#0x0F
043E : 41		"A"		orl	a,@r1
043F : A1		" "		mov	@r1,a
0440 : 18		" "		inc	r0
0441 : 19		" "		inc	r1
0442 : 80		" "		movx	a,@r0
0443 : 53 0F		"S "		anl	a,#0x0F
0445 : 47		"G"		swap	a
0446 : A1		" "		mov	@r1,a
0447 : 18		" "		inc	r0
0448 : EA 3B		" ;"		djnz	r2,L043B
044A : BA 05		"  "		mov	r2,#0x05
044C : B8 30		" 0"		mov	r0,#0x30
044E : B9 36		" 6"		mov	r1,#0x36
0450 : 97		" "		clr	c
0451				L0451:	;cal2C[] += cal36[] ?
0451 : F0		" "		mov	a,@r0
0452 : 71		"q"		addc	a,@r1
0453 : 57		"W"		da	a
0454 : A0		" "		mov	@r0,a
0455 : C8		" "		dec	r0
0456 : C9		" "		dec	r1
0457 : EA 51		" Q"		djnz	r2,L0451
0459				L0459:
0459 : B8 2C		" ,"		mov	r0,#0x2C
045B : F0		" "		mov	a,@r0
045C : C6 6A		" j"		jz	L046A
045E : B8 30		" 0"		mov	r0,#0x30
0460 : BA 04		"  "		mov	r2,#0x04
0462				L0462:
0462 : F0		" "		mov	a,@r0
0463 : 03 66		" f"		add	a,#0x66
0465 : 37		"7"		cpl	a
0466 : A0		" "		mov	@r0,a
0467 : C8		" "		dec	r0
0468 : EA 62		" b"		djnz	r2,L0462
046A				L046A:
046A : B8 3F		" ?"		mov	r0,#0x3F
046C : F0		" "		mov	a,@r0
046D : B8 2F		" /"		mov	r0,#0x2F
046F : 32 72		"2r"		jb1	L0472
0471 : 18		" "		inc	r0
0472				L0472:
0472 : 67		"g"		rrc	a
0473 : 23 50		"#P"		mov	a,#0x50
0475 : F6 78		" x"		jc	L0478
0477 : 47		"G"		swap	a
0478				L0478:
0478 : 97		" "		clr	c
0479				L0479:
0479 : 70		"p"		addc	a,@r0
047A : 57		"W"		da	a
047B				L047B:
047B : A0		" "		mov	@r0,a
047C : 27		"'"		clr	a
047D : C8		" "		dec	r0
047E : F6 79		" y"		jc	L0479
0480 : B8 30		" 0"		mov	r0,#0x30
0482 : 30		"0"		xchd	a,@r0
0483 : B8 41		" A"		mov	r0,#0x41
0485				L0485:
0485 : F0		" "		mov	a,@r0
0486 : 67		"g"		rrc	a
0487 : E6 8A		"  "		jnc	L048A
0489 : 93		" "		retr
				;
048A				L048A:
048A : B8 2D		" -"		mov	r0,#0x2D
048C : B9 33		" 3"		mov	r1,#0x33
048E : BA 03		"  "		mov	r2,#0x03
0490 : B1 00		"  "		mov	@r1,#0x00
0492				L0492:
0492 : 19		" "		inc	r1
0493 : F0		" "		mov	a,@r0
0494 : A1		" "		mov	@r1,a
0495 : 18		" "		inc	r0
0496 : EA 92		"  "		djnz	r2,L0492
0498 : F5		" "		sel	mb1
0499 : D4 00		"  "		call	getaddr(idcal)
049B : E5		" "		sel	mb0
049C : 03 06		"  "		add	a,#0x06
049E : AF		" "		mov	r7,a
049F : B8 3F		" ?"		mov	r0,#0x3F
04A1 : F0		" "		mov	a,@r0
04A2 : 43 FC		"C "		orl	a,#0xFC
04A4 : 37		"7"		cpl	a
04A5 : 03 03		"  "		add	a,#0x03
04A7 : AE		" "		mov	r6,a
04A8 : BC 04		"  "		mov	r4,#0x04
04AA : 85		" "		clr	f0
04AB : BB 65		" e"		mov	r3,#0x65
04AD : A4 06		"  "		jmp	L0506


; i: a=pRAM for tbl @ 0x300 ?
04AF				L04AF:
04AF : AF		" "		mov	r7,a
04B0 : A3		" "		movp	a,@a
04B1 : AA		" "		mov	r2,a
04B2 : B8 55		" U"		mov	r0,#0x55
04B4 : F0		" "		mov	a,@r0
04B5 : 43 C6		"C "		orl	a,#0xC6
04B7 : 53 FE		"S "		anl	a,#0xFE
04B9 : A0		" "		mov	@r0,a
04BA : B8 5D		" ]"		mov	r0,#0x5D
04BC : B0 00		"  "		mov	@r0,#0x00
04BE : B8 2A		" *"		mov	r0,#0x2A
04C0 : F0		" "		mov	a,@r0
04C1 : 37		"7"		cpl	a
04C2 : F2 CA		"  "		jb7	L04CA
04C4 : B2 CA		"  "		jb5	L04CA
04C6 : F0		" "		mov	a,@r0
04C7 : 43 40		"C@"		orl	a,#0x40
04C9 : A0		" "		mov	@r0,a
04CA				L04CA:
04CA : F5		" "		sel	mb1
04CB : B4 C5		"  "		call	L0DC5
04CD : E5		" "		sel	mb0
04CE				L04CE:
04CE : 1F		" "		inc	r7
04CF : FF		" "		mov	a,r7
04D0 : A3		" "		movp	a,@a
04D1 : B8 42		" B"		mov	r0,#0x42
04D3 : 40		"@"		orl	a,@r0
04D4 : A0		" "		mov	@r0,a
04D5 : 1F		" "		inc	r7
04D6 : FF		" "		mov	a,r7
04D7 : A3		" "		movp	a,@a
04D8 : AF		" "		mov	r7,a
04D9 : 84 00		"  "		jmp	L0400
				;
04DB : 61		"a"		add	a,@r1
04DC : 20		" "		xch	a,@r0
04DD : 08		" "		ins	a,bus
04DE : 00		" "		nop
				;
04DF : 01		" "		db	0x01
				;
04E0 : 08		" "		ins	a,bus
04E1				L04E1:
04E1 : 6E		"n"		add	a,r6
04E2 : 08		" "		ins	a,bus
04E3 : 08		" "		ins	a,bus
04E4 : FF		" "		mov	a,r7
04E5 : FF		" "		mov	a,r7
04E6 : FF		" "		mov	a,r7


dup 0xFF

04FC				L04FC:
04FC : FF		" "		mov	a,r7
04FD : A3		" "		movp	a,@a
04FE : 7E		"~"		addc	a,r6
04FF : AE		" "		mov	r6,a
0500 : FF		" "		mov	a,r7
0501 : A3		" "		movp	a,@a
0502 : 7E		"~"		addc	a,r6
0503 : AE		" "		mov	r6,a
0504 : C4 FD		"  "		jmp	L06FD
				;
0506				L0506:
0506 : B6 09		"  "		jf0	L0509
0508 : CC		" "		dec	r4
0509				L0509:
0509 : 95		" "		cpl	f0
050A : FF		" "		mov	a,r7
050B : A8		" "		mov	r0,a
050C : 80		" "		movx	a,@r0
050D : 72 2A		"r*"		jb3	L052A
050F : 53 0F		"S "		anl	a,#0x0F
0511 : C6 47		" G"		jz	L0547
0513 : AD		" "		mov	r5,a
0514				L0514:
0514 : FC		" "		mov	a,r4
0515 : AA		" "		mov	r2,a
0516 : B8 30		" 0"		mov	r0,#0x30
0518 : B9 36		" 6"		mov	r1,#0x36
051A				L051A:
051A : 97		" "		clr	c
051B				L051B:
051B : F0		" "		mov	a,@r0
051C : 71		"q"		addc	a,@r1
051D : 57		"W"		da	a
051E : A0		" "		mov	@r0,a
051F				L051F:
051F : C8		" "		dec	r0
0520 : C9		" "		dec	r1
0521 : EA 1B		"  "		djnz	r2,L051B
0523				L0523:
0523 : 1A		" "		inc	r2
0524 : F6 1B		"  "		jc	L051B
0526				L0526:
0526 : ED 14		"  "		djnz	r5,L0514
0528 : A4 47		" G"		jmp	L0547
				;
052A				L052A:
052A : 37		"7"		cpl	a
052B : 53 0F		"S "		anl	a,#0x0F
052D : AD		" "		mov	r5,a
052E : 1D		" "		inc	r5
052F				L052F:
052F : FC		" "		mov	a,r4
0530				L0530:
0530 : AA		" "		mov	r2,a
0531 : B8 30		" 0"		mov	r0,#0x30
0533 : B9 36		" 6"		mov	r1,#0x36
0535 : 97		" "		clr	c
0536 : A7		" "		cpl	c
0537				L0537:
0537 : F1		" "		mov	a,@r1
0538 : A7		" "		cpl	c
0539				L0539:
0539 : 7B		"{"		addc	a,r3
053A : 37		"7"		cpl	a
053B : 60		"`"		add	a,@r0
053C : 57		"W"		da	a
053D : A0		" "		mov	@r0,a
053E : C8		" "		dec	r0
053F : C9		" "		dec	r1
0540 : EA 37		" 7"		djnz	r2,L0537
0542 : 1A		" "		inc	r2
0543 : E6 37		" 7"		jnc	L0537
0545 : ED 2F		" /"		djnz	r5,L052F
0547				L0547:
0547 : EE 4E		" N"		djnz	r6,L054E
0549 : B8 30		" 0"		mov	r0,#0x30
054B : 27		"'"		clr	a
054C				L054C:
054C : 30		"0"		xchd	a,@r0
054D : 93		" "		retr
				;
054E				L054E:
054E : 1F		" "		inc	r7
054F : B9 34		" 4"		mov	r1,#0x34
0551 : BA 03		"  "		mov	r2,#0x03
0553 : 27		"'"		clr	a
0554				L0554:
0554 : 21		"!"		xch	a,@r1
0555 : 47		"G"		swap	a
0556 : 31		"1"		xchd	a,@r1
0557 : 19		" "		inc	r1
0558 : EA 54		" T"		djnz	r2,L0554
055A : A4 06		"  "		jmp	L0506
				;
055C				L055C:
055C : B8 40		" @"		mov	r0,#0x40
055E : F0		" "		mov	a,@r0
055F : 43 40		"C@"		orl	a,#0x40
0561 : A0		" "		mov	@r0,a
0562				L0562:
0562 : A5		" "		clr	f1
0563 : B8 3E		" >"		mov	r0,#0x3E
0565 : B9 20		"  "		mov	r1,#0x20
0567				L0567:
0567 : 8A 80		"  "		orl	p2,#0x80
0569 : 56 6F		"Vo"		jt1	L056F
056B : E9 67		" g"		djnz	r1,L0567
056D : C4 2D		" -"		jmp	L062D
				;
056F				L056F:
056F : B9 10		"  "		mov	r1,#0x10
0571 : 9A 7F		"  "		anl	p2,#0x7F
0573				L0573:
0573 : E9 77		" w"		djnz	r1,L0577
0575 : A4 9A		"  "		jmp	L059A
				;
0577				L0577:
0577 : 56 73		"Vs"		jt1	L0573
0579 : B9 02		"  "		mov	r1,#0x02
057B : 35		"5"		dis	tcnti
057C				L057C:
057C : 18		" "		inc	r0
057D : F0		" "		mov	a,@r0
057E : 8A 80		"  "		orl	p2,#0x80
0580 : BA 08		"  "		mov	r2,#0x08
0582 : 46 88		"F "		jnt1	L0588
0584 : C4 2D		" -"		jmp	L062D
				;
0586				L0586:
0586 : 00		" "		nop
0587 : E7		" "		rl	a
0588				L0588:
0588 : F2 92		"  "		jb7	L0592
058A : 9A 7F		"  "		anl	p2,#0x7F
058C				L058C:
058C : EA 86		"  "		djnz	r2,L0586
058E : E9 7C		" |"		djnz	r1,L057C
0590 : A4 9B		"  "		jmp	L059B
				;
0592				L0592:
0592 : 8A 80		"  "		orl	p2,#0x80
0594 : EA 86		"  "		djnz	r2,L0586
0596 : E9 7C		" |"		djnz	r1,L057C
0598 : A4 9B		"  "		jmp	L059B
				;
059A				L059A:
059A : B5		" "		cpl	f1
059B				L059B:
059B : 9A 7F		"  "		anl	p2,#0x7F
059D : BA 02		"  "		mov	r2,#0x02
059F				L059F:
059F : EA 9F		"  "		djnz	r2,L059F
05A1 : 8A 80		"  "		orl	p2,#0x80
05A3 : 76 AB		"v "		jf1	L05AB
05A5 : B8 41		" A"		mov	r0,#0x41
05A7 : F0		" "		mov	a,@r0
05A8				L05A8:
05A8 : 53 FD		"S "		anl	a,#0xFD
05AA : A0		" "		mov	@r0,a
05AB				L05AB:
05AB : 25		"%"		en	tcnti
05AC : 42		"B"		mov	a,t
05AD : F2 B7		"  "		jb7	L05B7
05AF : 42		"B"		mov	a,t
05B0 : F2 B7		"  "		jb7	L05B7
05B2 : 35		"5"		dis	tcnti
05B3 : 14 07		"  "		call	int_tmr
05B5				L05B5:
05B5 : A4 AB		"  "		jmp	L05AB
05B7				L05B7:
05B7 : 93		" "		retr

dup 0xFF
05FE : FF		" "		mov	a,r7
05FF : FF		" "		mov	a,r7
0600				L0600:
0600 : A5		" "		clr	f1
0601 : 8A 80		"  "		orl	p2,#0x80
0603 : B8 00		"  "		mov	r0,#0x00
0605				L0605:
0605 : 46 0B		"F "		jnt1	L060B
0607 : E8 05		"  "		djnz	r0,L0605
0609 : C4 2D		" -"		jmp	L062D
				;
060B				L060B:
060B : 35		"5"		dis	tcnti
060C : 9A 7F		"  "		anl	p2,#0x7F
060E : BB 00		"  "		mov	r3,#0x00
0610				L0610:
0610 : 56 16		"V "		jt1	L0616
0612 : EB 10		"  "		djnz	r3,L0610
0614 : C4 2D		" -"		jmp	L062D
				;
0616				L0616:
0616 : B8 2D		" -"		mov	r0,#0x2D
0618 : B9 04		"  "		mov	r1,#0x04
061A				L061A:
061A : BA 08		"  "		mov	r2,#0x08
061C : 27		"'"		clr	a
061D				L061D:
061D : 56 22		"V""		jt1	L0622
061F : E7		" "		rl	a
0620 : C4 25		" %"		jmp	L0625
				;
0622				L0622:
0622 : E7		" "		rl	a
0623 : 17		" "		inc	a
0624 : 00		" "		nop
0625				L0625:
0625 : A0		" "		mov	@r0,a
0626 : EA 1D		"  "		djnz	r2,L061D
0628 : 46 36		"F6"		jnt1	L0636
062A : 18		" "		inc	r0
062B : E9 1A		"  "		djnz	r1,L061A
062D				L062D:
062D : 8A 80		"  "		orl	p2,#0x80
062F : B4 AB		"  "		call	L05AB
0631 : 34 06		"4 "		call	L0106
0633 : A5		" "		clr	f1
0634 : B5		" "		cpl	f1
0635 : 93		" "		retr
				;
0636				L0636:
0636 : E9 2D		" -"		djnz	r1,L062D
0638 : B4 B7		"  "		call	L05B7
063A : 46 2D		"F-"		jnt1	L062D
063C : 8A 80		"  "		orl	p2,#0x80	;set P27 (isol_dout)
063E : B8 31		" 1"		mov	r0,#0x31
0640 : A0		" "		mov	@r0,a
0641 : A4 AB		"  "		jmp	L05AB
				;
0643				L0643:
0643 : 75		"u"		ent0	clk
0644 : 9A 7F		"  "		anl	p2,#0x7F	;clr P27 (isol_dout)
0646 : 80		" "		movx	a,@r0
0647 : 90		" "		movx	@r0,a
0648 : B8 00		"  "		mov	r0,#0x00
064A				L064A:
064A : F8		" "		mov	a,r0
064B : 39		"9"		outl	p1,a
064C : 53 7F		"S "		anl	a,#0x7F
064E : 43 60		"C`"		orl	a,#0x60
0650				L0650:
0650 : 3A		":"		outl	p2,a
0651 : 09		" "		in	a,p1
0652 : 39		"9"		outl	p1,a
0653 : E8 4A		" J"		djnz	r0,L064A
0655 : 8A 5F		" _"		orl	p2,#0x5F
0657 : 9A 5B		" ["		anl	p2,#0x5B
0659 : 80		" "		movx	a,@r0
065A : 8A DF		"  "		orl	p2,#0xDF
065C : 9A DD		"  "		anl	p2,#0xDD	;GPIB_CS (for init)
065E : B9 05		"  "		mov	r1,#0x05
0660				L0660:
0660 : 23 02		"# "		mov	a,#0x02
0662 : 91		" "		movx	@r1,a		;AUXMODE = 02 creset
0663 : 27		"'"		clr	a
0664				L0664:
0664 : 91		" "		movx	@r1,a		;AUXMODE=0 pon
0665 : B9 04		"  "		mov	r1,#0x04
0667 : 23 80		"# "		mov	a,#0x80
0669 : 91		" "		movx	@r1,a	;ADDRMODE = 80 tonly
066A : B8 00		"  "		mov	r0,#0x00
066C				L066C:
066C : B9 00		"  "		mov	r1,#0x00
066E : F8		" "		mov	a,r0
066F : 91		" "		movx	@r1,a	;DOUT = 0
0670 : B9 03		"  "		mov	r1,#0x03
0672 : 91		" "		movx	@r1,a	;SPMODE = 0
0673 : 81		" "		movx	a,@r1	;a=SPSTAT
0674 : E8 6C		" l"		djnz	r0,L066C
0676 : 8A FF		"  "		orl	p2,#0xFF	;GPIB_release
0678 : 9A F7		"  "		anl	p2,#0xF7	;calRAM_CE
067A : B8 00		"  "		mov	r0,#0x00
067C				L067C:
067C : F8		" "		mov	a,r0
067D : 90		" "		movx	@r0,a
067E : 80		" "		movx	a,@r0
067F : F8		" "		mov	a,r0
0680 : 37		"7"		cpl	a
0681 : 90		" "		movx	@r0,a
0682 : 80		" "		movx	a,@r0
0683 : E8 7C		" |"		djnz	r0,L067C
0685 : 04 00		"  "		jmp	reset
				;
0687				L0687:
0687 : BF 32		" 2"		mov	r7,#0x32
0689 : BE 0F		"  "		mov	r6,#0x0F
068B : 8A 0F		"  "		orl	p2,#0x0F
068D : 9A F7		"  "		anl	p2,#0xF7
068F				L068F:
068F : FE		" "		mov	a,r6
0690 : F5		" "		sel	mb1
0691 : D4 0D		"  "		call	L0E0D
0693 : E5		" "		sel	mb0
0694 : 54 04		"T "		call	L0204
0696 : 96 9F		"  "		jnz	L069F
0698 : 1E		" "		inc	r6
0699 : EF 8F		"  "		djnz	r7,L068F
069B : BD 00		"  "		mov	r5,#0x00
069D : C4 A1		"  "		jmp	L06A1
				;
069F				L069F:
069F : BD C5		"  "		mov	r5,#0xC5
06A1				L06A1:
06A1 : B4 5C		" \"		call	L055C
06A3 : 76 BB		"v "		jf1	L06BB
06A5 : D4 00		"  "		call	L0600
06A7 : 76 BB		"v "		jf1	L06BB
06A9 : 27		"'"		clr	a
06AA				L06AA:
06AA : AB		" "		mov	r3,a
06AB : AC		" "		mov	r4,a
06AC : B8 30		" 0"		mov	r0,#0x30
06AE : F0		" "		mov	a,@r0
06AF : 53 39		"S9"		anl	a,#0x39
06B1 : D3 08		"  "		xrl	a,#0x08
06B3 : C6 BD		"  "		jz	L06BD
06B5				L06B5:
06B5 : F0		" "		mov	a,@r0
06B6 : A3		" "		movp	a,@a
06B7 : BC C9		"  "		mov	r4,#0xC9
06B9 : C4 BD		"  "		jmp	L06BD
				;
06BB				L06BB:
06BB : BB C7		"  "		mov	r3,#0xC7
06BD				L06BD:
06BD : B8 2F		" /"		mov	r0,#0x2F
06BF : F0		" "		mov	a,@r0
06C0 : B8 43		" C"		mov	r0,#0x43
06C2 : A0		" "		mov	@r0,a
06C3 : 93		" "		retr
				;
06C4				L06C4:
06C4 : FF		" "		mov	a,r7
06C5 : FF		" "		mov	a,r7
06C6 : FF		" "		mov	a,r7
06C7 : FF		" "		mov	a,r7
06C8 : FF		" "		mov	a,r7
06C9 : FF		" "		mov	a,r7
06CA : FF		" "		mov	a,r7
06CB : FF		" "		mov	a,r7
06CC : FF		" "		mov	a,r7
06CD : FF		" "		mov	a,r7
06CE : FF		" "		mov	a,r7
06CF : FF		" "		mov	a,r7
06D0				L06D0:
06D0 : 00		" "		nop
06D1 : 00		" "		nop
06D2 : 00		" "		nop
06D3 : 14 26		" &"		call	L0026
06D5				L06D5:
06D5 : 8A 40		" @"		orl	p2,#0x40
06D7 : 00		" "		nop
06D8 : 34 5D		"4]"		call	L015D
06DA				L06DA:
06DA : 8A 40		" @"		orl	p2,#0x40
06DC : 00		" "		nop
06DD : 34 37		"47"		call	L0137
06DF				L06DF:
06DF : 8A 40		" @"		orl	p2,#0x40
06E1 : 00		" "		nop
06E2 : 34 6B		"4k"		call	L016B
06E4				L06E4:
06E4 : 8A 40		" @"		orl	p2,#0x40
06E6 : 00		" "		nop
06E7				L06E7:
06E7 : 04 FC		"  "		jmp	L00FC

;flip to A12=1 @ 16eb
06E9				L06E9:
06E9 : 8A 40		" @"		orl	p2,#0x40
06EB : 00		" "		nop

06EC : D4 87		"  "		call	L0687
06EE : 8A 40		" @"		orl	p2,#0x40
06F0 : 00		" "		nop
06F1				L06F1:
06F1 : 8A 40		" @"		orl	p2,#0x40
06F3 : 00		" "		nop
06F4 : 00		" "		nop
06F5 : 00		" "		nop
06F6 : 00		" "		nop
06F7 : 00		" "		nop
06F8 : 00		" "		nop
06F9 : 83		" "		ret
				;
06FA : FF		" "		mov	a,r7
06FB : FF		" "		mov	a,r7
06FC : FF		" "		mov	a,r7

06FD				L06FD:
06FD : FF		" "		mov	a,r7
06FE : A3		" "		movp	a,@a
06FF : 7E		"~"		addc	a,r6
0700 : AE		" "		mov	r6,a
0701 : FF		" "		mov	a,r7
0702 : A3		" "		movp	a,@a
0703 : 7E		"~"		addc	a,r6
0704 : AE		" "		mov	r6,a
0705 : F5		" "		sel	mb1
0706				L0706:
0706 : 04 FC		"  "		jmp	L08FC
				;
0708				L0708:
0708 : FF		" "		mov	a,r7


dup 0xFF
07FE : FF		" "		mov	a,r7
07FF : FF		" "		mov	a,r7
0800 : 8A 40		" @"		orl	p2,#0x40
0802 : 00		" "		nop
0803 : 83		" "		ret
				;
0804 : B8 57		" W"		mov	r0,#0x57
0806 : F0		" "		mov	a,@r0
0807 : 96 F0		"  "		jnz	L08F0
0809 : B8 3F		" ?"		mov	r0,#0x3F
080B : F0		" "		mov	a,@r0
080C : B9 56		" V"		mov	r1,#0x56
080E : A1		" "		mov	@r1,a
080F : 53 FC		"S "		anl	a,#0xFC
0811 : 17		" "		inc	a
0812 : A0		" "		mov	@r0,a
0813 : B8 38		" 8"		mov	r0,#0x38
0815 : A0		" "		mov	@r0,a
0816 : B8 40		" @"		mov	r0,#0x40
0818 : F0		" "		mov	a,@r0
0819 : 43 04		"C "		orl	a,#0x04
081B : A0		" "		mov	@r0,a
081C : 8A 0F		"  "		orl	p2,#0x0F
081E : 9A F7		"  "		anl	p2,#0xF7
0820 : B9 00		"  "		mov	r1,#0x00
0822 : 81		" "		movx	a,@r1
0823 : 37		"7"		cpl	a		;invert nib @ 00 . lols
0824 : F4 65		" e"		call	write_calRAM
0826 : 76 F8		"v "		jf1	L08F8
0828 : B8 58		" X"		mov	r0,#0x58
082A : BA 05		"  "		mov	r2,#0x05
082C : F4 09		"  "		call	clr_0f09
082E : B8 3F		" ?"		mov	r0,#0x3F
0830 : F0		" "		mov	a,@r0
0831 : D3 40		" @"		xrl	a,#0x40
0833 : 53 60		"S`"		anl	a,#0x60
0835 : 85		" "		clr	f0
0836 : 96 39		" 9"		jnz	L0839
0838 : 95		" "		cpl	f0
0839				L0839:
0839 : B8 26		" &"		mov	r0,#0x26
083B : F0		" "		mov	a,@r0
083C : 92 F2		"  "		jb4	L08F2
083E : B6 DD		"  "		jf0	L08DD
0840 : B8 30		" 0"		mov	r0,#0x30
0842 : F0		" "		mov	a,@r0
0843 : 53 09		"S "		anl	a,#0x09
0845 : 96 F4		"  "		jnz	L08F4
0847 : B8 2D		" -"		mov	r0,#0x2D
0849 : F0		" "		mov	a,@r0
084A : 03 05		"  "		add	a,#0x05
084C : 57		"W"		da	a
084D : F2 F4		"  "		jb7	L08F4
084F : D2 F4		"  "		jb6	L08F4
0851 : 53 F0		"S "		anl	a,#0xF0
0853 : 97		" "		clr	c
0854 : 96 57		" W"		jnz	L0857
0856 : A7		" "		cpl	c
0857				L0857:
0857 : B8 39		" 9"		mov	r0,#0x39
0859 : B0 00		"  "		mov	@r0,#0x00
085B : 18		" "		inc	r0
085C : A0		" "		mov	@r0,a
085D : 18		" "		inc	r0
085E : BA 03		"  "		mov	r2,#0x03
0860 : F4 09		"  "		call	clr_0f09
0862 : B8 55		" U"		mov	r0,#0x55
0864 : B0 14		"  "		mov	@r0,#0x14
0866				L0866:
0866 : 14 00		"  "		call	reset
0868 : B8 21		" !"		mov	r0,#0x21
086A : F0		" "		mov	a,@r0
086B : 32 6F		"2o"		jb1	L086F
086D : 04 66		" f"		jmp	L0066
				;
086F				L086F:
086F : 53 01		"S "		anl	a,#0x01
0871 : A0		" "		mov	@r0,a
0872				L0872:
0872 : 23 7F		"# "		mov	a,#0x7F
0874 : B9 04		"  "		mov	r1,#0x04
0876				L0876:
0876 : AF		" "		mov	r7,a
0877 : 39		"9"		outl	p1,a
0878 : 09		" "		in	a,p1
0879 : 2F		"/"		xch	a,r7
087A : DF		" "		xrl	a,r7
087B : 96 87		"  "		jnz	L0887
087D : FF		" "		mov	a,r7
087E : 77		"w"		rr	a
087F : E9 76		" v"		djnz	r1,L0876
0881 : B8 24		" $"		mov	r0,#0x24
0883 : B0 00		"  "		mov	@r0,#0x00
0885 : 04 66		" f"		jmp	L0066
				;
0887				L0887:
0887 : B8 24		" $"		mov	r0,#0x24
0889 : F0		" "		mov	a,@r0
088A : F2 66		" f"		jb7	L0866
088C : FF		" "		mov	a,r7
088D : C6 72		" r"		jz	L0872
088F : B0 80		"  "		mov	@r0,#0x80
0891 : FF		" "		mov	a,r7
0892 : D3 BD		"  "		xrl	a,#0xBD
0894 : C6 A0		"  "		jz	L08A0
0896 : D3 06		"  "		xrl	a,#0x06
0898 : C6 A8		"  "		jz	L08A8
089A : D3 C5		"  "		xrl	a,#0xC5
089C : 96 F6		"  "		jnz	L08F6
089E : 24 38		"$8"		jmp	L0138
				;
08A0				L08A0:
08A0 : F6 66		" f"		jc	L0866
08A2 : BB 00		"  "		mov	r3,#0x00
08A4 : 97		" "		clr	c
08A5 : A7		" "		cpl	c
08A6 : 04 AD		"  "		jmp	L00AD
				;
08A8				L08A8:
08A8 : F6 66		" f"		jc	L0866
08AA : BB 99		"  "		mov	r3,#0x99
08AC : 97		" "		clr	c
08AD : B8 3C		" <"		mov	r0,#0x3C
08AF : BA 03		"  "		mov	r2,#0x03
08B1				L08B1:
08B1 : F0		" "		mov	a,@r0
08B2 : 7B		"{"		addc	a,r3
08B3 : 57		"W"		da	a
08B4 : A0		" "		mov	@r0,a
08B5 : C8		" "		dec	r0
08B6 : EA B1		"  "		djnz	r2,L08B1
08B8 : B8 55		" U"		mov	r0,#0x55
08BA : B0 14		"  "		mov	@r0,#0x14
08BC : 97		" "		clr	c
08BD : 14 00		"  "		call	reset
08BF : 23 0F		"# "		mov	a,#0x0F
08C1 : 39		"9"		outl	p1,a
08C2 : 09		" "		in	a,p1
08C3 : D3 0F		"  "		xrl	a,#0x0F
08C5 : C6 66		" f"		jz	L0866
08C7 : B8 21		" !"		mov	r0,#0x21
08C9 : F0		" "		mov	a,@r0
08CA : B2 CE		"  "		jb5	L08CE
08CC : 04 BD		"  "		jmp	L00BD
				;
08CE				L08CE:
08CE : 53 20		"S "		anl	a,#0x20
08D0 : A0		" "		mov	@r0,a
08D1 : B8 24		" $"		mov	r0,#0x24
08D3 : B0 00		"  "		mov	@r0,#0x00
08D5 : B9 18		"  "		mov	r1,#0x18
08D7				L08D7:
08D7 : E8 D7		"  "		djnz	r0,L08D7
08D9 : E9 D7		"  "		djnz	r1,L08D7
08DB : 04 72		" r"		jmp	L0072
				;
08DD				L08DD:
08DD : B8 3F		" ?"		mov	r0,#0x3F
08DF : F0		" "		mov	a,@r0
08E0 : 53 E3		"S "		anl	a,#0xE3
08E2 : F2 E6		"  "		jb7	L08E6
08E4 : 03 04		"  "		add	a,#0x04
08E6				L08E6:
08E6 : 03 04		"  "		add	a,#0x04
08E8 : A0		" "		mov	@r0,a
08E9 : B8 38		" 8"		mov	r0,#0x38
08EB : A0		" "		mov	@r0,a
08EC : 23 30		"#0"		mov	a,#0x30
08EE : 04 53		" S"		jmp	L0053
08F0				L08F0:
08F0 : 44 00		"D "		jmp	sub0A00
08F2				L08F2:
08F2 : 24 06		"$ "		jmp	L0106
08F4				L08F4:
08F4 : 44 B4		"D "		jmp	L02B4
08F6				L08F6:
08F6 : 44 EE		"D "		jmp	L02EE
				;
08F8				L08F8:
08F8 : BA 20		"  "		mov	r2,#0x20
08FA : 44 CC		"D "		jmp	L02CC
				;
08FC : FF		" "		mov	a,r7
08FD : A3		" "		movp	a,@a
08FE : 7E		"~"		addc	a,r6
08FF : AE		" "		mov	r6,a
0900 : FF		" "		mov	a,r7
0901 : A3		" "		movp	a,@a
0902 : 7E		"~"		addc	a,r6
0903 : AE		" "		mov	r6,a
0904 : 44 FC		"D "		jmp	L02FC
				;
0906 : B8 45		" E"		mov	r0,#0x45
0908 : BA 06		"  "		mov	r2,#0x06
090A : B9 3D		" ="		mov	r1,#0x3D
090C : B1 00		"  "		mov	@r1,#0x00
090E				L090E:
090E : F0		" "		mov	a,@r0
090F : 53 3F		"S?"		anl	a,#0x3F
0911 : 03 C6		"  "		add	a,#0xC6
0913 : 03 0A		"  "		add	a,#0x0A
0915 : E6 57		" W"		jnc	L0957
0917 : B9 3C		" <"		mov	r1,#0x3C
0919 : BB 03		"  "		mov	r3,#0x03
091B				L091B:
091B : 21		"!"		xch	a,@r1
091C : 47		"G"		swap	a
091D : 31		"1"		xchd	a,@r1
091E : C6 21		" !"		jz	L0921
0920 : 97		" "		clr	c
0921				L0921:
0921 : 21		"!"		xch	a,@r1
0922 : C9		" "		dec	r1
0923 : EB 1B		"  "		djnz	r3,L091B
0925 : 18		" "		inc	r0
0926 : EA 0E		"  "		djnz	r2,L090E
0928 : B1 00		"  "		mov	@r1,#0x00
092A : B6 4C		" L"		jf0	L094C
092C : F6 38		" 8"		jc	L0938
092E : B8 3A		" :"		mov	r0,#0x3A
0930 : F0		" "		mov	a,@r0
0931 : 03 CF		"  "		add	a,#0xCF
0933 : 03 28		" ("		add	a,#0x28
0935 : E6 57		" W"		jnc	L0957
0937 : 97		" "		clr	c
0938				L0938:
0938 : B8 57		" W"		mov	r0,#0x57
093A : B6 44		" D"		jf0	L0944
093C : B0 19		"  "		mov	@r0,#0x19
093E : F6 46		" F"		jc	L0946
0940 : B0 39		" 9"		mov	@r0,#0x39
0942 : 24 46		"$F"		jmp	L0146
				;
0944				L0944:
0944 : B0 93		"  "		mov	@r0,#0x93
0946				L0946:
0946 : BA 2D		" -"		mov	r2,#0x2D
0948 : B4 C5		"  "		call	L0DC5
094A : 44 BE		"D "		jmp	L0ABE
				;
094C				L094C:
094C : F6 57		" W"		jc	L0957
094E : B8 3A		" :"		mov	r0,#0x3A
0950 : F0		" "		mov	a,@r0
0951 : 03 CF		"  "		add	a,#0xCF
0953 : 03 0A		"  "		add	a,#0x0A
0955 : 24 35		"$5"		jmp	L0135
0957				L0957:
0957 : 44 B4		"D "		jmp	L02B4
				;
0959 : FF		" "		mov	a,r7

dup 0xFF
09FF : FF		" "		mov	a,r7

sub0A00
0A00 : 07		" "		dec	a
0A01 : A0		" "		mov	@r0,a
0A02 : AF		" "		mov	r7,a
0A03 : B8 30		" 0"		mov	r0,#0x30
0A05 : 27		"'"		clr	a
0A06 : 30		"0"		xchd	a,@r0
0A07 : 53 09		"S "		anl	a,#0x09
0A09 : 96 B4		"  "		jnz	L0AB4
0A0B : B8 2D		" -"		mov	r0,#0x2D
0A0D : F0		" "		mov	a,@r0
0A0E : C8		" "		dec	r0
0A0F : B0 99		"  "		mov	@r0,#0x99
0A11 : F2 17		"  "		jb7	L0A17
0A13 : D2 17		"  "		jb6	L0A17
0A15 : B0 00		"  "		mov	@r0,#0x00
0A17				L0A17:
0A17 : F4 18		"  "		call	cal2C_add
0A19 : FF		" "		mov	a,r7
0A1A : 92 EB		"  "		jb4	L0AEB
0A1C : F2 F2		"  "		jb7	L0AF2
0A1E : B2 51		" Q"		jb5	L0A51
0A20 : B8 5C		" \"		mov	r0,#0x5C
0A22 : F4 3C		" <"		call	L073C
0A24 : B8 59		" Y"		mov	r0,#0x59
0A26 : F0		" "		mov	a,@r0
0A27 : 03 C0		"  "		add	a,#0xC0
0A29 : C8		" "		dec	r0
0A2A : F0		" "		mov	a,@r0
0A2B : C6 32		" 2"		jz	L0A32
0A2D : D3 99		"  "		xrl	a,#0x99
0A2F : 96 B4		"  "		jnz	L0AB4
0A31 : A7		" "		cpl	c
0A32				L0A32:
0A32 : F6 B4		"  "		jc	L0AB4
0A34 : D4 00		"  "		call	getaddr(idcal)
0A36 : A9		" "		mov	r1,a
0A37 : B8 59		" Y"		mov	r0,#0x59
0A39 : BA 03		"  "		mov	r2,#0x03
0A3B				L0A3B:
0A3B : F0		" "		mov	a,@r0
0A3C : 47		"G"		swap	a	;val: hinib
0A3D : F4 65		" e"		call	write_calRAM ;r1=addr
0A3F : 76 B8		"v "		jf1	L0AB8
0A41 : 19		" "		inc	r1
0A42 : F0		" "		mov	a,@r0	;val: lonib
0A43 : F4 65		" e"		call	write_calRAM
0A45 : 76 B8		"v "		jf1	L0AB8
0A47 : 19		" "		inc	r1
0A48 : 18		" "		inc	r0
0A49 : EA 3B		" ;"		djnz	r2,L0A3B
0A4B : F4 4A		" J"		call	L0F4A
0A4D : 76 B8		"v "		jf1	L0AB8
0A4F : 44 C4		"D "		jmp	L0AC4
				;
0A51				L0A51:
0A51 : E5		" "		sel	mb0
0A52 : 54 00		"T "		call	check_calentry
0A54 : F5		" "		sel	mb1
0A55 : 96 CA		"  "		jnz	L0ACA
0A57 : D4 00		"  "		call	getaddr(idcal)
0A59 : A8		" "		mov	r0,a
0A5A : B9 2C		" ,"		mov	r1,#0x2C
0A5C : BA 03		"  "		mov	r2,#0x03
0A5E : B1 99		"  "		mov	@r1,#0x99
0A60 : 80		" "		movx	a,@r0
0A61 : 72 67		"rg"		jb3	L0A67
0A63 : 52 67		"Rg"		jb2	L0A67
0A65 : B1 00		"  "		mov	@r1,#0x00
0A67				L0A67:
0A67 : 19		" "		inc	r1
0A68				L0A68:
0A68 : 80		" "		movx	a,@r0
0A69 : 53 0F		"S "		anl	a,#0x0F
0A6B : 47		"G"		swap	a
0A6C : A1		" "		mov	@r1,a
0A6D : 18		" "		inc	r0
0A6E : 80		" "		movx	a,@r0
0A6F : 53 0F		"S "		anl	a,#0x0F
0A71 : 41		"A"		orl	a,@r1
0A72 : A1		" "		mov	@r1,a
0A73 : 18		" "		inc	r0
0A74 : 19		" "		inc	r1
0A75 : EA 68		" h"		djnz	r2,L0A68
0A77 : B1 00		"  "		mov	@r1,#0x00
0A79 : F4 18		"  "		call	cal2C_add
0A7B : F2 B4		"  "		jb7	L0AB4
0A7D : B8 58		" X"		mov	r0,#0x58
0A7F : B9 2C		" ,"		mov	r1,#0x2C
0A81 : F4 0F		"  "		call	cal_cpy5
0A83 : B8 39		" 9"		mov	r0,#0x39
0A85 : B9 58		" X"		mov	r1,#0x58
0A87 : BA 04		"  "		mov	r2,#0x04
0A89				L0A89:
0A89 : F0		" "		mov	a,@r0
0A8A : 18		" "		inc	r0
0A8B : 30		"0"		xchd	a,@r0
0A8C : 20		" "		xch	a,@r0
0A8D : 47		"G"		swap	a
0A8E : A1		" "		mov	@r1,a
0A8F : 19		" "		inc	r1
0A90 : EA 89		"  "		djnz	r2,L0A89
0A92 : B1 00		"  "		mov	@r1,#0x00
0A94 : B4 97		"  "		call	sub0D97
0A96 : 76 B4		"v "		jf1	L0AB4
0A98 : 74 06		"t "		call	L0B06
0A9A : 76 B4		"v "		jf1	L0AB4
0A9C : D4 00		"  "		call	getaddr(idcal)
0A9E : 03 06		"  "		add	a,#0x06
0AA0 : A9		" "		mov	r1,a
0AA1 : B8 46		" F"		mov	r0,#0x46
0AA3 : BA 05		"  "		mov	r2,#0x05
0AA5				L0AA5:
0AA5 : F0		" "		mov	a,@r0
0AA6 : F4 65		" e"		call	write_calRAM ;entry[6 + i]
0AA8 : 76 B8		"v "		jf1	L0AB8
0AAA : 18		" "		inc	r0
0AAB : 19		" "		inc	r1
0AAC : EA A5		"  "		djnz	r2,L0AA5
0AAE : F4 4A		" J"		call	write_CALcks
0AB0 : 76 B8		"v "		jf1	L0AB8
0AB2 : 44 C4		"D "		jmp	L0AC4
				;
0AB4				L0AB4:
0AB4 : BA 3A		" :"		mov	r2,#0x3A
0AB6 : 44 CC		"D "		jmp	L02CC
				;
0AB8				L0AB8:
0AB8 : BA 54		" T"		mov	r2,#0x54
0ABA : 44 CC		"D "		jmp	L02CC
0ABC : 44 EB		"D "		jmp	L02EB
				;
0ABE : B8 55		" U"		mov	r0,#0x55
0AC0 : B0 C5		"  "		mov	@r0,#0xC5
0AC2 : 44 EB		"D "		jmp	L02EB

L0AC4:
0AC4 : BA 13		"  "		mov	r2,#0x13
0AC6 : B4 C5		"  "		call	L0DC5
0AC8 : 44 D4		"D "		jmp	L02D4
				;
0ACA				L0ACA:
0ACA : BA 7B		" {"		mov	r2,#0x7B
0ACC : B4 C5		"  "		call	L0DC5
0ACE : BF 20		"  "		mov	r7,#0x20
0AD0 : E5		" "		sel	mb0
0AD1 : 94 00		"  "		call	L0400
0AD3 : F5		" "		sel	mb1
0AD4 : B8 55		" U"		mov	r0,#0x55
0AD6 : B0 C6		"  "		mov	@r0,#0xC6
0AD8 : B8 56		" V"		mov	r0,#0x56
0ADA : F0		" "		mov	a,@r0
0ADB : B8 3F		" ?"		mov	r0,#0x3F
0ADD : A0		" "		mov	@r0,a
0ADE : 18		" "		inc	r0
0ADF : F0		" "		mov	a,@r0
0AE0 : 53 EF		"S "		anl	a,#0xEF
0AE2 : A0		" "		mov	@r0,a
0AE3 : B8 37		" 7"		mov	r0,#0x37
0AE5 : B0 00		"  "		mov	@r0,#0x00
0AE7 : B8 5D		" ]"		mov	r0,#0x5D
0AE9 : B0 00		"  "		mov	@r0,#0x00
0AEB				L0AEB:
0AEB : E5		" "		sel	mb0
0AEC : 04 F3		"  "		jmp	L00F3
				;
0AEE : BA 06		"  "		mov	r2,#0x06
0AF0 : 44 CC		"D "		jmp	L02CC
0AF2				L0AF2:
0AF2 : 84 00		"  "		jmp	L0400
				;
0AF4 : FF		" "		mov	a,r7
0AF5 : FF		" "		mov	a,r7
0AF6 : FF		" "		mov	a,r7
0AF7 : FF		" "		mov	a,r7
0AF8 : FF		" "		mov	a,r7
0AF9 : FF		" "		mov	a,r7
0AFA : FF		" "		mov	a,r7
0AFB : FF		" "		mov	a,r7
0AFC : FF		" "		mov	a,r7
0AFD : A3		" "		movp	a,@a
0AFE : 7E		"~"		addc	a,r6
0AFF : AE		" "		mov	r6,a
0B00 : FF		" "		mov	a,r7
0B01 : A3		" "		movp	a,@a
0B02 : 7E		"~"		addc	a,r6
0B03 : AE		" "		mov	r6,a
0B04 : 84 FC		"  "		jmp	L04FC

sub0B06	;moar BCD stuff
0B06 : A5		" "		clr	f1
0B07 : B8 4B		" K"		mov	r0,#0x4B
0B09 : BA 08		"  "		mov	r2,#0x08
0B0B : 97		" "		clr	c
0B0C				L0B0C:	;loop (r2) times
0B0C : 27		"'"		clr	a
0B0D : 70		"p"		addc	a,@r0
0B0E : 03 FA		"  "		add	a,#0xFA
0B10 : F6 17		"  "		jc	L0B17
0B12 : 03 06		"  "		add	a,#0x06
0B14 : 97		" "		clr	c
0B15 : 64 1B		"d "		jmp	L031B
				;
0B17				L0B17:
0B17 : 03 FC		"  "		add	a,#0xFC
0B19 : 97		" "		clr	c
0B1A : A7		" "		cpl	c
0B1B : A0		" "		mov	@r0,a
0B1C : C8		" "		dec	r0
0B1D : EA 0C		"  "		djnz	r2,L0B0C
0B1F : B8 44		" D"		mov	r0,#0x44
0B21 : F0		" "		mov	a,@r0
0B22 : D3 01		"  "		xrl	a,#0x01
0B24 : 96 40		" @"		jnz	L0B40
0B26 : 18		" "		inc	r0
0B27 : F0		" "		mov	a,@r0
0B28 : 18		" "		inc	r0
0B29 : C6 36		" 6"		jz	L0B36
0B2B : F2 37		" 7"		jb7	L0B37
0B2D : 07		" "		dec	a
0B2E : 96 40		" @"		jnz	L0B40
0B30 : F0		" "		mov	a,@r0
0B31 : 03 0A		"  "		add	a,#0x0A
0B33 : A0		" "		mov	@r0,a
0B34 : 72 40		"r@"		jb3	L0B40
0B36				L0B36:
0B36 : 93		" "		retr
				;
0B37				L0B37:
0B37 : 17		" "		inc	a
0B38 : 96 40		" @"		jnz	L0B40
0B3A : F0		" "		mov	a,@r0
0B3B : 03 F6		"  "		add	a,#0xF6
0B3D : A0		" "		mov	@r0,a
0B3E : 72 36		"r6"		jb3	L0B36
0B40				L0B40:
0B40 : B5		" "		cpl	f1
0B41 : 93		" "		retr
				;

dup 0xFF
0BFE : FF		" "		mov	a,r7
0BFF : FF		" "		mov	a,r7
0C00 : B8 57		" W"		mov	r0,#0x57
0C02 : F0		" "		mov	a,@r0
0C03 : B2 15		"  "		jb5	L0C15
0C05 : B0 B3		"  "		mov	@r0,#0xB3
0C07 : B8 2C		" ,"		mov	r0,#0x2C
0C09 : B9 32		" 2"		mov	r1,#0x32
0C0B : F4 0F		"  "		call	cal_cpy5
0C0D : B8 3F		" ?"		mov	r0,#0x3F
0C0F : F0		" "		mov	a,@r0
0C10 : 03 04		"  "		add	a,#0x04
0C12 : A0		" "		mov	@r0,a
0C13 : 44 EB		"D "		jmp	L02EB
				;
0C15				L0C15:
0C15 : B8 2C		" ,"		mov	r0,#0x2C
0C17 : B0 00		"  "		mov	@r0,#0x00
0C19 : 18		" "		inc	r0
0C1A : F0		" "		mov	a,@r0
0C1B : F2 D0		"  "		jb7	L0CD0
0C1D : D2 D0		"  "		jb6	L0CD0
0C1F : B8 32		" 2"		mov	r0,#0x32
0C21 : B0 00		"  "		mov	@r0,#0x00
0C23 : 18		" "		inc	r0
0C24 : F0		" "		mov	a,@r0
0C25 : F2 D0		"  "		jb7	L0CD0
0C27 : D2 D0		"  "		jb6	L0CD0
0C29 : B8 32		" 2"		mov	r0,#0x32
0C2B : B9 58		" X"		mov	r1,#0x58
0C2D : F4 0F		"  "		call	cal_cpy5
0C2F : F4 28		" ("		call	cal58_sub2C
0C31 : 96 D0		"  "		jnz	L0CD0
0C33 : B8 2C		" ,"		mov	r0,#0x2C
0C35 : B9 32		" 2"		mov	r1,#0x32
0C37 : F4 0F		"  "		call	cal_cpy5
0C39 : B8 2C		" ,"		mov	r0,#0x2C
0C3B : F4 07		"  "		call	L0707
0C3D : B8 2D		" -"		mov	r0,#0x2D
0C3F : B0 90		"  "		mov	@r0,#0x90
0C41 : B4 97		"  "		call	sub0D97
0C43 : 76 D0		"v "		jf1	L0CD0
0C45 : B8 44		" D"		mov	r0,#0x44
0C47 : B9 58		" X"		mov	r1,#0x58
0C49 : BA 04		"  "		mov	r2,#0x04
0C4B : B1 00		"  "		mov	@r1,#0x00
0C4D : 19		" "		inc	r1
0C4E				L0C4E:
0C4E : F0		" "		mov	a,@r0
0C4F : 53 0F		"S "		anl	a,#0x0F
0C51 : 47		"G"		swap	a
0C52 : A1		" "		mov	@r1,a
0C53 : 18		" "		inc	r0
0C54 : F0		" "		mov	a,@r0
0C55 : 53 0F		"S "		anl	a,#0x0F
0C57 : 41		"A"		orl	a,@r1
0C58 : A1		" "		mov	@r1,a
0C59 : 18		" "		inc	r0
0C5A : 19		" "		inc	r1
0C5B : EA 4E		" N"		djnz	r2,L0C4E
0C5D : B8 58		" X"		mov	r0,#0x58
0C5F : B9 2C		" ,"		mov	r1,#0x2C
0C61 : F4 0F		"  "		call	cal_cpy5
0C63 : B8 5C		" \"		mov	r0,#0x5C
0C65 : B9 36		" 6"		mov	r1,#0x36
0C67 : F4 2C		" ,"		call	L072C
0C69 : B8 58		" X"		mov	r0,#0x58
0C6B : B9 32		" 2"		mov	r1,#0x32
0C6D : F4 0F		"  "		call	cal_cpy5
0C6F : B8 3D		" ="		mov	r0,#0x3D
0C71 : B9 5C		" \"		mov	r1,#0x5C
0C73 : BA 04		"  "		mov	r2,#0x04
0C75				L0C75:
0C75 : F0		" "		mov	a,@r0
0C76 : C8		" "		dec	r0
0C77 : 30		"0"		xchd	a,@r0
0C78 : 47		"G"		swap	a
0C79 : A1		" "		mov	@r1,a
0C7A : C9		" "		dec	r1
0C7B : EA 75		" u"		djnz	r2,L0C75
0C7D : B1 00		"  "		mov	@r1,#0x00
0C7F : B4 97		"  "		call	L0D97
0C81 : 76 D0		"v "		jf1	L0CD0
0C83 : 74 06		"t "		call	sub0B06
0C85 : 76 D0		"v "		jf1	L0CD0
0C87 : B8 46		" F"		mov	r0,#0x46
0C89 : B9 4B		" K"		mov	r1,#0x4B
0C8B : F4 0F		"  "		call	cal_cpy5
0C8D : B8 33		" 3"		mov	r0,#0x33
0C8F : F0		" "		mov	a,@r0
0C90 : C6 94		"  "		jz	L0C94
0C92 : D3 99		"  "		xrl	a,#0x99
0C94				L0C94:
0C94 : 96 D0		"  "		jnz	L0CD0
0C96 : B9 45		" E"		mov	r1,#0x45
0C98 : BA 03		"  "		mov	r2,#0x03
0C9A				L0C9A:	//expand 0x33[byte] to 0x45[nib]
0C9A : F0		" "		mov	a,@r0
0C9B : A1		" "		mov	@r1,a	;0x45[2i + 0] = r0[i + 0]
0C9C : 18		" "		inc	r0
0C9D : 19		" "		inc	r1
0C9E : F0		" "		mov	a,@r0
0C9F : 47		"G"		swap	a
0CA0 : A1		" "		mov	@r1,a	;0x45[2i + 1], r0[i + 1] >> 4
0CA1 : 19		" "		inc	r1
0CA2 : EA 9A		"  "		djnz	r2,L0C9A
0CA4 : D4 00		"  "		call	getaddr(idcal)
0CA6 : A9		" "		mov	r1,a
0CA7 : B8 45		" E"		mov	r0,#0x45
0CA9 : BA 0B		"  "		mov	r2,#0x0B
0CAB				L0CAB:
0CAB : F0		" "		mov	a,@r0
0CAC : F4 65		" e"		call	write_calRAM	;write full entry
0CAE : 76 D2		"v "		jf1	L0CD2
0CB0 : 18		" "		inc	r0
0CB1 : 19		" "		inc	r1
0CB2 : EA AB		"  "		djnz	r2,L0CAB
0CB4 : F4 4A		" J"		call	write_CALcks
0CB6 : 76 D2		"v "		jf1	L0CD2
0CB8 : B8 3F		" ?"		mov	r0,#0x3F
0CBA : F0		" "		mov	a,@r0
0CBB : F2 D4		"  "		jb7	L0CD4
0CBD : B8 CE		"  "		mov	r0,#0xCE
0CBF : B9 5C		" \"		mov	r1,#0x5C
0CC1 : B4 6A		" j"		call	bcd_0D6A
0CC3 : B8 59		" Y"		mov	r0,#0x59
0CC5 : B9 2D		" -"		mov	r1,#0x2D
0CC7 : B1 00		"  "		mov	@r1,#0x00
0CC9 : 19		" "		inc	r1
0CCA : BA 03		"  "		mov	r2,#0x03
0CCC : F4 11		"  "		call	L0711
0CCE : A4 06		"  "		jmp	L0506
0CD0				L0CD0:
0CD0 : 44 B4		"D "		jmp	L02B4
0CD2				L0CD2:
0CD2 : 44 B8		"D "		jmp	L02B8
0CD4				L0CD4:
0CD4 : 44 C4		"D "		jmp	L0AC4
				;

dup 0xFF
0CFC : FF		" "		mov	a,r7
0CFD : A3		" "		movp	a,@a
0CFE : 7E		"~"		addc	a,r6
0CFF : AE		" "		mov	r6,a
0D00 : FF		" "		mov	a,r7
0D01 : A3		" "		movp	a,@a
0D02 : 7E		"~"		addc	a,r6
0D03 : AE		" "		mov	r6,a
0D04 : C4 FC		"  "		jmp	L0EFC
				;
0D06 : BF 4B		" K"		mov	r7,#0x4B
0D08 : BE 05		"  "		mov	r6,#0x05
0D0A				L0D0A:
0D0A : FF		" "		mov	a,r7
0D0B : A8		" "		mov	r0,a
0D0C : F0		" "		mov	a,@r0
0D0D : 72 1A		"r "		jb3	L0D1A
0D0F : 53 0F		"S "		anl	a,#0x0F
0D11 : C6 23		" #"		jz	L0D23
0D13 : AD		" "		mov	r5,a
0D14				L0D14:
0D14 : F4 18		"  "		call	cal2C_add
0D16 : ED 14		"  "		djnz	r5,L0D14
0D18 : A4 23		" #"		jmp	L0D23
				;
0D1A				L0D1A:
0D1A : 37		"7"		cpl	a
0D1B : 53 0F		"S "		anl	a,#0x0F
0D1D : AD		" "		mov	r5,a
0D1E : 1D		" "		inc	r5
0D1F				L0D1F:
0D1F : F4 28		" ("		call	cal58_sub2C
0D21 : ED 1F		"  "		djnz	r5,L0D1F
0D23				L0D23:
0D23 : 1F		" "		inc	r7
0D24 : B9 2E		" ."		mov	r1,#0x2E
0D26 : BA 03		"  "		mov	r2,#0x03
0D28 : 27		"'"		clr	a
0D29				L0D29:
0D29 : 21		"!"		xch	a,@r1
0D2A : 47		"G"		swap	a
0D2B : 31		"1"		xchd	a,@r1
0D2C : 19		" "		inc	r1
0D2D : EA 29		" )"		djnz	r2,L0D29
0D2F : EE 0A		"  "		djnz	r6,L0D0A
0D31 : B8 18		"  "		mov	r0,#0x18
0D33 : B9 30		" 0"		mov	r1,#0x30
0D35 : B4 6A		" j"		call	bcd_0D6A
0D37 : B4 97		"  "		call	sub0D97
0D39 : 76 D5		"v "		jf1	L0DD5
0D3B : 74 06		"t "		call	sub0B06
0D3D : 76 D5		"v "		jf1	L0DD5
0D3F : B8 46		" F"		mov	r0,#0x46
0D41 : B9 4B		" K"		mov	r1,#0x4B
0D43 : F4 0F		"  "		call	cal_cpy5
0D45 : B8 4F		" O"		mov	r0,#0x4F
0D47 : B9 45		" E"		mov	r1,#0x45
0D49 : BA 06		"  "		mov	r2,#0x06
0D4B				L0D4B:
0D4B : 80		" "		movx	a,@r0
0D4C : A1		" "		mov	@r1,a
0D4D : 18		" "		inc	r0
0D4E : 19		" "		inc	r1
0D4F : EA 4B		" K"		djnz	r2,L0D4B
0D51 : B8 45		" E"		mov	r0,#0x45
0D53 : B9 DE		"  "		mov	r1,#0xDE	;entry 0x11
0D55 : BA 0B		"  "		mov	r2,#0x0B
0D57				L0D57:
0D57 : F0		" "		mov	a,@r0
0D58 : F4 65		" e"		call	write_calRAM	;write full entry
0D5A : 76 68		"vh"		jf1	L0D68
0D5C : 18		" "		inc	r0
0D5D : 19		" "		inc	r1
0D5E : EA 57		" W"		djnz	r2,L0D57
0D60 : 23 DE		"# "		mov	a,#0xDE
0D62 : F4 4C		" L"		call	write_CALcks_noget
0D64 : 76 68		"vh"		jf1	L0D68
0D66 : 44 C4		"D "		jmp	L0AC4
0D68				L0D68:
0D68 : 44 B8		"D "		jmp	L02B8

bcd_0D6A:	;pas sur. i: r0=caladdr, r1=&dest[3], 
0D6A : 97		" "		clr	c
0D6B : A7		" "		cpl	c
0D6C : 27		"'"		clr	a
0D6D : BA 03		"  "		mov	r2,#0x03
0D6F : A4 73		" s"		jmp	L0573
				;
0D71				L0D71:
0D71 : B4 82		"  "		call	readcal_daa
0D73 : AE		" "		mov	r6,a
0D74 : B4 82		"  "		call	readcal_daa
0D76 : 47		"G"		swap	a
0D77 : 4E		"N"		orl	a,r6
0D78 : A1		" "		mov	@r1,a
0D79 : C9		" "		dec	r1
0D7A : EA 71		" q"		djnz	r2,L0D71
0D7C : 27		"'"		clr	a
0D7D : 13 09		"  "		addc	a,#0x09
0D7F : 57		"W"		da	a
0D80 : A1		" "		mov	@r1,a
0D81 : 83		" "		ret

readcal_daa:	;do some BCD adj on read nib. i: r0=addr--; o: ret a
0D82 : 80		" "		movx	a,@r0
0D83 : C8		" "		dec	r0
0D84 : 72 8A		"r "		jb3	L0D8A
0D86 : 53 0F		"S "		anl	a,#0x0F
0D88 : A4 8C		"  "		jmp	L058C
				;
0D8A				L0D8A:
0D8A : 43 F0		"C "		orl	a,#0xF0
0D8C : 13 FF		"  "		addc	a,#0xFF
0D8E : F2 93		"  "		jb7	L0D93
0D90 : 97		" "		clr	c
0D91 : A7		" "		cpl	c
0D92 : 83		" "		ret
				;
0D93				L0D93:
0D93 : 03 0A		"  "		add	a,#0x0A
0D95 : 97		" "		clr	c
0D96 : 83		" "		ret

sub0D97
0D97 : B8 44		" D"		mov	r0,#0x44
0D99 : BA 08		"  "		mov	r2,#0x08
0D9B : F4 09		"  "		call	clr_0f09 ;0x44[0..7]=0
0D9D : A5		" "		clr	f1
0D9E : BD 44		" D"		mov	r5,#0x44
0DA0 : BB 08		"  "		mov	r3,#0x08
0DA2				L0DA2:
0DA2 : BC 00		"  "		mov	r4,#0x00
0DA4 : BF 0A		"  "		mov	r7,#0x0A
0DA6				L0DA6:
0DA6 : F4 28		" ("		call	cal58_sub2C
0DA8 : F2 AF		"  "		jb7	L0DAF
0DAA : 1C		" "		inc	r4
0DAB : EF A6		"  "		djnz	r7,L0DA6
0DAD : B5		" "		cpl	f1
0DAE : 93		" "		retr
				;
0DAF				L0DAF:
0DAF : F4 18		"  "		call	cal2C_add
0DB1 : FD		" "		mov	a,r5
0DB2 : A8		" "		mov	r0,a
0DB3 : FC		" "		mov	a,r4
0DB4 : A0		" "		mov	@r0,a
0DB5 : 1D		" "		inc	r5
0DB6 : B8 5C		" \"		mov	r0,#0x5C
0DB8 : BA 05		"  "		mov	r2,#0x05
0DBA : 27		"'"		clr	a
0DBB				L0DBB:
0DBB : 20		" "		xch	a,@r0
0DBC : 47		"G"		swap	a
0DBD : 30		"0"		xchd	a,@r0
0DBE : 20		" "		xch	a,@r0
0DBF : C8		" "		dec	r0
0DC0 : EA BB		"  "		djnz	r2,L0DBB
0DC2 : EB A2		"  "		djnz	r3,L0DA2
0DC4 : 93		" "		retr


L0DC5:	;i: r2=&src in 0x300 (PC & 0xFF).
			;copy to RAM[0x44+idx] until src[idx]==0 ?
0DC5 : B9 37		" 7"		mov	r1,#0x37
0DC7 : B1 00		"  "		mov	@r1,#0x00
0DC9 : B9 44		" D"		mov	r1,#0x44
				L0DCB:
0DCB : FA		" "		mov	a,r2
0DCC : E3		" "		movp3	a,@a	;@(0x0300 | a)
0DCD : C6 D4		"  "		jz	L0DD4
0DCF : A1		" "		mov	@r1,a
0DD0 : 19		" "		inc	r1
0DD1 : 1A		" "		inc	r2
0DD2 : A4 CB		"  "		jmp	L0DCB
0DD4				L0DD4:
0DD4 : 93		" "		retr


0DD5				L0DD5:
0DD5 : BA 47		" G"		mov	r2,#0x47
0DD7 : 44 CC		"D "		jmp	L0ACC

dup 0xff

getaddr(idcal): ; getaddr(idcal) avec tableread
0E00 : 8A 0F		"  "		orl	p2,#0x0F
0E02 : 9A F7		"  "		anl	p2,#0xF7
0E04 : B8 3F		" ?"		mov	r0,#0x3F
0E06 : F0		" "		mov	a,@r0
0E07 : 77		"w"		rr	a
0E08 : 77		"w"		rr	a
0E09 : 53 3F		"S?"		anl	a,#0x3F
0E0B : 03 07		"  "		add	a,#0x07
0E0D : A3		" "		movp	a,@a
0E0E : 93		" "		retr
				;
0E0F : 00		" "		nop
				;
0E10 : 01		" "		db	0x01
				;
0E11 : 0E		" "		movd	a,p6
0E12 : 1B		" "		inc	r3
0E13 : 28		"("		xch	a,r0
0E14 : 35		"5"		dis	tcnti
0E15 : 00		" "		nop
0E16 : 00		" "		nop
0E17 : 00		" "		nop
0E18 : 4F		"O"		orl	a,r7
0E19 : 4F		"O"		orl	a,r7
0E1A : 4F		"O"		orl	a,r7
0E1B : 4F		"O"		orl	a,r7
0E1C : 00		" "		nop
0E1D : 00		" "		nop
0E1E : 00		" "		nop
0E1F : 00		" "		nop
0E20 : 5C		"\"		anl	a,r4
0E21 : 69		"i"		add	a,r1
0E22 : 76 83		"v "		jf1	L0E83
0E24 : 90		" "		movx	@r0,a
0E25 : 9D		" "		anld	p5,a
0E26 : AA		" "		mov	r2,a
0E27 : 00		" "		nop
0E28 : 5C		"\"		anl	a,r4
0E29 : 69		"i"		add	a,r1
0E2A : 76 83		"v "		jf1	L0E83
0E2C : 90		" "		movx	@r0,a
0E2D : 9D		" "		anld	p5,a
0E2E : AA		" "		mov	r2,a
0E2F : 00		" "		nop
				;
0E30 : B7		" "		db	0xB7
				;
0E31 : C4 00		"  "		jmp	L0E00
				;
0E33 : 00		" "		nop
0E34 : 00		" "		nop
0E35 : 00		" "		nop
0E36 : 00		" "		nop
0E37 : 00		" "		nop
0E38 : DE		" "		xrl	a,r6
0E39 : DE		" "		xrl	a,r6
0E3A : 00		" "		nop
0E3B : 00		" "		nop
0E3C : 00		" "		nop
0E3D : 00		" "		nop
0E3E : 00		" "		nop
0E3F : 00		" "		nop
0E40 : AA		" "		mov	r2,a
0E41 : FF		" "		mov	a,r7
0E42 : FF		" "		mov	a,r7
0E43 : FF		" "		mov	a,r7


dup 0xFF

0EFC : FF		" "		mov	a,r7
0EFD : A3		" "		movp	a,@a
0EFE : 7E		"~"		addc	a,r6
0EFF : AE		" "		mov	r6,a
0F00 : FF		" "		mov	a,r7
0F01 : A3		" "		movp	a,@a
0F02 : 7E		"~"		addc	a,r6
0F03 : AE		" "		mov	r6,a
0F04 : E5		" "		sel	mb0
0F05 : C4 E9		"  "		jmp	L06E9
				;
0F07 : BA 05		"  "		mov	r2,#0x05
clr_0f09:	//clear (r2) bytes @ r0
0F09				L0F09:
0F09 : 27		"'"		clr	a
0F0A : A0		" "		mov	@r0,a
0F0B : 18		" "		inc	r0
0F0C : EA 09		"  "		djnz	r2,L0F09
0F0E : 93		" "		retr

cal_cpy5:	;i:( r0 = src, r1 = dest) . Copy 5 bytes
0F0F : BA 05		"  "		mov	r2,#0x05
0F11				L0F11:
0F11 : F0		" "		mov	a,@r0
0F12 : A1		" "		mov	@r1,a
0F13 : 18		" "		inc	r0
0F14 : 19		" "		inc	r1
0F15 : EA 11		"  "		djnz	r2,L0F11
0F17 : 93		" "		retr

cal2C_add: BCD add : cal58[] += cal2C[]
0F18 : B8 5C		" \"		mov	r0,#0x5C
0F1A : B9 30		" 0"		mov	r1,#0x30
0F1C : BA 05		"  "		mov	r2,#0x05
0F1E : 97		" "		clr	c
0F1F				L0F1F:
0F1F : F0		" "		mov	a,@r0
0F20 : 71		"q"		addc	a,@r1
0F21 : 57		"W"		da	a
0F22 : A0		" "		mov	@r0,a
0F23 : C8		" "		dec	r0
0F24 : C9		" "		dec	r1
0F25 : EA 1F		"  "		djnz	r2,L0F1F
0F27 : 93		" "		retr

cal58_sub2C;	cal58 -= cal2C ? pas sur
0F28 : B8 5C		" \"		mov	r0,#0x5C
0F2A : B9 30		" 0"		mov	r1,#0x30
0F2C : BA 05		"  "		mov	r2,#0x05
0F2E : 97		" "		clr	c
0F2F				L0F2F:
0F2F : F1		" "		mov	a,@r1
0F30 : 13 65		" e"		addc	a,#0x65
0F32 : 37		"7"		cpl	a
0F33 : 60		"`"		add	a,@r0
0F34 : 57		"W"		da	a
0F35 : A0		" "		mov	@r0,a
0F36 : A7		" "		cpl	c
0F37 : C8		" "		dec	r0
0F38 : C9		" "		dec	r1
0F39 : EA 2F		" /"		djnz	r2,L0F2F
0F3B : 93		" "		retr


0F3C : BA 05		"  "		mov	r2,#0x05
0F3E : 97		" "		clr	c
0F3F				L0F3F:
0F3F : F0		" "		mov	a,@r0
0F40 : 13 65		" e"		addc	a,#0x65
0F42 : 37		"7"		cpl	a
0F43 : 57		"W"		da	a
0F44 : A0		" "		mov	@r0,a
0F45 : A7		" "		cpl	c
0F46 : C8		" "		dec	r0
0F47 : EA 3F		" ?"		djnz	r2,L0F3F
0F49 : 93		" "		retr

write_CALcks;	i: (a= id)
0F4A : D4 00		"  "		call	getaddr
write_CALcks_noget:	;(a=caladdr)
0F4C : BA 0B		"  "		mov	r2,#0x0B
0F4E : A9		" "		mov	r1,a
0F4F : B8 00		"  "		mov	r0,#0x00
0F51				L0F51:
0F51 : 81		" "		movx	a,@r1
0F52 : 19		" "		inc	r1
0F53 : 53 0F		"S "		anl	a,#0x0F
0F55 : 68		"h"		add	a,r0
0F56 : A8		" "		mov	r0,a
0F57 : EA 51		" Q"		djnz	r2,L0F51
0F59 : 37		"7"		cpl	a
0F5A : 47		"G"		swap	a
0F5B : F4 65		" e"		call	write_calRAM
0F5D : 76 64		"vd"		jf1	L0F64
0F5F : 19		" "		inc	r1
0F60 : FF		" "		mov	a,r7
0F61 : 47		"G"		swap	a
0F62 : F4 65		" e"		call	write_calRAM
0F64				L0F64:
0F64 : 93		" "		retr

;write_calRAM i : a = val, r1 = addr; o: flags
0F65 : 91		" "		movx	@r1,a
0F66 : AF		" "		mov	r7,a
0F67 : 81		" "		movx	a,@r1
0F68 : DF		" "		xrl	a,r7
0F69 : 53 0F		"S "		anl	a,#0x0F
0F6B : A5		" "		clr	f1
0F6C : C6 6F		" o"		jz	L0F6F
0F6E : B5		" "		cpl	f1
0F6F				L0F6F:
0F6F : 93		" "		retr
dup 0xFF

1000				altreset:
1000 : 85		" "		clr	f0
1001 : 04 2A		" *"		jmp	L002A
				;
1003 : 15		" "		dis	i
1004 : 04 00		"  "		jmp	reset
				;
1006 : 00		" "		nop
1007 : 89 FF		"  "		orl	p1,#0xFF
1009 : D5		" "		sel	rb1
100A : B8 20		"  "		mov	r0,#0x20
100C : A0		" "		mov	@r0,a
100D : 18		" "		inc	r0
100E : 10		" "		inc	@r0
100F : F0		" "		mov	a,@r0
1010				L1010:
1010 : C6 10		"  "		jz	L1010
1012 : 18		" "		inc	r0
1013 : 10		" "		inc	@r0
1014 : 18		" "		inc	r0
1015 : 10		" "		inc	@r0
1016 : 99 00		"  "		anl	p1,#0x00
1018 : 42		"B"		mov	a,t
1019 : A8		" "		mov	r0,a
101A				L101A:
101A : 42		"B"		mov	a,t
101B : D8		" "		xrl	a,r0
101C : C6 1A		"  "		jz	L101A
101E : 42		"B"		mov	a,t
101F : 03 86		"  "		add	a,#0x86
1021 : 62		"b"		mov	t,a
1022 : B8 20		"  "		mov	r0,#0x20
1024 : F0		" "		mov	a,@r0
1025 : 93		" "		retr
				;
1026 : 35		"5"		dis	tcnti
1027 : 27		"'"		clr	a
1028 : D7		" "		mov	psw,a
1029 : 95		" "		cpl	f0
102A : 9A 48		" H"		anl	p2,#0x48
102C : 8A 80		"  "		orl	p2,#0x80
102E : 9A 7F		"  "		anl	p2,#0x7F
1030 : 89 FF		"  "		orl	p1,#0xFF
1032 : 99 00		"  "		anl	p1,#0x00
1034 : F5		" "		sel	mb1
1035 : 54 83		"T "		call	L0283	;1A83 ?)
1037 : E5		" "		sel	mb0
1038 : B8 7F		"  "		mov	r0,#0x7F
103A : 27		"'"		clr	a
103B				L103B:	;clear iRAM
103B : A0		" "		mov	@r0,a
103C : E8 3B		" ;"		djnz	r0,L103B
103E : B8 7F		"  "		mov	r0,#0x7F
1040				L1040:	;write 0xFF to iRAM
1040 : F0		" "		mov	a,@r0
1041 : 96 9D		"  "		jnz	L109D
1043 : B0 FF		"  "		mov	@r0,#0xFF
1045 : E8 40		" @"		djnz	r0,L1040
1047 : B8 7F		"  "		mov	r0,#0x7F
1049				L1049:	;test iRAM[idx]==0xFF
1049 : F0		" "		mov	a,@r0
104A : 37		"7"		cpl	a
104B : 96 9D		"  "		jnz	L109D
104D : A0		" "		mov	@r0,a
104E : E8 49		" I"		djnz	r0,L1049
1050 : 8A 80		"  "		orl	p2,#0x80
1052 : 23 F0		"# "		mov	a,#0xF0
1054 : 62		"b"		mov	t,a
1055 : 55		"U"		strt	t
1056 : 25		"%"		en	tcnti
1057 : D4 9E		"  "		call	romck_prepare
1059 : C6 5F		" _"		jz	L105F
105B : BA C3		"  "		mov	r2,#0xC3
105D : 14 A9		"  "		call	L00A9
105F				L105F:
105F : D4 E9		"  "		call	L16E9
1061 : FD		" "		mov	a,r5
1062 : C6 66		" f"		jz	L1066
1064 : 14 AA		"  "		call	L00AA
1066				L1066:
1066 : FB		" "		mov	a,r3
1067 : C6 6B		" k"		jz	L106B
1069 : 14 AA		"  "		call	L00AA
106B				L106B:
106B : FC		" "		mov	a,r4
106C : C6 70		" p"		jz	L1070
106E : 14 AA		"  "		call	L00AA
1070				L1070:
1070 : B8 98		"  "		mov	r0,#0x98
1072 : F8		" "		mov	a,r0
1073 : A3		" "		movp	a,@a
1074 : C6 81		"  "		jz	L1081
1076 : A9		" "		mov	r1,a
1077 : 18		" "		inc	r0
1078 : F8		" "		mov	a,r0
1079 : A3		" "		movp	a,@a
107A : A1		" "		mov	@r1,a
107B : 18		" "		inc	r0
107C : 04 72		" r"		jmp	L0072
				;
107E				L107E:
107E : F5		" "		sel	mb1
107F : 44 3E		"D>"		jmp	L023E
				;
1081				L1081:
1081 : B4 5C		" \"		call	L055C
1083 : B8 42		" B"		mov	r0,#0x42
1085 : F0		" "		mov	a,@r0
1086 : C6 7E		" ~"		jz	L107E
1088 : BF 08		"  "		mov	r7,#0x08
108A : 14 CB		"  "		call	L10CB
108C : C4 D0		"  "		jmp	L06D0
				;
108E : 54 00		"T "		call	L0200
1090 : 34 06		"4 "		call	L0106
1092 : F5		" "		sel	mb1
1093 : 14 07		"  "		call	int_tmr
1095 : E5		" "		sel	mb0
1096 : 04 8C		"  "		jmp	L008C
				;
1098 : 3F		"?"		movd	p7,a
1099 : 25		"%"		en	tcnti
109A : 40		"@"		orl	a,@r0
109B : 07		" "		dec	a
109C : 00		" "		nop
109D				L109D:
109D : B8 7F		"  "		mov	r0,#0x7F
109F : 27		"'"		clr	a
10A0				L10A0:
10A0 : A0		" "		mov	@r0,a
10A1 : E8 A0		"  "		djnz	r0,L10A0
10A3 : BA C1		"  "		mov	r2,#0xC1
10A5 : 14 A9		"  "		call	L00A9
10A7 : 04 50		" P"		jmp	L0050
				;
10A9 : FA		" "		mov	a,r2
10AA : AA		" "		mov	r2,a
10AB : A3		" "		movp	a,@a
10AC : B8 42		" B"		mov	r0,#0x42
10AE : 40		"@"		orl	a,@r0
10AF : A0		" "		mov	@r0,a
10B0 : 1A		" "		inc	r2
10B1 : FA		" "		mov	a,r2
10B2 : A3		" "		movp	a,@a
10B3 : AA		" "		mov	r2,a
10B4 : B8 44		" D"		mov	r0,#0x44
10B6 : F0		" "		mov	a,@r0
10B7 : 96 C0		"  "		jnz	L10C0
10B9 : 97		" "		clr	c
10BA : F4 08		"  "		call	L0708
10BC : F5		" "		sel	mb1
10BD : 14 68		" h"		call	L0068
10BF : E5		" "		sel	mb0
10C0				L10C0:
10C0 : 93		" "		retr
				;
10C1 : 02		" "		outl	bus,a
10C2 : 47		"G"		swap	a
10C3 : 04 54		" T"		jmp	L0054
				;
10C5 : 01		" "		db	0x01
				;
10C6 : 6E		"n"		add	a,r6
10C7 : 20		" "		xch	a,@r0
10C8 : 7B		"{"		addc	a,r3
10C9 : 10		" "		inc	@r0
10CA : 88 

;HAX ici, badop
L10CB:	;GPIB_SPstatus
10CB : 23 CD			mov a,#0xCD
10CD : 3A		":"		outl	p2,a
10CE : B8 03		"  "		mov	r0,#0x03
10D0 : B9 29		" )"		mov	r1,#0x29
10D2 : F1		" "		mov	a,@r1
10D3 : 5F		"_"		anl	a,r7
10D4 : C6 D8		"  "		jz	L10D8
10D6 : 23 40		"#@"		mov	a,#0x40
10D8				L10D8:
10D8 : 4F		"O"		orl	a,r7
10D9 : AF		" "		mov	r7,a
10DA : 80		" "		movx	a,@r0	;SPSTATUS
10DB : 4F		"O"		orl	a,r7
10DC : 90		" "		movx	@r0,a	;SPMODE = a
10DD : 93		" "		retr


10DE : 23 CD		"# "		mov	a,#0xCD
10E0 : 3A		":"		outl	p2,a
10E1 : B8 03		"  "		mov	r0,#0x03
10E3 : 80		" "		movx	a,@r0
10E4 : 2F		"/"		xch	a,r7
10E5 : 5F		"_"		anl	a,r7
10E6 : C6 F5		"  "		jz	L10F5
10E8 : DF		" "		xrl	a,r7
10E9 : 53 BF		"S "		anl	a,#0xBF
10EB : AF		" "		mov	r7,a
10EC : B9 29		" )"		mov	r1,#0x29
10EE : 51		"Q"		anl	a,@r1
10EF : C6 F3		"  "		jz	L10F3
10F1 : 23 40		"#@"		mov	a,#0x40
10F3				L10F3:
10F3 : 4F		"O"		orl	a,r7
10F4 : 90		" "		movx	@r0,a
10F5				L10F5:
10F5 : 93		" "		retr
				;
10F6 : FF		" "		mov	a,r7
10F7 : FF		" "		mov	a,r7
10F8 : FF		" "		mov	a,r7
10F9 : FF		" "		mov	a,r7
10FA : FF		" "		mov	a,r7
10FB : FF		" "		mov	a,r7

L10FC:
10FC : FF		" "		mov	a,r7
10FD : A3		" "		movp	a,@a
10FE : 7E		"~"		addc	a,r6
10FF : AE		" "		mov	r6,a
1100 : FF		" "		mov	a,r7
1101 : A3		" "		movp	a,@a
1102 : 7E		"~"		addc	a,r6
1103 : AE		" "		mov	r6,a
1104 : 44 FC		"D "		jmp	L02FC
				;
1106 : B8 21		" !"		mov	r0,#0x21
1108 : F0		" "		mov	a,@r0
1109 : 32 0C		"2 "		jb1	L110C
110B : 93		" "		retr
				;
110C				L110C:
110C : 53 01		"S "		anl	a,#0x01
110E : A0		" "		mov	@r0,a
110F : B8 26		" &"		mov	r0,#0x26
1111 : F0		" "		mov	a,@r0
1112 : 37		"7"		cpl	a
1113 : B2 18		"  "		jb5	L1118
1115 : 92 18		"  "		jb4	L1118
1117 : 93		" "		retr
				;
1118				L1118:
1118 : 23 7F		"# "		mov	a,#0x7F
111A : B9 04		"  "		mov	r1,#0x04
111C				L111C:
111C : AF		" "		mov	r7,a
111D : 39		"9"		outl	p1,a
111E : 09		" "		in	a,p1
111F : 2F		"/"		xch	a,r7
1120 : DF		" "		xrl	a,r7
1121 : 96 2E		" ."		jnz	L112E
1123 : FF		" "		mov	a,r7
1124 : 77		"w"		rr	a
1125 : E9 1C		"  "		djnz	r1,L111C
1127 : B8 24		" $"		mov	r0,#0x24
1129 : F0		" "		mov	a,@r0
112A : 53 7F		"S "		anl	a,#0x7F
112C : A0		" "		mov	@r0,a
112D				L112D:
112D : 93		" "		retr
				;
112E				L112E:
112E : FF		" "		mov	a,r7
112F : C6 18		"  "		jz	L1118
1131 : B8 5D		" ]"		mov	r0,#0x5D
1133 : B0 00		"  "		mov	@r0,#0x00
1135 : B8 24		" $"		mov	r0,#0x24
1137 : F0		" "		mov	a,@r0
1138 : F2 2D		" -"		jb7	L112D
113A : 03 80		"  "		add	a,#0x80
113C : A0		" "		mov	@r0,a
113D : FF		" "		mov	a,r7
113E : D3 7B		" {"		xrl	a,#0x7B
1140 : C6 4B		" K"		jz	L114B
1142 : D3 06		"  "		xrl	a,#0x06
1144 : C6 4B		" K"		jz	L114B
1146 : B8 26		" &"		mov	r0,#0x26
1148 : F0		" "		mov	a,@r0
1149 : 92 2D		" -"		jb4	L112D
114B				L114B:
114B : B8 20		"  "		mov	r0,#0x20
114D : F8		" "		mov	a,r0
114E : E3		" "		movp3	a,@a
114F : C6 2D		" -"		jz	L112D
1151 : DF		" "		xrl	a,r7
1152 : C6 57		" W"		jz	L1157
1154 : 18		" "		inc	r0
1155 : 24 4D		"$M"		jmp	L014D
				;
1157				L1157:
1157 : F4 E9		"  "		call	sub17E9
1159 : B9 24		" $"		mov	r1,#0x24
115B : F1		" "		mov	a,@r1
115C : D2 62		" b"		jb6	L1162
115E : 23 49		"#I"		mov	a,#0x49
1160 : 24 67		"$g"		jmp	L0167
				;
1162				L1162:
1162 : 53 BF		"S "		anl	a,#0xBF
1164 : A1		" "		mov	@r1,a
1165 : 23 57		"#W"		mov	a,#0x57
1167 : 68		"h"		add	a,r0
1168 : B3		" "		jmpp	@a						;INFO: indirect jump
				;
1169 : 85		" "		clr	f0
116A : 85		" "		clr	f0
116B : 85		" "		clr	f0
116C : 85		" "		clr	f0
116D : 85		" "		clr	f0
116E : 85		" "		clr	f0
116F : BF 97		"  "		mov	r7,#0x97
1171 : A1		" "		mov	@r1,a
1172 : A5		" "		clr	f1
				;
1173 : D6		" "		db	0xD6
				;
1174 : AF		" "		mov	r7,a
1175 : E3		" "		movp3	a,@a
1176 : 8A 96		"  "		orl	p2,#0x96
1178 : 96 96		"  "		jnz	L1196
117A : 96 96		"  "		jnz	L1196
117C : 96 96		"  "		jnz	L1196
117E : C4 C4		"  "		jmp	L06C4
1180 : C4 E7		"  "		jmp	L06E7
				;
1182 : EF C9		"  "		djnz	r7,L11C9
1184 : CD		" "		dec	r5
1185 : F8		" "		mov	a,r0
1186 : 03 E1		"  "		add	a,#0xE1
1188 : A4 A8		"  "		jmp	L05A8
				;
118A : 8A 0F		"  "		orl	p2,#0x0F
118C : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS for RTLstuff
118E : B8 05		"  "		mov	r0,#0x05
1190 : 23 0D		"# "		mov	a,#0x0D
1192 : 90		" "		movx	@r0,a	;AUXMODE = 0D setRTL
1193 : 23 05		"# "		mov	a,#0x05
1195 : 90		" "		movx	@r0,a	;AUXMODE = 05 clrRTL
1196				L1196:
1196 : 93		" "		retr
				;
1197 : B8 40		" @"		mov	r0,#0x40
1199 : F0		" "		mov	a,@r0
119A : D3 02		"  "		xrl	a,#0x02
119C : A0		" "		mov	@r0,a
119D : F4 DF		"  "		call	L07DF
119F : A4 B5		"  "		jmp	L05B5
				;
11A1 : D4 D5		"  "		call	L06D5
11A3 : 24 A7		"$ "		jmp	L01A7
				;
11A5 : D4 DA		"  "		call	L06DA
11A7 : B8 40		" @"		mov	r0,#0x40
11A9 : F0		" "		mov	a,@r0
11AA : 53 FD		"S "		anl	a,#0xFD
11AC : A0		" "		mov	@r0,a
11AD : A4 B5		"  "		jmp	L05B5

L11AF:		;calld avec mb0
11AF : B4 BB		"  "		call	L15BB
11B1 : B8 40		" @"		mov	r0,#0x40
11B3 : F0		" "		mov	a,@r0
11B4 : 53 FE		"S "		anl	a,#0xFE
11B6 : 43 20		"C "		orl	a,#0x20
11B8 : A0		" "		mov	@r0,a
11B9 : 18		" "		inc	r0
11BA : F0		" "		mov	a,@r0
11BB : 43 20		"C "		orl	a,#0x20
11BD : A0		" "		mov	@r0,a
11BE : 93		" "		retr
				;
11BF : F1		" "		mov	a,@r1
11C0 : 43 40		"C@"		orl	a,#0x40
11C2 : A1		" "		mov	@r1,a
11C3 : 93		" "		retr
				;
11C4 : F8		" "		mov	a,r0
11C5 : 03 DC		"  "		add	a,#0xDC
11C7 : C4 7C		" |"		jmp	L067C
				;
11C9				L11C9:
11C9 : 85		" "		clr	f0
11CA : D4 02		"  "		call	L0602
11CC : 93		" "		retr

L11CD:
11CD : B4 B5		"  "		call	L05B5
11CF : B8 40		" @"		mov	r0,#0x40
11D1 : F0		" "		mov	a,@r0
11D2 : 43 30		"C0"		orl	a,#0x30
11D4 : A0		" "		mov	@r0,a
11D5 : 93		" "		retr

L11D6:
11D6 : B8 40		" @"		mov	r0,#0x40
11D8 : F0		" "		mov	a,@r0
11D9 : 43 01		"C "		orl	a,#0x01
11DB : A0		" "		mov	@r0,a
11DC : 18		" "		inc	r0
11DD : F0		" "		mov	a,@r0
11DE : 53 DF		"S "		anl	a,#0xDF
11E0 : A0		" "		mov	@r0,a
11E1 : A4 BB		"  "		jmp	L05BB
				;
11E3 : BF 10		"  "		mov	r7,#0x10
11E5 : 04 CB		"  "		jmp	L10CB
				;
11E7 : B8 40		" @"		mov	r0,#0x40
11E9 : F0		" "		mov	a,@r0
11EA : D3 04		"  "		xrl	a,#0x04
11EC : A0		" "		mov	@r0,a
11ED : A4 B5		"  "		jmp	L05B5
				;
11EF : F5		" "		sel	mb1
11F0 : 44 5D		"D]"		jmp	L025D
				;
dup 0xFF


1200 : 23 CD		"# "		mov	a,#0xCD
1202 : 3A		":"		outl	p2,a
1203 : B8 06		"  "		mov	r0,#0x06
1205 : 80		" "		movx	a,@r0	;get ADR0 ?
1206 : F2 0A		"  "		jb7	L120A	;check INT bit
1208 : 44 33		"D3"		jmp	L1233
				;
120A				L120A:	;if (ADR0.INT == 1)
120A : B8 02		"  "		mov	r0,#0x02
120C : 80		" "		movx	a,@r0	;get ISR2
120D : B8 26		" &"		mov	r0,#0x26
120F : A0		" "		mov	@r0,a
1210 : 12 38		" 8"		jb0	L1238	;ISR2.ADSC
1212 : 32 40		"2@"		jb1	L1240	;ISR2.REMC
1214 : 72 48		"rH"		jb3	L1248	;ISR2.SPC
1216				L1216:
1216 : B8 01		"  "		mov	r0,#0x01
1218 : 80		" "		movx	a,@r0	;get ISR1
1219 : B8 25		" %"		mov	r0,#0x25
121B : 40		"@"		orl	a,@r0
121C : A0		" "		mov	@r0,a
121D : 12 51		" Q"		jb0	L1251	;ISR1.BI

L121F:
121F : 32 F0		"2 "		jb1	GPIB_ISR1_BO	;ISR1.BO
L1221:
1221 : 72 F2		"r "		jb3	L12F2	;ISR1.DEC
1223 : B2 F4		"  "		jb5	L12F4	;ISR1.GET
1225 : 53 D6		"S "		anl	a,#0xD6	;clr BI, DEC, APT
1227 : A0		" "		mov	@r0,a
1228 : B8 21		" !"		mov	r0,#0x21
122A : F0		" "		mov	a,@r0
122B : F2 32		" 2"		jb7	L1232
122D : B8 06		"  "		mov	r0,#0x06
122F : 80		" "		movx	a,@r0	;read ADDR0 ?
1230 : F2 0A		"  "		jb7	L120A	;check INT bit
1232				L1232:
1232 : 93		" "		retr
				;
1233 : B8 25		" %"		mov	r0,#0x25
1235 : F0		" "		mov	a,@r0
1236 : 44 1D		"D "		jmp	L021D
				;
1238				L1238:
1238 : B9 25		" %"		mov	r1,#0x25
123A : 21		"!"		xch	a,@r1
123B : 53 FD		"S "		anl	a,#0xFD
123D : 21		"!"		xch	a,@r1
123E : 44 12		"D "		jmp	L0212
				;
1240				L1240:
1240 : B9 24		" $"		mov	r1,#0x24
1242 : 21		"!"		xch	a,@r1
1243 : 53 BF		"S "		anl	a,#0xBF
1245 : 21		"!"		xch	a,@r1
1246 : 44 14		"D "		jmp	L0214
				;
1248				L1248:
1248 : B9 03		"  "		mov	r1,#0x03
124A : 81		" "		movx	a,@r1
124B : D2 16		"  "		jb6	L1216
124D : 59		"Y"		anl	a,r1
124E : 91		" "		movx	@r1,a
124F : 44 16		"D "		jmp	L0216
				;
1251				L1251:	;ISR1.BI
1251 : B9 00		"  "		mov	r1,#0x00
1253 : 81		" "		movx	a,@r1	;get DIN
1254 : AF		" "		mov	r7,a	;r7 = DIN
1255 : B9 26		" &"		mov	r1,#0x26
1257 : F1		" "		mov	a,@r1
1258 : 92 5C		"  "		jb4	L125C	;check ISR2s.REM ?
125A : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
125C				L125C:	;GPIB data_in while remote
125C : B8 2A		" *"		mov	r0,#0x2A
125E : F0		" "		mov	a,@r0
125F : F2 E9		"  "		jb7	L12E9
1261 : FF		" "		mov	a,r7	;a = DIN
1262 : 53 7F		"S "		anl	a,#0x7F
1264 : AF		" "		mov	r7,a
		;range check on received data : alphanum, digits, and \r\n
1265 : C6 8F		"  "		jz	GPIB_reparse_ISR1
1267 : 03 85		"  "		add	a,#0x85	;- 'z' +1
1269 : F6 87		"  "		jc	GPIB_RXbad
126B : 03 1A		"  "		add	a,#0x1A	;'a'
126D : F6 8F		"  "		jc	GPIB_reparse_ISR1	;discard lowercase ?
126F : 03 06		"  "		add	a,#0x06	;'Z'+1
1271 : F6 87		"  "		jc	GPIB_RXbad
1273 : 03 1A		"  "		add	a,#0x1A	; 'A'
1275 : F6 C8		"  "		jc	GPIB_RXalpha
1277 : 03 09		"  "		add	a,#0x09	; '9' -1
1279 : F6 AA		"  "		jc	GPIB_RXhidig
127B : 03 08		"  "		add	a,#0x08	; '0'
127D : F6 C0		"  "		jc	GPIB_RXdigit
127F : 03 22		"  "		add	a,#0x22	; 0x0E
1281 : F6 94		"  "		jc	L1294
1283 : 03 05		"  "		add	a,#0x05	; 0x09
1285 : F6 8F		"  "		jc	GPIB_reparse_ISR1

GPIB_RXbad:			;alphab out of range / other stuf?
1287 : BF 04		"  "		mov	r7,#0x04
1289 : 14 CB		"  "		call	L10CB
128B : B8 2A		" *"		mov	r0,#0x2A
128D : B0 00		"  "		mov	@r0,#0x00

GPIB_reparse_ISR1
128F : B8 25		" %"		mov	r0,#0x25	;(get ISR1)
1291 : F0		" "		mov	a,@r0
1292 : 44 1F		"D "		jmp	L121F
				;
L1294:		;rx E [0x0E, 0x2F]
1294 : FF		" "		mov	a,r7
1295 : D3 2D		" -"		xrl	a,#0x2D	;'-'
1297 : C6 B7		"  "		jz	GPIB_RXneg
1299 : FF		" "		mov	a,r7
129A : D3 2C		" ,"		xrl	a,#0x2C	;','
129C : C6 8F		"  "		jz	GPIB_reparse_ISR1
129E : FF		" "		mov	a,r7
129F : D3 2B		" +"		xrl	a,#0x2B	;'+'
12A1 : C6 B0		"  "		jz	GPIB_RXplus
12A3 : FF		" "		mov	a,r7
12A4 : D3 20		"  "		xrl	a,#0x20	;' '
12A6 : C6 8F		"  "		jz	GPIB_reparse_ISR1
12A8 : 44 87		"D "		jmp	GPIB_RXbad
				;
GPIB_RXhidig:		;hi digit (0x38-0x3F), a = byte - 0x38
12AA : D3 03		"  "		xrl	a,#0x03	;check if 0x3B ';'
12AC : C6 8F		"  "		jz	GPIB_reparse_ISR1
12AE : 44 87		"D "		jmp	GPIB_RXbad
				;
GPIB_RXplus:
12B0 : F0		" "		mov	a,@r0	;a = iRAM[0x2A] ?
12B1 : D3 08		"  "		xrl	a,#0x08
12B3 : 96 87		"  "		jnz	GPIB_RXbad
12B5 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
GPIB_RXneg:
12B7 : F0		" "		mov	a,@r0
12B8 : D3 08		"  "		xrl	a,#0x08
12BA : 96 87		"  "		jnz	GPIB_RXbad
12BC : B0 04		"  "		mov	@r0,#0x04
12BE : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
GPIB_RXdigit:		;a = rxbyte - 0x30.
12C0 : AE		" "		mov	r6,a
12C1 : F0		" "		mov	a,@r0
12C2 : C6 87		"  "		jz	GPIB_RXbad
12C4				L12C4:
12C4 : D4 C0		"  "		call	clr_ram26_b6_0
12C6 : 84 00		"  "		jmp	L1400
				;
GPIB_RXalpha:		;a = rxb - 0x41
12C8 : AE		" "		mov	r6,a
12C9 : F0		" "		mov	a,@r0	;iRAM[2A]
12CA : C6 DC		"  "		jz	L12DC
12CC : D3 08		"  "		xrl	a,#0x08
12CE : 96 D8		"  "		jnz	L12D8
12D0 : FE		" "		mov	a,r6
12D1 : 96 D8		"  "		jnz	L12D8
12D3 : A0		" "		mov	@r0,a
12D4 : D4 C0		"  "		call	clr_ram26_b6_0
12D6 : A4 26		" &"		jmp	L1526
				;
12D8				L12D8:
12D8 : BF 04		"  "		mov	r7,#0x04
12DA : 14 CB		"  "		call	L10CB
12DC				L12DC:
12DC : FE		" "		mov	a,r6
12DD : 03 06		"  "		add	a,#0x06
12DF : E3		" "		movp3	a,@a	;a = [0x1300 | a]
12E0 : B8 2A		" *"		mov	r0,#0x2A
12E2 : A0		" "		mov	@r0,a
12E3 : C6 87		"  "		jz	GPIB_RXbad
12E5 : D2 C4		"  "		jb6	L12C4
12E7 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
12E9				L12E9:	;(a = iRAM[2A],r7 = DIN)
12E9 : B2 ED		"  "		jb5	L12ED
12EB : 84 00		"  "		jmp	L1400
				;
12ED				L12ED:
12ED : F5		" "		sel	mb1
12EE : E4 8E		"  "		jmp	L1F8E

GPIB_ISR1_BO:
12F0 : 64 2F		"d/"		jmp	L132F
12F2				L12F2:
12F2 : 04 26		" &"		jmp	L1026
12F4				L12F4:
12F4 : A4 E7		"  "		jmp	L05E7


12F6 : FF		" "		mov	a,r7
12F7 : FF		" "		mov	a,r7
12F8 : FF		" "		mov	a,r7
12F9 : FF		" "		mov	a,r7
12FA : FF		" "		mov	a,r7
12FB : FF		" "		mov	a,r7
12FC : FF		" "		mov	a,r7
12FD : A3		" "		movp	a,@a
12FE : 7E		"~"		addc	a,r6
12FF : AE		" "		mov	r6,a

1300				L1300:
1300 : FF		" "		mov	a,r7
1301 : A3		" "		movp	a,@a
1302 : 7E		"~"		addc	a,r6
1303 : AE		" "		mov	r6,a
1304 : 84 FC		"  "		jmp	L14FC

;notcode
1306 : 00		" "		nop
1307 : 41		"A"		orl	a,@r1
1308 : 42		"B"		mov	a,t
1309 : 03
130A : 51		" Q"		add	a,#0x51
130B : 05		" "		en	i
130C : 00		" "		nop
130D : 10		" "		inc	@r0
130E : 00		" "		nop
130F : 00		" "		nop
1310 : 52 00		"R "		jb2	L1300
				;
1312 : 06		" "		db	0x06
				;
1313 : 07		" "		dec	a
1314 : 00		" "		nop
1315 : 00		" "		nop
1316 : 00		" "		nop
1317 : 08		" "		ins	a,bus
1318 : 49		"I"		orl	a,r1
1319 : 0A		" "		in	a,p2
131A : 00		" "		nop
131B : 00		" "		nop
				;
131C : 8B		" "		db	0x8B
				;
131D : 8C		" "		orld	p4,a
131E : 00		" "		nop
131F : 0E		" "		movd	a,p6
1320 : DE		" "		xrl	a,r6
1321 : DD		" "		xrl	a,r5
1322 : DB		" "		xrl	a,r3
1323 : D7		" "		mov	psw,a
1324 : EE ED		"  "		djnz	r6,L13ED
1326				L1326:
1326 : EB BE		"  "		djnz	r3,L13BE
1328 : BD BB		"  "		mov	r5,#0xBB
				;
132A : B7		" "		db	0xB7
				;
132B				L132B:
132B : 7E		"~"		addc	a,r6
132C : 7D		"}"		addc	a,r5
132D : 7B		"{"		addc	a,r3
132E : 00		" "		nop

L132F:
132F : B9 27		" '"		mov	r1,#0x27
1331 : F1		" "		mov	a,@r1
1332 : D2 95		"  "		jb6	L1395
1334 : F2 39		" 9"		jb7	L1339
1336 : F0		" "		mov	a,@r0
1337 : 44 21		"D!"		jmp	L1221

GPIB_sendreading:?
1339				L1339:
1339 : B1 40		" @"		mov	@r1,#0x40
133B : B9 38		" 8"		mov	r1,#0x38
133D : D4 DF		"  "		call	L06DF
133F : 53 0F		"S "		anl	a,#0x0F
1341 : 03 E6		"  "		add	a,#0xE6
1343 : A3		" "		movp	a,@a
1344 : AE		" "		mov	r6,a
1345 : 47		"G"		swap	a
1346 : 53 03		"S "		anl	a,#0x03
1348 : AB		" "		mov	r3,a
1349 : BA 73		" s"		mov	r2,#0x73
134B : D4 64		" d"		call	L0664
134D : 8A 0F		"  "		orl	p2,#0x0F
134F : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS
1351 : B8 3D		" ="		mov	r0,#0x3D
1353 : F0		" "		mov	a,@r0
1354 : 72 B4		"r "		jb3	L13B4
1356 : B8 39		" 9"		mov	r0,#0x39
1358 : 97		" "		clr	c
1359 : F0		" "		mov	a,@r0
135A : F5		" "		sel	mb1
135B : B4 15		"  "		call	ascii_getsign
135D : 18		" "		inc	r0
135E : B4 1F		"  "		call	L1D1F	;ascii_digitstuff
1360 : EB 65		" e"		djnz	r3,L1365
1362 : B1 2E		" ."		mov	@r1,#0x2E	; '.'
1364 : 19		" "		inc	r1
1365				L1365:
1365 : B4 23		" #"		call	L1D23
1367 : EB 6C		" l"		djnz	r3,L136C
1369 : B1 2E		" ."		mov	@r1,#0x2E
136B : 19		" "		inc	r1
136C				L136C:
136C : B4 1F		"  "		call	L1D1F
136E : EB 73		" s"		djnz	r3,L1373
1370 : B1 2E		" ."		mov	@r1,#0x2E
1372 : 19		" "		inc	r1
1373				L1373:
1373 : B4 23		" #"		call	L1D23
1375 : B4 1F		"  "		call	L1D1F
1377 : B4 23		" #"		call	L1D23
1379				L1379:
1379 : B1 45		" E"		mov	@r1,#0x45
137B : FE		" "		mov	a,r6
137C : 97		" "		clr	c
137D : B9 7C		" |"		mov	r1,#0x7C
137F : B4 15		"  "		call	ascii_getsign
1381 : FE		" "		mov	a,r6
1382 : B4 25		" %"		call	L1D25
1384 : E5		" "		sel	mb0
1385 : B8 38		" 8"		mov	r0,#0x38
1387 : F0		" "		mov	a,@r0
1388 : 07		" "		dec	a
1389 : 53 03		"S "		anl	a,#0x03
138B : C6 95		"  "		jz	L1395
138D : A8		" "		mov	r0,a
138E : B9 7A		" z"		mov	r1,#0x7A
1390				L1390:
1390 : B1 30		" 0"		mov	@r1,#0x30
1392 : C9		" "		dec	r1
1393 : E8 90		"  "		djnz	r0,L1390
1395				L1395:
1395 : B8 28		" ("		mov	r0,#0x28
1397 : F0		" "		mov	a,@r0
1398 : A9		" "		mov	r1,a
1399 : 10		" "		inc	@r0
139A : F0		" "		mov	a,@r0
139B : D2 A8		"  "		jb6	L13A8
139D : B8 05		"  "		mov	r0,#0x05
139F : 23 06		"# "		mov	a,#0x06
13A1 : 90		" "		movx	@r0,a	;AUXMODE=06 sendEOI
13A2 : B8 27		" '"		mov	r0,#0x27
13A4 : F0		" "		mov	a,@r0
13A5 : 53 BF		"S "		anl	a,#0xBF
13A7 : A0		" "		mov	@r0,a
13A8				L13A8:
13A8 : F1		" "		mov	a,@r1
13A9 : B9 00		"  "		mov	r1,#0x00
13AB : 91		" "		movx	@r1,a	;DOUT = data
13AC : B8 25		" %"		mov	r0,#0x25
13AE : F0		" "		mov	a,@r0
13AF : 53 FD		"S "		anl	a,#0xFD
13B1 : A0		" "		mov	@r0,a
13B2 : 44 21		"D!"		jmp	L1221
				;
13B4				L13B4:
13B4 : B8 F2		"  "		mov	r0,#0xF2
13B6 : F8		" "		mov	a,r0
13B7 : A3		" "		movp	a,@a
13B8 : C6 BF		"  "		jz	L13BF
13BA : A1		" "		mov	@r1,a
13BB : 18		" "		inc	r0
13BC : 19		" "		inc	r1
13BD : 64 B6		"d "		jmp	L03B6
				;
13BF				L13BF:
13BF : BE 09		"  "		mov	r6,#0x09
13C1 : F5		" "		sel	mb1
13C2 : C6 79		" y"		jz	L1379
13C4 : B4 B5		"  "		call	L1DB5
13C6 : FE		" "		mov	a,r6
13C7 : 96 CA		"  "		jnz	L13CA
13C9 : 17		" "		inc	a
13CA				L13CA:
13CA : 47		"G"		swap	a
13CB : E7		" "		rl	a
13CC : 03 06		"  "		add	a,#0x06
13CE : B8 3F		" ?"		mov	r0,#0x3F
13D0 : A0		" "		mov	@r0,a
13D1 : 18		" "		inc	r0
13D2 : FE		" "		mov	a,r6
13D3 : C6 D7		"  "		jz	L13D7
13D5 : 23 20		"# "		mov	a,#0x20
13D7				L13D7:
13D7 : 40		"@"		orl	a,@r0
13D8 : 53 EE		"S "		anl	a,#0xEE
13DA : 43 06		"C "		orl	a,#0x06
13DC : A0		" "		mov	@r0,a
13DD : 18		" "		inc	r0
13DE : F0		" "		mov	a,@r0
13DF : 53 DF		"S "		anl	a,#0xDF
13E1 : A0		" "		mov	@r0,a
13E2 : F4 DF		"  "		call	L07DF
13E4 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
13E6 : 09		" "		in	a,p1
13E7 : A3		" "		movp	a,@a
13E8 : B3		" "		jmpp	@a						;INFO: indirect jump
				;
13E9 : 10		" "		inc	@r0
13EA : 20		" "		xch	a,@r0
13EB : 30		"0"		xchd	a,@r0
13EC : 13 23		" #"		addc	a,#0x23
				;
13EE : 33		"3"		db	0x33
				;
13EF : 16 26		" &"		jtf	L1326
13F1 : 26 2B		"&+"		jnt0	L132B
13F3 : 39		"9"		outl	p1,a
13F4 : 2E		"."		xch	a,r6
13F5 : 39		"9"		outl	p1,a
13F6 : 39		"9"		outl	p1,a
13F7 : 39		"9"		outl	p1,a
13F8 : 39		"9"		outl	p1,a
13F9 : 39		"9"		outl	p1,a
13FA : 00		" "		nop
13FB : FF		" "		mov	a,r7
13FC : FF		" "		mov	a,r7
13FD : FF		" "		mov	a,r7
13FE : FF		" "		mov	a,r7
13FF : FF		" "		mov	a,r7

L1400:		;i : r0=&val.
1400 : 27		"'"		clr	a
1401 : 20		" "		xch	a,@r0
1402 : 53 1F		"S "		anl	a,#0x1F
1404 : 03 06		"  "		add	a,#0x06
1406 : B3		" "		jmpp	@a						;INFO: indirect jump
;notcode
1407 : 19		" "		inc	r1
1408 : 47		"G"		swap	a
1409 : 4B		"K"		orl	a,r3
140A : B4 6F		" o"		call	L156F
140C : 7F		" "		addc	a,r7
				;
140D : A6		" "		db	0xA6
				;
140E : B2 B6		"  "		jb5	L14B6
1410 : B8 BB		"  "		mov	r0,#0xBB
1412 : CF		" "		dec	r7
1413 : D7		" "		mov	psw,a
1414 : E7		" "		rl	a
1415 : 84 7B		" {"		jmp	L047B
				;
1417 : 6D		"m"		add	a,r5
1418 : 7D		"}"		addc	a,r5

1419 : BA 7B		" {"		mov	r2,#0x7B
141B : D4 60		" `"		call	L1660
141D : B8 3F		" ?"		mov	r0,#0x3F
141F : BA 05		"  "		mov	r2,#0x05
1421 : D4 75		" u"		call	L1675
1423 : B8 42		" B"		mov	r0,#0x42
1425 : B0 00		"  "		mov	@r0,#0x00
1427 : B8 29		" )"		mov	r0,#0x29
1429 : B9 7D		" }"		mov	r1,#0x7D
142B : F0		" "		mov	a,@r0
142C : A1		" "		mov	@r1,a
142D : F4 DA		"  "		call	L17DA
142F : B8 31		" 1"		mov	r0,#0x31
1431 : F0		" "		mov	a,@r0
1432 : 47		"G"		swap	a
1433 : E7		" "		rl	a
1434 : 67		"g"		rrc	a
1435 : 67		"g"		rrc	a
1436 : 67		"g"		rrc	a
1437 : 53 30		"S0"		anl	a,#0x30
1439 : B9 7C		" |"		mov	r1,#0x7C
143B : 31		"1"		xchd	a,@r1
143C : 21		"!"		xch	a,@r1
143D : B8 41		" A"		mov	r0,#0x41
143F : F0		" "		mov	a,@r0
1440 : E7		" "		rl	a
1441 : 53 40		"S@"		anl	a,#0x40
1443 : 41		"A"		orl	a,@r1
1444 : A1		" "		mov	@r1,a
1445 : 84 E1		"  "		jmp	L04E1
				;
1447 : 34 CD		"4 "		call	L11CD
L1449:
1449 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
144B : FE		" "		mov	a,r6
144C : 07		" "		dec	a
144D : C6 56		" V"		jz	L1456
144F : 07		" "		dec	a
1450 : 97		" "		clr	c
1451 : 67		"g"		rrc	a
1452 : C6 5A		" Z"		jz	L145A
1454				L1454:
1454 : 44 87		"D "		jmp	GPIB_RXbad
				;
1456				L1456:
1456 : F4 E9		"  "		call	sub17E9
1458 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
145A				L145A:
145A : F4 E9		"  "		call	sub17E9
145C : B0 A0		"  "		mov	@r0,#0xA0
145E : E6 66		" f"		jnc	L1466
1460 : B9 55		" U"		mov	r1,#0x55
1462 : F1		" "		mov	a,@r1
1463 : 43 20		"C "		orl	a,#0x20
1465 : A1		" "		mov	@r1,a
1466				L1466:
1466 : BA AB		"  "		mov	r2,#0xAB
1468 : 97		" "		clr	c
1469 : F4 14		"  "		call	L0714
146B : 44 8F		"D "		jmp	GPIB_reparse_ISR1
146D : A4 30		" 0"		jmp	L0530
				;
146F : FE		" "		mov	a,r6
1470 : C6 54		" T"		jz	L1454
1472 : 03 F8		"  "		add	a,#0xF8
1474 : F6 54		" T"		jc	L1454
1476 : FE		" "		mov	a,r6
1477 : B4 A8		"  "		call	L05A8
1479 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
147B : 64 C4		"d "		jmp	L03C4
147D : A4 46		" F"		jmp	L0546
				;
147F : B0 0F		"  "		mov	@r0,#0x0F
1481 : FE		" "		mov	a,r6
1482 : 84 D2		"  "		jmp	L04D2
				;
1484 : B8 2B		" +"		mov	r0,#0x2B
1486 : F0		" "		mov	a,@r0
1487 : 47		"G"		swap	a
1488 : 77		"w"		rr	a
1489 : 6E		"n"		add	a,r6
148A : AE		" "		mov	r6,a
148B : B8 29		" )"		mov	r0,#0x29
148D : F0		" "		mov	a,@r0
148E : 53 80		"S "		anl	a,#0x80
1490 : 4E		"N"		orl	a,r6
1491 : A0		" "		mov	@r0,a
1492 : B9 03		"  "		mov	r1,#0x03
1494 : 81		" "		movx	a,@r1
1495 : AA		" "		mov	r2,a
1496 : 50		"P"		anl	a,@r0
1497 : C6 9B		"  "		jz	L149B
1499 : 23 40		"#@"		mov	a,#0x40
149B				L149B:
149B : DA		" "		xrl	a,r2
149C : D2 A0		"  "		jb6	L14A0
149E : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
14A0				L14A0:
14A0 : FA		" "		mov	a,r2
14A1 : D3 40		" @"		xrl	a,#0x40
14A3 : 91		" "		movx	@r1,a
14A4 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
14A6 : FE		" "		mov	a,r6
14A7 : 03 FA		"  "		add	a,#0xFA
14A9 : 03 03		"  "		add	a,#0x03
14AB : E6 54		" T"		jnc	L1454
14AD : FE		" "		mov	a,r6
14AE : D4 7C		" |"		call	L167C
14B0 : 44 8F		"D "		jmp	GPIB_reparse_ISR1

14B2 : A4 06		"  "		jmp	L0506
14B4 : A4 1A		"  "		jmp	L051A
14B6				L14B6:
14B6 : A4 4C		" L"		jmp	L054C
				;
14B8 : F5		" "		sel	mb1
14B9 : C4 00		"  "		jmp	L1E00
				;
14BB : FF		" "		mov	a,r7
14BC : AE		" "		mov	r6,a
14BD : BA 7F		"  "		mov	r2,#0x7F
14BF : D4 60		" `"		call	L1E60
14C1 : 8A 0F		"  "		orl	p2,#0x0F
14C3 : 9A F7		"  "		anl	p2,#0xF7
14C5 : FE		" "		mov	a,r6
14C6 : A8		" "		mov	r0,a
14C7 : 80		" "		movx	a,@r0
14C8 : 53 0F		"S "		anl	a,#0x0F
14CA : 03 40		" @"		add	a,#0x40
14CC : A1		" "		mov	@r1,a
14CD : 84 E1		"  "		jmp	L04E1
				;
14CF : B0 8D		"  "		mov	@r0,#0x8D
14D1 : FF		" "		mov	a,r7
14D2 : B8 2B		" +"		mov	r0,#0x2B
14D4 : A0		" "		mov	@r0,a
14D5 : 84 49		" I"		jmp	L0449
				;
14D7 : 8A 0F		"  "		orl	p2,#0x0F
14D9 : 9A F7		"  "		anl	p2,#0xF7	;calRAM_CE
14DB : B8 2B		" +"		mov	r0,#0x2B
14DD : F0		" "		mov	a,@r0
14DE : A8		" "		mov	r0,a
14DF : FF		" "		mov	a,r7
14E0 : 90		" "		movx	@r0,a	
14E1 : 8A 0F		"  "		orl	p2,#0x0F	;GPIB_release
14E3 : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS
14E5 : 84 49		" I"		jmp	L1449	;wtf
				;
14E7 : FE		" "		mov	a,r6
14E8 : 53 FE		"S "		anl	a,#0xFE
14EA : 96 54		" T"		jnz	L1454
14EC : FE		" "		mov	a,r6
14ED : B8 40		" @"		mov	r0,#0x40
14EF : E7		" "		rl	a
14F0 : E7		" "		rl	a
14F1 : 20		" "		xch	a,@r0
14F2 : 53 FB		"S "		anl	a,#0xFB
14F4 : 60		"`"		add	a,@r0
14F5 : A0		" "		mov	@r0,a
14F6 : B4 B5		"  "		call	L05B5
14F8 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
14FA : FF		" "		mov	a,r7
14FB : FF		" "		mov	a,r7
14FC : FF		" "		mov	a,r7
14FD : A3		" "		movp	a,@a
14FE : 7E		"~"		addc	a,r6
14FF : AE		" "		mov	r6,a
1500 : FF		" "		mov	a,r7
1501 : A3		" "		movp	a,@a
1502 : 7E		"~"		addc	a,r6
1503 : AE		" "		mov	r6,a
1504 : C4 FD		"  "		jmp	L06FD
				;
1506 : FE		" "		mov	a,r6
1507 : 03 03		"  "		add	a,#0x03
1509 : B8 5E		" ^"		mov	r0,#0x5E
150B : A0		" "		mov	@r0,a
150C : F5		" "		sel	mb1
150D : 74 06		"t "		call	L0306
150F : E5		" "		sel	mb0
1510 : B8 40		" @"		mov	r0,#0x40
1512 : F0		" "		mov	a,@r0
1513 : 53 FD		"S "		anl	a,#0xFD
1515 : A0		" "		mov	@r0,a
1516 : B4 B5		"  "		call	L05B5
1518 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
151A : FE		" "		mov	a,r6
151B : 03 FC		"  "		add	a,#0xFC
151D : F6 24		" $"		jc	L1524
151F : FE		" "		mov	a,r6
1520 : 37		"7"		cpl	a
1521 : 17		" "		inc	a
1522 : A4 07		"  "		jmp	L0507
1524				L1524:
1524 : 44 87		"D "		jmp	GPIB_RXbad
				;
1526 : B8 40		" @"		mov	r0,#0x40
1528 : F0		" "		mov	a,@r0
1529 : 43 02		"C "		orl	a,#0x02
152B : A0		" "		mov	@r0,a
152C : B4 B5		"  "		call	L05B5
152E : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
1530 : BA 7C		" |"		mov	r2,#0x7C
1532 : D4 60		" `"		call	L0660
1534 : B8 42		" B"		mov	r0,#0x42
1536 : 97		" "		clr	c
1537 : F0		" "		mov	a,@r0
1538 : E7		" "		rl	a
1539 : 47		"G"		swap	a
153A : F5		" "		sel	mb1
153B : B4 25		" %"		call	L0525
153D : 27		"'"		clr	a
153E : 20		" "		xch	a,@r0
153F : 53 07		"S "		anl	a,#0x07
1541 : B4 25		" %"		call	L0525
1543 : E5		" "		sel	mb0
1544 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
1546 : BF BC		"  "		mov	r7,#0xBC
1548 : 14 DE		"  "		call	L00DE
154A : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
154C : BA 7D		" }"		mov	r2,#0x7D
154E : D4 60		" `"		call	L0660
1550 : B8 31		" 1"		mov	r0,#0x31
1552 : F0		" "		mov	a,@r0
1553 : 77		"w"		rr	a
1554 : 77		"w"		rr	a
1555 : 53 01		"S "		anl	a,#0x01
1557 : 03 30		" 0"		add	a,#0x30
1559 : A1		" "		mov	@r1,a
155A : 84 E1		"  "		jmp	L04E1
				;
155C : 23 CB		"# "		mov	a,#0xCB
155E : 3A		":"		outl	p2,a
155F : 80		" "		movx	a,@r0
1560 : AF		" "		mov	r7,a
1561 : B8 29		" )"		mov	r0,#0x29
1563 : E7		" "		rl	a
1564 : E7		" "		rl	a
1565 : 53 80		"S "		anl	a,#0x80
1567 : A0		" "		mov	@r0,a
1568 : B6 97		"  "		jf0	L1597
156A : 75		"u"		ent0	clk
156B : 23 CD		"# "		mov	a,#0xCD
156D : 3A		":"		outl	p2,a
156E : B8 05		"  "		mov	r0,#0x05
1570 : 23 02		"# "		mov	a,#0x02
1572 : 90		" "		movx	@r0,a
1573 : B8 01		"  "		mov	r0,#0x01
1575 : 23 2B		"#+"		mov	a,#0x2B
1577 : 90		" "		movx	@r0,a
1578 : 18		" "		inc	r0
1579 : 23 0F		"# "		mov	a,#0x0F
157B : 90		" "		movx	@r0,a
157C : 18		" "		inc	r0
157D : 27		"'"		clr	a
157E : 90		" "		movx	@r0,a
157F : B8 05		"  "		mov	r0,#0x05
1581 : 23 22		"#""		mov	a,#0x22
1583 : 90		" "		movx	@r0,a
1584 : 23 80		"# "		mov	a,#0x80
1586 : 90		" "		movx	@r0,a
1587 : 23 B0		"# "		mov	a,#0xB0
1589 : 90		" "		movx	@r0,a
158A : D4 00		"  "		call	L1600
158C : 23 CD		"# "		mov	a,#0xCD
158E : 3A		":"		outl	p2,a
158F : B8 05		"  "		mov	r0,#0x05
1591 : 27		"'"		clr	a
1592 : 90		" "		movx	@r0,a
1593 : BF 80		"  "		mov	r7,#0x80
1595 : 04 CB		"  "		jmp	L10CB
				;
1597				L1597:
1597 : BF BF		"  "		mov	r7,#0xBF
1599 : 14 DE		"  "		call	L00DE
159B : B8 02		"  "		mov	r0,#0x02
159D : 80		" "		movx	a,@r0
159E : B8 26		" &"		mov	r0,#0x26
15A0 : A0		" "		mov	@r0,a
15A1 : B8 05		"  "		mov	r0,#0x05
15A3 : 23 0F		"# "		mov	a,#0x0F
15A5 : 90		" "		movx	@r0,a
15A6 : C4 00		"  "		jmp	L1600
				;
15A8 : 47		"G"		swap	a
15A9 : E7		" "		rl	a
15AA : B8 3F		" ?"		mov	r0,#0x3F
15AC : 20		" "		xch	a,@r0
15AD : 53 1F		"S "		anl	a,#0x1F
15AF : 60		"`"		add	a,@r0
15B0 : A0		" "		mov	@r0,a
15B1 : F5		" "		sel	mb1
15B2 : 74 06		"t "		call	L1B06
15B4 : E5		" "		sel	mb0
15B5 : B8 41		" A"		mov	r0,#0x41
15B7 : F0		" "		mov	a,@r0
15B8 : 43 02		"C "		orl	a,#0x02
15BA : A0		" "		mov	@r0,a

L15BB:
15BB : B8 41		" A"		mov	r0,#0x41
15BD : F0		" "		mov	a,@r0
15BE : 53 FB		"S "		anl	a,#0xFB
15C0 : A0		" "		mov	@r0,a
15C1 : C8		" "		dec	r0
15C2 : F0		" "		mov	a,@r0
15C3 : 53 CF		"S "		anl	a,#0xCF
15C5 : A0		" "		mov	@r0,a
15C6 : B8 57		" W"		mov	r0,#0x57
15C8 : B0 00		"  "		mov	@r0,#0x00
15CA : B8 55		" U"		mov	r0,#0x55
15CC : F0		" "		mov	a,@r0
15CD : 77		"w"		rr	a
15CE : 53 08		"S "		anl	a,#0x08
15D0 : 43 04		"C "		orl	a,#0x04
15D2 : 40		"@"		orl	a,@r0
15D3 : A0		" "		mov	@r0,a
15D4 : B8 3E		" >"		mov	r0,#0x3E
15D6 : 27		"'"		clr	a
15D7 : A0		" "		mov	@r0,a
15D8 : B8 27		" '"		mov	r0,#0x27
15DA : F0		" "		mov	a,@r0
15DB : 53 7F		"S "		anl	a,#0x7F
15DD : A0		" "		mov	@r0,a
15DE : BF 01		"  "		mov	r7,#0x01
15E0 : 14 DE		"  "		call	L00DE
15E2 : B8 22		" ""		mov	r0,#0x22
15E4 : B0 00		"  "		mov	@r0,#0x00
15E6 : 93		" "		retr
				;
15E7 : B4 B5		"  "		call	L05B5
15E9 : B8 05		"  "		mov	r0,#0x05
15EB : 23 0F		"# "		mov	a,#0x0F
15ED : 90		" "		movx	@r0,a
15EE : B8 40		" @"		mov	r0,#0x40
15F0 : F0		" "		mov	a,@r0
15F1 : 43 20		"C "		orl	a,#0x20
15F3 : A0		" "		mov	@r0,a
15F4 : D4 C0		"  "		call	clr_ram26_b6_0
15F6 : B8 25		" %"		mov	r0,#0x25
15F8 : F0		" "		mov	a,@r0
15F9 : 44 25		"D%"		jmp	L0225
				;
15FB : FF		" "		mov	a,r7
15FC : FF		" "		mov	a,r7
15FD : FF		" "		mov	a,r7
15FE : FF		" "		mov	a,r7
15FF : FF		" "		mov	a,r7

L1600:	;parse DIP switch stuff
1600 : 85		" "		clr	f0
1601 : 95		" "		cpl	f0
1602 : B6 0D		"  "		jf0	L160D
1604 : BA 95		"  "		mov	r2,#0x95
1606 : 97		" "		clr	c
1607 : F4 08		"  "		call	L1708
1609 : B8 5D		" ]"		mov	r0,#0x5D
160B : B0 06		"  "		mov	@r0,#0x06
160D				L160D:
160D : 8A 0F		"  "		orl	p2,#0x0F
160F : 9A FB		"  "		anl	p2,#0xFB	;GPIB_DIPsel
1611 : 80		" "		movx	a,@r0	;get DIP setting
1612 : 53 1F		"S "		anl	a,#0x1F
1614 : AF		" "		mov	r7,a
1615 : 8A 0F		"  "		orl	p2,#0x0F
1617 : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS for setaddr
1619 : B8 04		"  "		mov	r0,#0x04
161B : 03 01		"  "		add	a,#0x01
161D : B2 45		" E"		jb5	L1645	;if addr > 0x1f?
161F : 23 01		"# "		mov	a,#0x01
1621 : 90		" "		movx	@r0,a	;ADRMODE = 1 (prim-prim)
1622 : B8 06		"  "		mov	r0,#0x06
1624 : 23 E0		"# "		mov	a,#0xE0
1626 : 90		" "		movx	@r0,a	;ADR1 = 0, DT + DL
1627 : FF		" "		mov	a,r7
1628 : 90		" "		movx	@r0,a	;ADR0 = DIPaddr
1629 : B6 50		" P"		jf0	L1650
162B : C6 33		" 3"		jz	L1633
162D : 27		"'"		clr	a
162E				L162E:
162E : 03 01		"  "		add	a,#0x01
1630 : 57		"W"		da	a
1631 : EF 2E		" ."		djnz	r7,L162E
1633				L1633:
1633 : AE		" "		mov	r6,a
1634 : 53 F0		"S "		anl	a,#0xF0
1636 : 47		"G"		swap	a
1637 : 03 30		" 0"		add	a,#0x30
1639 : B8 4E		" N"		mov	r0,#0x4E
163B : A0		" "		mov	@r0,a
163C : 18		" "		inc	r0
163D : FE		" "		mov	a,r6
163E : 53 0F		"S "		anl	a,#0x0F
1640 : 03 30		" 0"		add	a,#0x30
1642 : A0		" "		mov	@r0,a
1643 : C4 4A		" J"		jmp	L164A
				;
1645				L1645:	;DIP addr > 0x1f
1645 : 23 80		"# "		mov	a,#0x80
1647 : 90		" "		movx	@r0,a	;ADRMODE = tonly
1648 : B6 50		" P"		jf0	L1650

L164A:
164A : B8 55		" U"		mov	r0,#0x55
164C : F0		" "		mov	a,@r0
164D : 43 C0		"C "		orl	a,#0xC0
164F : A0		" "		mov	@r0,a
1650				L1650:	;read 50/60Hz switch
1650 : 8A 0F		"  "		orl	p2,#0x0F	;GPIB_release
1652 : 9A FB		"  "		anl	p2,#0xFB	;DIPadd_sel
1654 : 80		" "		movx	a,@r0	;get DIP addr again
1655 : 47		"G"		swap	a
1656 : 53 08		"S "		anl	a,#0x08	;keep 50/60Hz bit
1658 : B8 40		" @"		mov	r0,#0x40
165A : 20		" "		xch	a,@r0
165B : 53 F7		"S "		anl	a,#0xF7
165D : 40		"@"		orl	a,@r0
165E : A0		" "		mov	@r0,a
165F : 93		" "		retr
				;
1660 : B8 27		" '"		mov	r0,#0x27
1662 : B0 40		" @"		mov	@r0,#0x40
1664 : BF 01		"  "		mov	r7,#0x01
1666 : 14 DE		"  "		call	L00DE
1668 : B8 28		" ("		mov	r0,#0x28
166A : FA		" "		mov	a,r2
166B : A9		" "		mov	r1,a
166C : A0		" "		mov	@r0,a
166D : B8 7F		"  "		mov	r0,#0x7F
166F : B0 0A		"  "		mov	@r0,#0x0A
1671 : C8		" "		dec	r0
1672 : B0 0D		"  "		mov	@r0,#0x0D
1674 : 93		" "		retr
				;
1675				L1675:
1675 : F0		" "		mov	a,@r0
1676 : A1		" "		mov	@r1,a
1677 : 18		" "		inc	r0
1678 : 19		" "		inc	r1
1679 : EA 75		" u"		djnz	r2,L1675
167B : 93		" "		retr
				;
167C : 37		"7"		cpl	a
167D : 03 07		"  "		add	a,#0x07
167F : B8 3F		" ?"		mov	r0,#0x3F
1681 : 20		" "		xch	a,@r0
1682 : 53 FC		"S "		anl	a,#0xFC
1684 : 60		"`"		add	a,@r0
1685 : A0		" "		mov	@r0,a
1686 : A4 B5		"  "		jmp	L05B5
				;
1688 : B9 51		" Q"		mov	r1,#0x51
168A : C4 8E		"  "		jmp	L068E
				;
168C : B9 53		" S"		mov	r1,#0x53
168E : F1		" "		mov	a,@r1
168F : E7		" "		rl	a
1690 : A1		" "		mov	@r1,a
1691 : 12 94		"  "		jb0	L1694
1693 : A7		" "		cpl	c
1694				L1694:
1694 : A7		" "		cpl	c
1695 : 19		" "		inc	r1
1696 : F1		" "		mov	a,@r1
1697 : F2 9B		"  "		jb7	L169B
1699 : F7		" "		rlc	a
169A : 77		"w"		rr	a
169B				L169B:
169B : E7		" "		rl	a
169C : A1		" "		mov	@r1,a
169D : 93		" "		retr

romck_prepare:
169E : BE 00		"  "		mov	r6,#0x00
16A0 : 97		" "		clr	c
16A1 : BF 00		"  "		mov	r7,#0x00
16A3				L16A3:
16A3 : 14 FC		"  "		call	L10FC
16A5 : D4 E4		"  "		call	L16E4
16A7 : EF A3		"  "		djnz	r7,L16A3
16A9 : 93		" "		retr
				;
16AA : B8 40		" @"		mov	r0,#0x40
16AC : F0		" "		mov	a,@r0
16AD : 92 BC		"  "		jb4	L16BC
16AF : F4 DA		"  "		call	L07DA
16B1 : E6 BB		"  "		jnc	L16BB
16B3 : 23 83		"# "		mov	a,#0x83
16B5 : B9 4B		" K"		mov	r1,#0x4B
16B7 : F4 CE		"  "		call	L07CE
16B9 : F4 2D		" -"		call	L072D
16BB				L16BB:
16BB : 93		" "		retr
				;
16BC				L16BC:
16BC : 23 3F		"#?"		mov	a,#0x3F
16BE : C4 B5		"  "		jmp	L06B5

clr_ram26_b6_0:		;
16C0 : B9 27		" '"		mov	r1,#0x27
16C2 : F1		" "		mov	a,@r1
16C3 : 53 80		"S "		anl	a,#0x80
16C5 : A1		" "		mov	@r1,a
16C6 : 93		" "		retr
				;
16C7 : FF		" "		mov	a,r7
16C8 : FF		" "		mov	a,r7
16C9 : FF		" "		mov	a,r7
16CA : FF		" "		mov	a,r7
16CB : FF		" "		mov	a,r7
16CC : FF		" "		mov	a,r7
16CD : FF		" "		mov	a,r7
16CE : FF		" "		mov	a,r7
16CF : FF		" "		mov	a,r7
16D0 : 9A BF		"  "		anl	p2,#0xBF
16D2 : 00		" "		nop
16D3 : 93		" "		retr
				;
16D4 : 00		" "		nop
16D5 : 9A BF		"  "		anl	p2,#0xBF
16D7 : 00		" "		nop
16D8 : 04 8E		"  "		jmp	L008E
				;
16DA : 9A BF		"  "		anl	p2,#0xBF
16DC : 00		" "		nop
16DD : 83		" "		ret
				;
16DE : 00		" "		nop
16DF : 9A BF		"  "		anl	p2,#0xBF
16E1 : 00		" "		nop
16E2 : 83		" "		ret
				;
16E3 : 00		" "		nop
;flip to A12=0 => 06E6
16E4 : 9A BF		"  "		anl	p2,#0xBF
16E6 : 00		" "		nop
16E7 : 83		" "		ret
				;
16E8 : 00		" "		nop
16E9 : 9A BF		"  "		anl	p2,#0xBF
16EB : 00		" "		nop
16EC : 83		" "		ret
				;
16ED : 00		" "		nop
16EE : 9A BF		"  "		anl	p2,#0xBF
16F0 : 00		" "		nop
16F1 : 83		" "		ret
				;
16F2 : 00		" "		nop
16F3 : 00		" "		nop
16F4 : B4 BB		"  "		call	L05BB
16F6 : 9A BF		"  "		anl	p2,#0xBF
16F8 : 00		" "		nop
16F9 : FF		" "		mov	a,r7
16FA : FF		" "		mov	a,r7
16FB : FF		" "		mov	a,r7
16FC : FF		" "		mov	a,r7
16FD : FF		" "		mov	a,r7
16FE : A3		" "		movp	a,@a
16FF : 7E		"~"		addc	a,r6
1700 : AE		" "		mov	r6,a
1701				L1701:
1701 : FF		" "		mov	a,r7
1702 : A3		" "		movp	a,@a
1703 : 7E		"~"		addc	a,r6
1704 : AE		" "		mov	r6,a
1705 : F5		" "		sel	mb1
1706 : 04 FC		"  "		jmp	L18FC
				;
1708 : B8 55		" U"		mov	r0,#0x55
170A : F0		" "		mov	a,@r0
170B : 43 06		"C "		orl	a,#0x06
170D : A0		" "		mov	@r0,a
170E : B8 5D		" ]"		mov	r0,#0x5D
1710 : B0 00		"  "		mov	@r0,#0x00
1712 : E4 1A		"  "		jmp	L071A
				;
1714 : B8 55		" U"		mov	r0,#0x55
1716 : F0		" "		mov	a,@r0
1717 : 43 05		"C "		orl	a,#0x05
1719 : A0		" "		mov	@r0,a
171A : B8 37		" 7"		mov	r0,#0x37
171C : B0 00		"  "		mov	@r0,#0x00
171E : B9 44		" D"		mov	r1,#0x44
1720 : 85		" "		clr	f0
1721 : 95		" "		cpl	f0
1722 : A5		" "		clr	f1
1723 : B5		" "		cpl	f1
1724 : FA		" "		mov	a,r2
1725 : A3		" "		movp	a,@a
1726 : C6 2D		" -"		jz	L172D
1728 : F4 C5		"  "		call	L07C5
172A : 1A		" "		inc	r2
172B : E4 24		" $"		jmp	L0724
				;
172D				L172D:
172D : B6 39		" 9"		jf0	L1739
172F : B8 55		" U"		mov	r0,#0x55
1731 : F0		" "		mov	a,@r0
1732 : 43 80		"C "		orl	a,#0x80
1734 : 76 38		"v8"		jf1	L1738
1736 : 43 40		"C@"		orl	a,#0x40
1738				L1738:
1738 : A0		" "		mov	@r0,a
1739				L1739:
1739 : 93		" "		retr
				;
173A : 13 05		"  "		addc	a,#0x05
173C : 0C		" "		movd	a,p4
				;
173D : 06		" "		db	0x06
				;
173E : 20		" "		xch	a,@r0
173F : 14 05		"  "		call	L0005
1741 : 13 14		"  "		addc	a,#0x14
1743 : 20		" "		xch	a,@r0
1744 : 20		" "		xch	a,@r0
1745 : 20		" "		xch	a,@r0
1746 : 00		" "		nop
1747 : 55		"U"		strt	t
1748 : 43 20		"C "		orl	a,#0x20
174A : 12 01		"  "		jb0	L1701
174C : 0D		" "		movd	a,p5
174D : 20		" "		xch	a,@r0
				;
174E : 06 01		"  "		db	0x06, 0x01
				;
1750 : 09		" "		in	a,p1
1751 : 0C		" "		movd	a,p4
1752 : 20		" "		xch	a,@r0
1753 : 00		" "		nop
1754 : 55		"U"		strt	t
1755 : 43 20		"C "		orl	a,#0x20
1757 : 12 0F		"  "		jb0	L170F
1759 : 0D		" "		movd	a,p5
175A : 20		" "		xch	a,@r0
				;
175B : 06 01		"  "		db	0x06, 0x01
				;
175D : 09		" "		in	a,p1
175E : 0C		" "		movd	a,p4
175F : 20		" "		xch	a,@r0
1760 : 00		" "		nop
1761 : FA		" "		mov	a,r2
1762 : FA		" "		mov	a,r2
1763 : FA		" "		mov	a,r2
1764 : FA		" "		mov	a,r2
1765 : FA		" "		mov	a,r2
1766 : FA		" "		mov	a,r2
1767 : FA		" "		mov	a,r2
1768 : FA		" "		mov	a,r2
1769 : FA		" "		mov	a,r2
176A : FA		" "		mov	a,r2
176B : FA		" "		mov	a,r2
176C : FA		" "		mov	a,r2
176D : 00		" "		nop
176E : 15		" "		dis	i
176F : 0E		" "		movd	a,p6
1770 : 03 01		"  "		add	a,#0x01
1772 : 0C		" "		movd	a,p4
1773 : 09		" "		in	a,p1
1774 : 02		" "		outl	bus,a
1775 : 12 01		"  "		jb0	L1701
1777 : 14 05		"  "		call	L0005
1779 : 04 00		"  "		jmp	reset
				;
177B : 81		" "		movx	a,@r1
177C : 04 20		"  "		jmp	L0020
				;
177E : 0C		" "		movd	a,p4
177F : 09		" "		in	a,p1
1780 : 0E		" "		movd	a,p6
				;
1781 : 0B		" "		db	0x0B
				;
1782 : 20		" "		xch	a,@r0
				;
1783 : 06 01		"  "		db	0x06, 0x01
				;
1785 : 09		" "		in	a,p1
1786 : 0C		" "		movd	a,p4
1787 : 00		" "		nop
1788 : 81		" "		movx	a,@r1
1789 : 04 20		"  "		jmp	L0020
				;
178B : 14 05		"  "		call	L0005
178D : 13 14		"  "		addc	a,#0x14
178F : 20		" "		xch	a,@r0
				;
1790 : 06 01		"  "		db	0x06, 0x01
				;
1792 : 09		" "		in	a,p1
1793 : 0C		" "		movd	a,p4
1794 : 00		" "		nop
1795 : 08		" "		ins	a,bus
1796 : 10		" "		inc	@r0
1797 : 09		" "		in	a,p1
1798 : 02		" "		outl	bus,a
1799 : 20		" "		xch	a,@r0
				;
179A : 01		" "		db	0x01
				;
179B : 04 12		"  "		jmp	L0012
				;
179D : 53 20		"S "		anl	a,#0x20
179F : 54 4F		"TO"		call	L024F
17A1 : 00		" "		nop
17A2 : 20		" "		xch	a,@r0
17A3 : 20		" "		xch	a,@r0
17A4 : 0F		" "		movd	a,p7
17A5 : 16 0C		"  "		jtf	L170C
17A7 : 04 20		"  "		jmp	L0020
				;
17A9 : 20		" "		xch	a,@r0
17AA : 00		" "		nop
17AB : 20		" "		xch	a,@r0
17AC : 20		" "		xch	a,@r0
17AD : 20		" "		xch	a,@r0
17AE : 20		" "		xch	a,@r0
17AF : 20		" "		xch	a,@r0
17B0 : 20		" "		xch	a,@r0
17B1 : 20		" "		xch	a,@r0
17B2 : 20		" "		xch	a,@r0
17B3 : 20		" "		xch	a,@r0
17B4 : 20		" "		xch	a,@r0
17B5 : 20		" "		xch	a,@r0
17B6 : 20		" "		xch	a,@r0
17B7 : 00		" "		nop
17B8 : 13 05		"  "		addc	a,#0x05
17BA : 0C		" "		movd	a,p4
				;
17BB : 06		" "		db	0x06
				;
17BC : 20		" "		xch	a,@r0
17BD : 14 05		"  "		call	L0005
17BF : 13 14		"  "		addc	a,#0x14
17C1 : 20		" "		xch	a,@r0
17C2 : 0F		" "		movd	a,p7
				;
17C3 : 0B		" "		db	0x0B
				;
17C4 : 00		" "		nop
17C5 : E6 CE		"  "		jnc	L17CE
17C7 : 53 3F		"S?"		anl	a,#0x3F
17C9 : AF		" "		mov	r7,a
17CA : F1		" "		mov	a,@r1
17CB : 53 C0		"S "		anl	a,#0xC0
17CD : 4F		"O"		orl	a,r7
17CE				L17CE:
17CE : 21		"!"		xch	a,@r1
17CF : D1		" "		xrl	a,@r1
17D0 : C6 D8		"  "		jz	L17D8
17D2 : 85		" "		clr	f0
17D3 : 53 F0		"S "		anl	a,#0xF0
17D5 : C6 D8		"  "		jz	L17D8
17D7 : A5		" "		clr	f1
17D8				L17D8:
17D8 : 19		" "		inc	r1
17D9 : 83		" "		ret
				;
17DA : F5		" "		sel	mb1
17DB : 54 4C		"TL"		call	L024C
17DD : E5		" "		sel	mb0
17DE : 83		" "		ret
				;
17DF : B9 3F		" ?"		mov	r1,#0x3F
17E1 : D4 DF		"  "		call	L06DF
17E3 : 53 0F		"S "		anl	a,#0x0F
17E5 : B8 5E		" ^"		mov	r0,#0x5E
17E7 : A0		" "		mov	@r0,a
17E8 : 93		" "		retr

sub17E9:	;get iRAM[2A], if < 0x3F then ret a |= 0x40 => check MTA/MLA ?
17E9 : B9 55		" U"		mov	r1,#0x55
17EB : F1		" "		mov	a,@r1
17EC : 53 DC		"S "		anl	a,#0xDC
17EE : A1		" "		mov	@r1,a
17EF : B9 2A		" *"		mov	r1,#0x2A
17F1 : F1		" "		mov	a,@r1
17F2 : 37		"7"		cpl	a
17F3 : F2 FB		"  "		jb7	L17FB
17F5 : B2 FB		"  "		jb5	L17FB
17F7 : F1		" "		mov	a,@r1
17F8 : 43 40		"C@"		orl	a,#0x40
17FA : A1		" "		mov	@r1,a
17FB				L17FB:
17FB : 93		" "		retr
				;
17FC : FF		" "		mov	a,r7
17FD : FF		" "		mov	a,r7
17FE : FF		" "		mov	a,r7
17FF : FF		" "		mov	a,r7
1800 : 9A BF		"  "		anl	p2,#0xBF	;clr A12
1802 : 00		" "		nop
1803 : 14 07		"  "		call	int_tmr
1805 : 04 00		"  "		jmp	reset
				;
1807 : B8 23		" #"		mov	r0,#0x23
1809 : F0		" "		mov	a,@r0
180A : B2 17		"  "		jb5	L1817
180C : B8 55		" U"		mov	r0,#0x55
180E : F0		" "		mov	a,@r0
180F : B2 89		"  "		jb5	L1889
1811 : B8 51		" Q"		mov	r0,#0x51
1813 : F0		" "		mov	a,@r0
1814 : 47		"G"		swap	a
1815 : 24 A7		"$ "		jmp	L01A7
				;
1817				L1817:
1817 : 03 2C		" ,"		add	a,#0x2C
1819 : A0		" "		mov	@r0,a
181A : B8 5D		" ]"		mov	r0,#0x5D
181C : 10		" "		inc	@r0
181D : F0		" "		mov	a,@r0
181E : 03 F4		"  "		add	a,#0xF4
1820 : B8 55		" U"		mov	r0,#0x55
1822 : F0		" "		mov	a,@r0
1823 : B2 89		"  "		jb5	L1889
1825 : 12 33		" 3"		jb0	L1833
1827 : E6 2B		" +"		jnc	L182B
1829 : 32 F2		"2 "		jb1	L18F2
182B				L182B:
182B : 32 33		"23"		jb1	L1833
182D : 72 90		"r "		jb3	L1890
182F : 92 90		"  "		jb4	L1890
1831 : 52 8A		"R "		jb2	L188A
1833				L1833:
1833 : 54 24		"T$"		call	L0224
1835 : B8 50		" P"		mov	r0,#0x50
1837 : F0		" "		mov	a,@r0
1838 : 10		" "		inc	@r0
1839 : C6 68		" h"		jz	L1868
183B : 97		" "		clr	c
183C : A5		" "		clr	f1
183D : B8 52		" R"		mov	r0,#0x52
183F : 27		"'"		clr	a
1840 : 20		" "		xch	a,@r0
1841 : C6 47		" G"		jz	L1847
1843 : A7		" "		cpl	c
1844 : C8		" "		dec	r0
1845 : D0		" "		xrl	a,@r0
1846 : A0		" "		mov	@r0,a
1847				L1847:
1847 : B8 54		" T"		mov	r0,#0x54
1849 : 27		"'"		clr	a
184A : 20		" "		xch	a,@r0
184B : C6 52		" R"		jz	L1852
184D : C8		" "		dec	r0
184E : D0		" "		xrl	a,@r0
184F : A0		" "		mov	@r0,a
1850 : 04 54		" T"		jmp	L0054
				;
1852				L1852:
1852 : E6 58		" X"		jnc	L1858
1854 : 34 06		"4 "		call	L0106
1856 : 34 37		"47"		call	L0137
1858				L1858:
1858 : B8 55		" U"		mov	r0,#0x55
185A : F0		" "		mov	a,@r0
185B : D2 73		" s"		jb6	L1873
185D : F2 7D		" }"		jb7	L187D
185F : 76 62		"vb"		jf1	L1862
1861 : 93		" "		retr
				;
1862				L1862:
1862 : BA 38		" 8"		mov	r2,#0x38
1864 : 54 02		"T "		call	L0202
1866 : 04 81		"  "		jmp	L0081
				;
1868				L1868:
1868 : E5		" "		sel	mb0
1869 : D4 50		" P"		call	L0650
186B : F5		" "		sel	mb1
186C : A5		" "		clr	f1
186D : 34 06		"4 "		call	L0106
186F : 34 17		"4 "		call	L0117
1871 : 34 37		"47"		call	L0137
1873				L1873:
1873 : 34 06		"4 "		call	L0106
1875 : 34 4A		"4J"		call	L014A
1877 : B8 55		" U"		mov	r0,#0x55
1879 : F0		" "		mov	a,@r0
187A : 37		"7"		cpl	a
187B : F2 81		"  "		jb7	L1881
187D				L187D:
187D : 34 06		"4 "		call	L0106
187F : 34 5E		"4^"		call	L015E
1881				L1881:
1881 : 34 71		"4q"		call	L0171
1883 : B8 55		" U"		mov	r0,#0x55
1885 : F0		" "		mov	a,@r0
1886 : 53 3F		"S?"		anl	a,#0x3F
1888 : A0		" "		mov	@r0,a
1889				L1889:
1889 : 93		" "		retr
				;
188A				L188A:
188A : B8 3F		" ?"		mov	r0,#0x3F
188C : F0		" "		mov	a,@r0
188D : B8 38		" 8"		mov	r0,#0x38
188F : A0		" "		mov	@r0,a
1890				L1890:
1890 : B8 38		" 8"		mov	r0,#0x38
1892 : F0		" "		mov	a,@r0
1893 : C8		" "		dec	r0
1894 : 20		" "		xch	a,@r0
1895 : D0		" "		xrl	a,@r0
1896 : C6 A6		"  "		jz	L18A6
1898 : 53 E0		"S "		anl	a,#0xE0
189A : C6 A2		"  "		jz	L18A2
189C : BB 38		" 8"		mov	r3,#0x38
189E : F4 06		"  "		call	L0706
18A0 : 04 A6		"  "		jmp	L00A6
				;
18A2				L18A2:
18A2 : BB 38		" 8"		mov	r3,#0x38
18A4 : F4 26		" &"		call	L0726
18A6				L18A6:
18A6 : B8 55		" U"		mov	r0,#0x55
18A8 : F0		" "		mov	a,@r0
18A9 : 92 AD		"  "		jb4	L18AD
18AB : 04 E6		"  "		jmp	L00E6
				;
18AD				L18AD:
18AD : 85		" "		clr	f0
18AE : 95		" "		cpl	f0
18AF : A5		" "		clr	f1
18B0 : B5		" "		cpl	f1
18B1 : B8 3D		" ="		mov	r0,#0x3D
18B3 : F0		" "		mov	a,@r0
18B4 : 72 F7		"r "		jb3	L18F7
18B6 : B8 39		" 9"		mov	r0,#0x39
18B8 : B9 38		" 8"		mov	r1,#0x38
18BA : F1		" "		mov	a,@r1
18BB : 03 FF		"  "		add	a,#0xFF
18BD : AE		" "		mov	r6,a
18BE : 97		" "		clr	c
18BF : A7		" "		cpl	c
18C0 : B9 44		" D"		mov	r1,#0x44
18C2 : F0		" "		mov	a,@r0
18C3 : B4 06		"  "		call	L0506
18C5 : 18		" "		inc	r0
18C6 : B4 1F		"  "		call	L051F
18C8 : B4 23		" #"		call	L0523
18CA : B4 1F		"  "		call	L051F
18CC : B4 23		" #"		call	L0523
18CE : FE		" "		mov	a,r6
18CF : 32 D8		"2 "		jb1	L18D8
18D1 : B4 1F		"  "		call	L051F
18D3 : FE		" "		mov	a,r6
18D4 : 12 D8		"  "		jb0	L18D8
18D6 : B4 23		" #"		call	L0523
18D8				L18D8:
18D8 : FE		" "		mov	a,r6
18D9 : 53 03		"S "		anl	a,#0x03
18DB : 37		"7"		cpl	a
18DC : 03 B7		"  "		add	a,#0xB7
18DE : AA		" "		mov	r2,a
18DF : 97		" "		clr	c
18E0 : E5		" "		sel	mb0
18E1 : F4 24		" $"		call	L0724
18E3 : D4 AA		"  "		call	L06AA
18E5 : F5		" "		sel	mb1
18E6 : B8 55		" U"		mov	r0,#0x55
18E8 : F0		" "		mov	a,@r0
18E9 : 53 08		"S "		anl	a,#0x08
18EB : 77		"w"		rr	a
18EC : 43 E3		"C "		orl	a,#0xE3
18EE : 50		"P"		anl	a,@r0
18EF : A0		" "		mov	@r0,a
18F0 : 04 33		" 3"		jmp	L0033
				;
18F2				L18F2:
18F2 : 53 FD		"S "		anl	a,#0xFD
18F4 : A0		" "		mov	@r0,a
18F5 : 04 2B		" +"		jmp	L002B
18F7				L18F7:
18F7 : 44 18		"D "		jmp	L0218
				;
18F9 : FF		" "		mov	a,r7
18FA : FF		" "		mov	a,r7
18FB : FF		" "		mov	a,r7
18FC : FF		" "		mov	a,r7
18FD : A3		" "		movp	a,@a
18FE : 7E		"~"		addc	a,r6
18FF : AE		" "		mov	r6,a
1900 : FF		" "		mov	a,r7
1901 : A3		" "		movp	a,@a
1902 : 7E		"~"		addc	a,r6
1903 : AE		" "		mov	r6,a
1904 : 44 FC		"D "		jmp	L02FC

;
1906 : 76 49		"vI"		jf1	L1949
1908 : B5		" "		cpl	f1
1909 : 9A C0		"  "		anl	p2,#0xC0
190B : 8A 08		"  "		orl	p2,#0x08
190D : 54 0D		"T "		call	L020D
190F : 9A C0		"  "		anl	p2,#0xC0
1911 : 8A 10		"  "		orl	p2,#0x10
1913 : BA 2E		" ."		mov	r2,#0x2E
1915 : 44 02		"D "		jmp	L0202
				;
1917 : 23 FC		"# "		mov	a,#0xFC
1919 : 34 7A		"4z"		call	L017A
191B : 23 FD		"# "		mov	a,#0xFD
191D : 34 93		"4 "		call	L0193
191F : BA 24		" $"		mov	r2,#0x24
1921 : 54 02		"T "		call	L0202
1923 : 23 B8		"# "		mov	a,#0xB8
1925 : 34 7A		"4z"		call	L017A
1927 : 54 00		"T "		call	L0200
1929 : 23 C8		"# "		mov	a,#0xC8
192B : 34 7A		"4z"		call	L017A
192D : 54 00		"T "		call	L0200
192F : 23 2A		"#*"		mov	a,#0x2A
1931 : 34 7A		"4z"		call	L017A
1933 : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS
1935 : 44 00		"D "		jmp	L1A00	;wtf dispstuf


1937 : 23 BC		"# "		mov	a,#0xBC
1939 : 34 7A		"4z"		call	L017A
193B : B8 53		" S"		mov	r0,#0x53
193D : F0		" "		mov	a,@r0
193E : 34 93		"4 "		call	L0193
1940 : B8 51		" Q"		mov	r0,#0x51
1942 : F0		" "		mov	a,@r0
1943 : 34 97		"4 "		call	L0197
1945 : BA 20		"  "		mov	r2,#0x20
1947 : 54 02		"T "		call	L0202
1949				L1949:
1949 : 93		" "		retr
				;
194A : 23 1A		"# "		mov	a,#0x1A
194C : 34 7A		"4z"		call	L017A
194E : BE 0C		"  "		mov	r6,#0x0C
1950 : B8 4F		" O"		mov	r0,#0x4F
1952				L1952:
1952 : F0		" "		mov	a,@r0
1953 : 47		"G"		swap	a
1954 : 34 97		"4 "		call	L0197
1956 : C8		" "		dec	r0
1957 : EE 52		" R"		djnz	r6,L1952
1959 : BA 34		" 4"		mov	r2,#0x34
195B : 54 02		"T "		call	L0202
195D : 93		" "		retr
				;
195E : 23 0A		"# "		mov	a,#0x0A
1960 : 34 7A		"4z"		call	L017A
1962 : BE 0C		"  "		mov	r6,#0x0C
1964 : B8 4F		" O"		mov	r0,#0x4F
1966				L1966:
1966 : F0		" "		mov	a,@r0
1967 : 34 97		"4 "		call	L0197
1969 : C8		" "		dec	r0
196A : EE 66		" f"		djnz	r6,L1966
196C : BA 34		" 4"		mov	r2,#0x34
196E : 54 02		"T "		call	L0202
1970 : 93		" "		retr
				;
1971 : BA 0A		"  "		mov	r2,#0x0A
1973 : 54 02		"T "		call	L0202
1975 : 9A CF		"  "		anl	p2,#0xCF
1977 : 8A 0F		"  "		orl	p2,#0x0F
1979 : 93		" "		retr
				;
197A : 9A D0		"  "		anl	p2,#0xD0
197C : 8A 08		"  "		orl	p2,#0x08
197E : 54 0D		"T "		call	L020D
1980 : BA 08		"  "		mov	r2,#0x08
1982				L1982:
1982 : 12 88		"  "		jb0	L1988
1984 : 9A FB		"  "		anl	p2,#0xFB
1986 : 24 8A		"$ "		jmp	L018A
				;
1988				L1988:
1988 : 8A 04		"  "		orl	p2,#0x04
198A : 77		"w"		rr	a
198B : 54 0F		"T "		call	L1A0F
198D : EA 82		"  "		djnz	r2,L1982
198F : 9A F3		"  "		anl	p2,#0xF3
1991 : 44 0D		"D "		jmp	L020D
				;
1993 : BA 08		"  "		mov	r2,#0x08
1995 : 24 99		"$ "		jmp	L0199
				;
1997 : BA 04		"  "		mov	r2,#0x04
1999				L1999:
1999 : 12 9F		"  "		jb0	L199F
199B : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS
199D : 24 A1		"$ "		jmp	L19A1
				;
199F				L199F:
199F : 8A 02		"  "		orl	p2,#0x02	;GPIB_release

L19A1:
19A1 : 77		"w"		rr	a
19A2 : 54 0F		"T "		call	L1A0F	;wtf dispstuf
19A4 : EA 99		"  "		djnz	r2,L1999
19A6 : 93		" "		retr

;
19A7 : A0		" "		mov	@r0,a
19A8 : 18		" "		inc	r0
19A9 : F0		" "		mov	a,@r0
19AA : 47		"G"		swap	a
19AB : A0		" "		mov	@r0,a
19AC : 23 CD		"# "		mov	a,#0xCD
19AE : 3A		":"		outl	p2,a

L19AF:		;GPIB_getSPSTAT
19AF : B8 03		"  "		mov	r0,#0x03
19B1 : 80		" "		movx	a,@r0	;SPSTAT
19B2 : F7		" "		rlc	a
19B3 : F7		" "		rlc	a	;Carry = SRQS
19B4 : E5		" "		sel	mb0
19B5 : D4 88		"  "		call	L1688
19B7 : B8 04		"  "		mov	r0,#0x04
19B9 : 80		" "		movx	a,@r0
19BA : 67		"g"		rrc	a
19BB : 67		"g"		rrc	a
19BC : 67		"g"		rrc	a
19BD : D4 88		"  "		call	L0688
19BF : 80		" "		movx	a,@r0
19C0 : 67		"g"		rrc	a
19C1 : 67		"g"		rrc	a
19C2 : D4 88		"  "		call	L0688
19C4 : B8 26		" &"		mov	r0,#0x26
19C6 : F0		" "		mov	a,@r0
19C7 : 47		"G"		swap	a
19C8 : 67		"g"		rrc	a
19C9 : D4 88		"  "		call	L0688
19CB : 97		" "		clr	c
19CC : D4 8C		"  "		call	L068C
19CE : B8 40		" @"		mov	r0,#0x40
19D0 : F0		" "		mov	a,@r0
19D1 : 67		"g"		rrc	a
19D2 : 67		"g"		rrc	a
19D3 : 67		"g"		rrc	a
19D4 : A7		" "		cpl	c
19D5 : D4 8C		"  "		call	L068C
19D7 : C8		" "		dec	r0
19D8 : F0		" "		mov	a,@r0
19D9 : 03 80		"  "		add	a,#0x80
19DB : 03 20		"  "		add	a,#0x20
19DD : D4 8C		"  "		call	L068C
19DF : F0		" "		mov	a,@r0
19E0 : 03 60		" `"		add	a,#0x60
19E2 : 03 20		"  "		add	a,#0x20
19E4 : D4 8C		"  "		call	L068C
19E6 : 18		" "		inc	r0
19E7 : F0		" "		mov	a,@r0
19E8 : 67		"g"		rrc	a
19E9 : 67		"g"		rrc	a
19EA : A7		" "		cpl	c
19EB : D4 8C		"  "		call	L068C
19ED : F0		" "		mov	a,@r0
19EE : 67		"g"		rrc	a
19EF : A7		" "		cpl	c
19F0 : D4 8C		"  "		call	L068C
19F2 : 97		" "		clr	c
19F3 : D4 8C		"  "		call	L068C
19F5 : B8 24		" $"		mov	r0,#0x24
19F7 : F0		" "		mov	a,@r0
19F8 : F7		" "		rlc	a
19F9 : F7		" "		rlc	a
19FA : D4 8C		"  "		call	L068C
19FC : F5		" "		sel	mb1
19FD : 93		" "		retr
				;
19FE : FF		" "		mov	a,r7
19FF : FF		" "		mov	a,r7

1A00 : BA 2C		" ,"		mov	r2,#0x2C	;44 clocks !
1A02				L1A02:
1A02 : 8A 01		"  "		orl	p2,#0x01
1A04 : 9A FE		"  "		anl	p2,#0xFE	;pulse dispck1
1A06 : 8A 20		"  "		orl	p2,#0x20
1A08 : 9A DF		"  "		anl	p2,#0xDF	;pulse dispck2
1A0A : EA 02		"  "		djnz	r2,L1A02
1A0C : 93		" "		retr
				;
1A0D : 54 0F		"T "		call	L1A0F

L1A0F:
1A0F : 8A 01		"  "		orl	p2,#0x01
1A11 : 9A FE		"  "		anl	p2,#0xFE	;pulse dispck1
1A13 : 8A 20		"  "		orl	p2,#0x20	;pulse dispck2
1A15 : 9A DF		"  "		anl	p2,#0xDF
1A17 : 93		" "		retr
				;
1A18 : B8 37		" 7"		mov	r0,#0x37
1A1A : B0 00		"  "		mov	@r0,#0x00
1A1C : 97		" "		clr	c
1A1D : A7		" "		cpl	c
1A1E : B9 44		" D"		mov	r1,#0x44
1A20 : BA A2		"  "		mov	r2,#0xA2
1A22 : 04 E0		"  "		jmp	L00E0
				;
1A24 : B8 4F		" O"		mov	r0,#0x4F
1A26 : B9 41		" A"		mov	r1,#0x41
1A28 : F0		" "		mov	a,@r0
1A29 : D2 2F		" /"		jb6	L1A2F
1A2B : F1		" "		mov	a,@r1
1A2C : 92 2F		" /"		jb4	L1A2F
1A2E : 93		" "		retr
				;
1A2F				L1A2F:
1A2F : F0		" "		mov	a,@r0
1A30 : D3 40		" @"		xrl	a,#0x40
1A32 : A0		" "		mov	@r0,a
1A33 : F1		" "		mov	a,@r1
1A34 : 53 EF		"S "		anl	a,#0xEF
1A36 : A1		" "		mov	@r1,a
1A37 : B8 55		" U"		mov	r0,#0x55
1A39 : F0		" "		mov	a,@r0
1A3A : 43 40		"C@"		orl	a,#0x40
1A3C : A0		" "		mov	@r0,a
1A3D : 93		" "		retr
				;
1A3E : BA B8		"  "		mov	r2,#0xB8
1A40 : B8 44		" D"		mov	r0,#0x44
1A42 : 97		" "		clr	c
1A43 : E5		" "		sel	mb0
1A44 : F4 08		"  "		call	L0708
1A46 : F5		" "		sel	mb1
1A47 : 14 68		" h"		call	L0068
1A49 : E5		" "		sel	mb0
1A4A : 04 8C		"  "		jmp	L008C
				;
1A4C : 8A 0F		"  "		orl	p2,#0x0F
1A4E : 9A F7		"  "		anl	p2,#0xF7
1A50 : B8 00		"  "		mov	r0,#0x00
1A52 : 80		" "		movx	a,@r0
1A53 : A9		" "		mov	r1,a
1A54 : 37		"7"		cpl	a
1A55 : 90		" "		movx	@r0,a
1A56 : 80		" "		movx	a,@r0
1A57 : D9		" "		xrl	a,r1
1A58 : 43 F0		"C "		orl	a,#0xF0
1A5A : 03 01		"  "		add	a,#0x01
1A5C : 83		" "		ret
				;
1A5D : B8 51		" Q"		mov	r0,#0x51
1A5F : B0 FF		"  "		mov	@r0,#0xFF
1A61 : B8 53		" S"		mov	r0,#0x53
1A63 : B0 FF		"  "		mov	@r0,#0xFF
1A65 : BA 61		" a"		mov	r2,#0x61
1A67 : E5		" "		sel	mb0
1A68 : 14 B9		"  "		call	L00B9
1A6A : 35		"5"		dis	tcnti
1A6B				L1A6B:
1A6B : 34 18		"4 "		call	L0118
1A6D : 89 FF		"  "		orl	p1,#0xFF
1A6F : 99 00		"  "		anl	p1,#0x00
1A71 : F2 6B		" k"		jb7	L1A6B
1A73 : F5		" "		sel	mb1
1A74 : 44 74		"Dt"		jmp	L0274
				;
1A76 : B9 4F		" O"		mov	r1,#0x4F
1A78 : F1		" "		mov	a,@r1
1A79 : 53 40		"S@"		anl	a,#0x40
1A7B : AE		" "		mov	r6,a
1A7C : 83		" "		ret
				;
1A7D : B9 4F		" O"		mov	r1,#0x4F
1A7F : F1		" "		mov	a,@r1
1A80 : 4E		"N"		orl	a,r6
1A81 : A1		" "		mov	@r1,a
1A82 : 83		" "		ret
				;
1A83 : BA AF		"  "		mov	r2,#0xAF
1A85 : 54 8D		"T "		call	L028D
1A87 : BA AF		"  "		mov	r2,#0xAF
1A89 : 54 8D		"T "		call	L028D
1A8B : BA 3A		" :"		mov	r2,#0x3A
1A8D : 97		" "		clr	c
1A8E : E5		" "		sel	mb0
1A8F : F4 1E		"  "		call	L071E
1A91 : F5		" "		sel	mb1
1A92 : 14 68		" h"		call	L0068
1A94 : 89 FF		"  "		orl	p1,#0xFF
1A96 : 99 00		"  "		anl	p1,#0x00
1A98 : 83		" "		ret
;dup 0xFF
1AFA : FF		" "		mov	a,r7
1AFB : FF		" "		mov	a,r7
1AFC : FF		" "		mov	a,r7
1AFD : A3		" "		movp	a,@a
1AFE : 7E		"~"		addc	a,r6
1AFF : AE		" "		mov	r6,a
1B00 : FF		" "		mov	a,r7
1B01 : A3		" "		movp	a,@a
1B02 : 7E		"~"		addc	a,r6
1B03 : AE		" "		mov	r6,a
1B04 : 84 FC		"  "		jmp	L04FC
				;
1B06 : B8 3F		" ?"		mov	r0,#0x3F
1B08 : F0		" "		mov	a,@r0
1B09 : 47		"G"		swap	a
1B0A : 77		"w"		rr	a
1B0B : 53 07		"S "		anl	a,#0x07
1B0D : 03 32		" 2"		add	a,#0x32
1B0F : A3		" "		movp	a,@a
1B10 : AB		" "		mov	r3,a
1B11 : 47		"G"		swap	a
1B12 : 43 F0		"C "		orl	a,#0xF0
1B14 : B9 5E		" ^"		mov	r1,#0x5E
1B16 : 61		"a"		add	a,@r1
1B17 : F2 29		" )"		jb7	L1B29
1B19 : 17		" "		inc	a
1B1A : AA		" "		mov	r2,a
1B1B : FB		" "		mov	a,r3
1B1C : 53 0F		"S "		anl	a,#0x0F
1B1E : AB		" "		mov	r3,a
1B1F : 37		"7"		cpl	a
1B20 : 6A		"j"		add	a,r2
1B21 : F2 26		" &"		jb7	L1B26
1B23 : FB		" "		mov	a,r3
1B24 : 64 2B		"d+"		jmp	L032B
				;
1B26				L1B26:
1B26 : FA		" "		mov	a,r2
1B27 : 64 2B		"d+"		jmp	L032B
				;
1B29				L1B29:
1B29 : 23 01		"# "		mov	a,#0x01
1B2B : E7		" "		rl	a
1B2C : E7		" "		rl	a
1B2D : 20		" "		xch	a,@r0
1B2E : 53 E3		"S "		anl	a,#0xE3
1B30 : 40		"@"		orl	a,@r0
1B31 : A0		" "		mov	@r0,a
1B32 : 93		" "		retr
				;
1B33 : F5		" "		sel	mb1
1B34 : E4 C7		"  "		jmp	L07C7
				;
1B36 : C7		" "		mov	a,psw
				;
1B37 : E2 E2		"  "		db	0xE2, 0xE2
				;
1B39 : 61		"a"		add	a,@r1
1B3A : FF		" "		mov	a,r7
dup 0xFF
1CFB : FF		" "		mov	a,r7
1CFC : FF		" "		mov	a,r7
1CFD : A3		" "		movp	a,@a
1CFE : 7E		"~"		addc	a,r6
1CFF : AE		" "		mov	r6,a
1D00 : FF		" "		mov	a,r7
1D01 : A3		" "		movp	a,@a
1D02 : 7E		"~"		addc	a,r6
1D03 : AE		" "		mov	r6,a
1D04 : C4 FC		"  "		jmp	L0EFC
				;
1D06 : F2 1B		"  "		jb7	L1D1B
1D08 : FE		" "		mov	a,r6
1D09 : 53 60		"S`"		anl	a,#0x60
1D0B : D3 20		"  "		xrl	a,#0x20
1D0D : 96 11		"  "		jnz	L1D11
1D0F : A4 17		"  "		jmp	L0517
				;
1D11				L1D11:
1D11 : 23 20		"# "		mov	a,#0x20
1D13 : A4 29		" )"		jmp	L0529

ascii_getsign: (a=val, r1=&dest)
1D15 : F2 1B		"  "		jb7	L1D1B
1D17 : 23 2B		"#+"		mov	a,#0x2B
1D19 : A4 29		" )"		jmp	L1D29
				;
1D1B				L1D1B:
1D1B : 23 2D		"#-"		mov	a,#0x2D
1D1D : A4 29		" )"		jmp	L1D29


1D1F : F0		" "		mov	a,@r0
1D20 : 47		"G"		swap	a
1D21 : A4 25		" %"		jmp	L1D25
				;
1D23 : F0		" "		mov	a,@r0
1D24 : 18		" "		inc	r0
L1D25:
1D25 : 53 0F		"S "		anl	a,#0x0F
1D27 : 43 30		"C0"		orl	a,#0x30

L1D29:
1D29 : F6 2E		" ."		jc	L1D2E
1D2B : A1		" "		mov	@r1,a
1D2C : 19		" "		inc	r1
1D2D : 83		" "		ret
				;
1D2E				L1D2E:
1D2E : AF		" "		mov	r7,a
1D2F : D3 30		" 0"		xrl	a,#0x30
1D31 : C6 3E		" >"		jz	L1D3E
1D33 : D3 05		"  "		xrl	a,#0x05
1D35 : 96 39		" 9"		jnz	L1D39
1D37 : BF 13		"  "		mov	r7,#0x13
1D39				L1D39:
1D39 : E5		" "		sel	mb0
1D3A : F4 CA		"  "		call	L07CA
1D3C : F5		" "		sel	mb1
1D3D : 83		" "		ret
				;
1D3E				L1D3E:
1D3E : BF 0F		"  "		mov	r7,#0x0F
1D40 : A4 39		" 9"		jmp	L0539

dup 0xFF
1DFE : FF		" "		mov	a,r7
1DFF : FF		" "		mov	a,r7
1E00 : E5		" "		sel	mb0
1E01 : FE		" "		mov	a,r6
1E02 : 07		" "		dec	a
1E03 : C6 13		"  "		jz	L1E13
1E05 : 07		" "		dec	a
1E06 : C6 1E		"  "		jz	L1E1E
1E08 : 07		" "		dec	a
1E09 : C6 17		"  "		jz	L1E17
1E0B : 07		" "		dec	a
1E0C : C6 30		" 0"		jz	L1E30
1E0E : 07		" "		dec	a
1E0F : C6 38		" 8"		jz	L1E38
1E11 : 44 87		"D "		jmp	GPIB_RXbad
				;
1E13				L1E13:		;toujours mb0
1E13 : 34 D6		"4 "		call	L11D6
1E15 : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
1E17				L1E17:
1E17 : 34 AF		"4 "		call	L11AF
1E19				L1E19:
1E19 : 53 DF		"S "		anl	a,#0xDF
1E1B : A0		" "		mov	@r0,a
1E1C : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
1E1E				L1E1E:	;toujours mb0
1E1E : 8A 0F		"  "		orl	p2,#0x0F
1E20 : 9A FD		"  "		anl	p2,#0xFD	;GPIB_CS
1E22 : B8 05		"  "		mov	r0,#0x05
1E24 : 23 04		"# "		mov	a,#0x04
1E26 : 90		" "		movx	@r0,a	;AUXMODE = TRIG
1E27 : 34 AF		"4 "		call	L11AF
1E29				L1E29:
1E29 : C8		" "		dec	r0
1E2A : F0		" "		mov	a,@r0	;a = ADDRSTAT?
1E2B : 53 DF		"S "		anl	a,#0xDF
1E2D : A0		" "		mov	@r0,a
1E2E : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
1E30				L1E30:
1E30 : 34 AF		"4 "		call	L11AF
1E32 : 53 DF		"S "		anl	a,#0xDF
1E34 : A0		" "		mov	@r0,a
1E35 : 97		" "		clr	c
1E36 : E6 29		" )"		jnc	L1E29
1E38				L1E38:
1E38 : 34 AF		"4 "		call	L11AF
1E3A : 43 04		"C "		orl	a,#0x04
1E3C : 96 19		"  "		jnz	L1E19

1E3E : FF		" "		mov	a,r7

dup 0xFF
1EFB : FF		" "		mov	a,r7
1EFC : FF		" "		mov	a,r7
1EFD : A3		" "		movp	a,@a
1EFE : 7E		"~"		addc	a,r6
1EFF : AE		" "		mov	r6,a
1F00 : FF		" "		mov	a,r7
1F01				L1F01:
1F01 : A3		" "		movp	a,@a
1F02 : 7E		"~"		addc	a,r6
1F03 : AE		" "		mov	r6,a
1F04 : E5		" "		sel	mb0
1F05 : 83		" "		ret	;ret to 16a5 !
				;
1F06 : FB		" "		mov	a,r3
1F07 : A8		" "		mov	r0,a
1F08 : F0		" "		mov	a,@r0
1F09 : 47		"G"		swap	a
1F0A : 77		"w"		rr	a
1F0B				L1F0B:
1F0B : 53 07		"S "		anl	a,#0x07
1F0D				L1F0D:
1F0D : AF		" "		mov	r7,a
1F0E : 6F		"o"		add	a,r7
1F0F : 6F		"o"		add	a,r7
1F10 : 03 76		" v"		add	a,#0x76
1F12 : A8		" "		mov	r0,a
1F13 : 54 76		"Tv"		call	L0276
1F15 : B9 4D		" M"		mov	r1,#0x4D
1F17 : BA 03		"  "		mov	r2,#0x03
1F19				L1F19:
1F19 : F8		" "		mov	a,r0
1F1A : 18		" "		inc	r0
1F1B : A3		" "		movp	a,@a
1F1C : E5		" "		sel	mb0
1F1D : F4 CE		"  "		call	L07CE
1F1F : F5		" "		sel	mb1
1F20				L1F20:
1F20 : EA 19		"  "		djnz	r2,L1F19
1F22 : 54 7D		"T}"		call	L027D
1F24 : E4 2A		" *"		jmp	L072A
				;
1F26 : 85		" "		clr	f0
1F27 : 95		" "		cpl	f0
1F28 : A5		" "		clr	f1
1F29 : B5		" "		cpl	f1
1F2A : BA AF		"  "		mov	r2,#0xAF
1F2C : 97		" "		clr	c
1F2D : E5		" "		sel	mb0
1F2E : F4 1E		"  "		call	L071E
1F30 : F5		" "		sel	mb1
1F31 : FB		" "		mov	a,r3
1F32 : A9		" "		mov	r1,a
1F33 : E5		" "		sel	mb0
1F34 : D4 DF		"  "		call	L06DF
1F36 : F5		" "		sel	mb1
1F37 : 53 0F		"S "		anl	a,#0x0F
1F39 : E7		" "		rl	a
1F3A : 03 61		" a"		add	a,#0x61
1F3C : A8		" "		mov	r0,a
1F3D : A3		" "		movp	a,@a
1F3E : B9 4C		" L"		mov	r1,#0x4C
1F40 : E5		" "		sel	mb0
1F41 : F4 CE		"  "		call	L07CE
1F43 : 18		" "		inc	r0
1F44 : F8		" "		mov	a,r0
1F45 : A3		" "		movp	a,@a
1F46 : A9		" "		mov	r1,a
1F47 : C6 4C		" L"		jz	L1F4C
1F49 : F1		" "		mov	a,@r1
1F4A : D2 5D		" ]"		jb6	L1F5D
1F4C				L1F4C:
1F4C : B8 45		" E"		mov	r0,#0x45
1F4E : BA 03		"  "		mov	r2,#0x03
1F50				L1F50:
1F50 : F0		" "		mov	a,@r0
1F51 : 53 3F		"S?"		anl	a,#0x3F
1F53 : A0		" "		mov	@r0,a
1F54 : 18		" "		inc	r0
1F55 : EA 50		" P"		djnz	r2,L1F50
1F57 : F1		" "		mov	a,@r1
1F58 : 03 40		" @"		add	a,#0x40
1F5A : A1		" "		mov	@r1,a
1F5B : 85		" "		clr	f0
1F5C : A5		" "		clr	f1
1F5D				L1F5D:
1F5D : F4 2D		" -"		call	L072D
1F5F : F5		" "		sel	mb1
1F60 : 93		" "		retr
				;
1F61 : 20		" "		xch	a,@r0
1F62 : 00		" "		nop
1F63 : 0D		" "		movd	a,p5
1F64 : 46 0D		"F "		jnt1	L1F0D
1F66 : 47		"G"		swap	a
1F67 : 20		" "		xch	a,@r0
1F68 : 45		"E"		strt	cnt
1F69 : 20		" "		xch	a,@r0
1F6A : 46 20		"F "		jnt1	L1F20
1F6C : 47		"G"		swap	a
				;
1F6D : 0B		" "		db	0x0B
				;
1F6E : 45		"E"		strt	cnt
				;
1F6F : 0B		" "		db	0x0B
				;
1F70 : 46 0B		"F "		jnt1	L1F0B
1F72 : 47		"G"		swap	a
1F73 : 0D		" "		movd	a,p5
1F74 : 45		"E"		strt	cnt
1F75 : 0D		" "		movd	a,p5
1F76 : 46 18		"F "		jnt1	L1F18
1F78 : 46 16		"F "		jnt1	L1F16
1F7A : 04 03		"  "		jmp	int_ext
				;
1F7C : 16 01		"  "		jtf	L1F01
1F7E : 03 0F		"  "		add	a,#0x0F
1F80 : 08		" "		ins	a,bus
1F81 : 0D		" "		movd	a,p5
1F82 : 0F		" "		movd	a,p7
1F83 : 08		" "		ins	a,bus
1F84 : 0D		" "		movd	a,p5
				;
1F85 : 01		" "		db	0x01
				;
1F86 : 04 03		"  "		jmp	int_ext
				;
1F88 : 01 01		"  "		db	0x01, 0x01
				;
1F8A : 03 0F		"  "		add	a,#0x0F
1F8C : 08		" "		ins	a,bus
1F8D : 0D		" "		movd	a,p5

L1F8E
1F8E : FF		" "		mov	a,r7	;r7 = rxbyte
1F8F : 53 3F		"S?"		anl	a,#0x3F
1F91 : AD		" "		mov	r5,a
1F92 : FF		" "		mov	a,r7
1F93 : 53 E0		"S "		anl	a,#0xE0
1F95 : C6 DA		"  "		jz	L1FDA
1F97 : F0		" "		mov	a,@r0
1F98 : D2 BC		"  "		jb6	L1FBC
1F9A : 03 A4		"  "		add	a,#0xA4
1F9C : A9		" "		mov	r1,a
1F9D : BE F3		"  "		mov	r6,#0xF3
1F9F				L1F9F:
1F9F : 1E		" "		inc	r6
1FA0 : FE		" "		mov	a,r6
1FA1 : 1E		" "		inc	r6
1FA2 : A3		" "		movp	a,@a
1FA3 : C6 C8		"  "		jz	L1FC8
1FA5 : DF		" "		xrl	a,r7
1FA6 : 96 9F		"  "		jnz	L1F9F
1FA8 : FE		" "		mov	a,r6
1FA9 : A3		" "		movp	a,@a
1FAA : AE		" "		mov	r6,a
1FAB : F9		" "		mov	a,r1
1FAC : D3 44		" D"		xrl	a,#0x44
1FAE : 96 BF		"  "		jnz	L1FBF
1FB0 : FE		" "		mov	a,r6
1FB1 : 10		" "		inc	@r0
1FB2 : 21		"!"		xch	a,@r1
1FB3 : D1		" "		xrl	a,@r1
1FB4 : C6 BC		"  "		jz	L1FBC
1FB6 : B8 55		" U"		mov	r0,#0x55
1FB8 : F0		" "		mov	a,@r0
1FB9 : 43 C0		"C "		orl	a,#0xC0
1FBB : A0		" "		mov	@r0,a
1FBC				L1FBC:
1FBC : E5		" "		sel	mb0
1FBD : 44 8F		"D "		jmp	GPIB_reparse_ISR1
				;
1FBF				L1FBF:
1FBF : C9		" "		dec	r1
1FC0 : F1		" "		mov	a,@r1
1FC1 : 53 C0		"S "		anl	a,#0xC0
1FC3 : C6 D0		"  "		jz	L1FD0
1FC5 : 19		" "		inc	r1
1FC6 : FE		" "		mov	a,r6
1FC7 : AD		" "		mov	r5,a
1FC8				L1FC8:
1FC8 : F9		" "		mov	a,r1
1FC9 : D3 50		" P"		xrl	a,#0x50
1FCB : C6 D6		"  "		jz	L1FD6
1FCD : FD		" "		mov	a,r5
1FCE : E4 B1		"  "		jmp	L07B1
				;
1FD0				L1FD0:
1FD0 : FE		" "		mov	a,r6
1FD1 : 53 C0		"S "		anl	a,#0xC0
1FD3 : 41		"A"		orl	a,@r1
1FD4 : E4 B2		"  "		jmp	L07B2
				;
1FD6				L1FD6:
1FD6 : B0 E0		"  "		mov	@r0,#0xE0
1FD8 : E4 BC		"  "		jmp	L07BC
				;
1FDA				L1FDA:
1FDA : B8 55		" U"		mov	r0,#0x55
1FDC : F0		" "		mov	a,@r0
1FDD : B2 E6		"  "		jb5	L1FE6
1FDF : B8 2A		" *"		mov	r0,#0x2A
1FE1 : B0 00		"  "		mov	@r0,#0x00
1FE3 : E5		" "		sel	mb0
1FE4 : 44 5C		"D\"		jmp	L025C
				;
1FE6				L1FE6:
1FE6 : B8 51		" Q"		mov	r0,#0x51
1FE8 : 27		"'"		clr	a
1FE9 : A0		" "		mov	@r0,a
1FEA : B8 53		" S"		mov	r0,#0x53
1FEC : A0		" "		mov	@r0,a
1FED : 14 68		" h"		call	L0068
1FEF : 23 CD		"# "		mov	a,#0xCD
1FF1 : 3A		":"		outl	p2,a
1FF2 : E4 DF		"  "		jmp	L07DF
				;
1FF4 : 2C		","		xch	a,r4
				;
1FF5 : E0		" "		db	0xE0
				;
1FF6 : 2E		"."		xch	a,r6
1FF7 : 60		"`"		add	a,@r0
1FF8 : 3A		":"		outl	p2,a
1FF9 : A0		" "		mov	@r0,a
1FFA : 00		" "		nop
1FFB : FF		" "		mov	a,r7
1FFC : FF		" "		mov	a,r7
1FFD : FF		" "		mov	a,r7
1FFE : FF		" "		mov	a,r7
				;
;possibly dummy byte to bring checksum == 0 (see romck_prepare)
1FFF : BC		" "		db	0xBC

;--------------------------------------------------------------
