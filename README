Some utils to work with HP 3478A calibration SRAM data dumps

GPLv3, but seriously who is going to use this

********* compiling
you need a C compiler and getopt .
run `make` , nuff said

********* using / examples
This accepts RAM dumps both in "ASCII dump format" (as received over GPIB) or raw binary (1 byte per nibble).

"-t" mode : just verify checksums
```
$ ./hp3478util  -b ../calsample1.bin -t
**** ./hp3478util
**** (c) 2018 fenugrec
entry 0x00: OK
entry 0x01: OK
entry 0x02: OK
entry 0x03: OK
entry 0x04: OK
entry 0x05: OK
entry 0x06: OK
entry 0x07: OK
entry 0x08: OK
entry 0x09: OK
entry 0x0A: OK
entry 0x0B: OK
entry 0x0C: OK
entry 0x0D: OK
entry 0x0E: OK
entry 0x0F: OK
entry 0x10: OK
entry 0x11: OK
```

"-d" mode : dump entries
```
$ ./hp3478util  -b ../calsample1.bin -d
**** ./hp3478util
**** (c) 2018 fenugrec
entry 00: 0 0 0 3 5 6 2 2 0 2 2 
entry 01: 0 0 0 0 3 4 2 2 C 0 1 
entry 02: 0 0 0 0 0 3 2 1 1 3 C 
entry 03: 9 9 9 9 9 7 2 3 C 5 1 
entry 04: 0 0 0 0 0 0 2 2 2 D 0 
entry 05: 0 0 0 0 0 0 0 0 0 0 0 
entry 06: 0 0 0 7 8 6 2 C D 3 5 
entry 07: 0 0 0 0 8 5 1 C F E 3 
entry 08: 0 0 0 0 0 8 0 5 5 C 4 
entry 09: 0 0 0 0 0 1 0 5 0 0 D 
entry 0A: 0 0 0 0 0 1 0 5 E 3 1 
entry 0B: 0 0 0 0 0 1 0 4 5 5 5 
entry 0C: 0 0 0 0 0 1 0 5 C 1 C 
entry 0D: 0 0 0 0 0 0 0 4 0 E 0 
entry 0E: 0 0 0 1 1 2 3 3 0 3 3 
entry 0F: 0 0 0 0 1 1 3 2 5 0 1 
entry 10: 0 0 0 0 0 0 0 0 0 0 0 
entry 11: 0 0 0 7 8 6 3 D C D 2 
```
